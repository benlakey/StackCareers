android.support.v4.app.ActivityCompatHoneycomb -> android.support.v4.app.a:
    29:30:void invalidateOptionsMenu(android.app.Activity) -> a
android.support.v4.app.BackStackRecord -> android.support.v4.app.b:
    android.support.v4.app.FragmentManagerImpl mManager -> a
    android.support.v4.app.BackStackRecord$Op mHead -> b
    android.support.v4.app.BackStackRecord$Op mTail -> c
    int mNumOp -> d
    int mEnterAnim -> e
    int mExitAnim -> f
    int mPopEnterAnim -> g
    int mPopExitAnim -> h
    int mTransition -> i
    int mTransitionStyle -> j
    boolean mAddToBackStack -> k
    boolean mAllowAddToBackStack -> l
    java.lang.String mName -> m
    boolean mCommitted -> n
    int mIndex -> o
    int mBreadCrumbTitleRes -> p
    java.lang.CharSequence mBreadCrumbTitleText -> q
    int mBreadCrumbShortTitleRes -> r
    java.lang.CharSequence mBreadCrumbShortTitleText -> s
    221:233:java.lang.String toString() -> toString
    237:238:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    241:331:void dump(java.lang.String,java.io.PrintWriter,boolean) -> a
    338:338:int getId() -> a
    342:342:int getBreadCrumbTitleRes() -> b
    346:346:int getBreadCrumbShortTitleRes() -> c
    350:353:java.lang.CharSequence getBreadCrumbTitle() -> d
    357:360:java.lang.CharSequence getBreadCrumbShortTitle() -> e
    364:376:void addOp(android.support.v4.app.BackStackRecord$Op) -> a
    379:380:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    384:385:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    389:390:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    394:418:void doAddOp(int,android.support.v4.app.Fragment,java.lang.String,int) -> a
    421:421:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    425:430:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    434:439:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    443:448:android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    452:457:android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    461:466:android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    470:475:android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    479:479:android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    484:488:android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    492:493:android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    497:498:android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    502:508:android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    512:512:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    516:521:android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    525:527:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    531:533:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    537:539:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    543:545:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    549:571:void bumpBackStackNesting(int) -> a
    574:574:int commit() -> commit
    578:578:int commitAllowingStateLoss() -> commitAllowingStateLoss
    582:596:int commitInternal(boolean) -> a
    600:688:void run() -> run
    691:772:void popFromBackStack(boolean) -> b
    775:775:java.lang.String getName() -> f
    779:779:int getTransition() -> g
    783:783:int getTransitionStyle() -> h
    787:787:boolean isEmpty() -> isEmpty
android.support.v4.app.BackStackRecord$Op -> android.support.v4.app.c:
    android.support.v4.app.BackStackRecord$Op next -> a
    android.support.v4.app.BackStackRecord$Op prev -> b
    int cmd -> c
    android.support.v4.app.Fragment fragment -> d
    int enterAnim -> e
    int exitAnim -> f
    int popEnterAnim -> g
    int popExitAnim -> h
    java.util.ArrayList removed -> i
android.support.v4.app.BackStackState -> android.support.v4.app.BackStackState:
    int[] mOps -> a
    int mTransition -> b
    int mTransitionStyle -> c
    java.lang.String mName -> d
    int mIndex -> e
    int mBreadCrumbTitleRes -> f
    java.lang.CharSequence mBreadCrumbTitleText -> g
    int mBreadCrumbShortTitleRes -> h
    java.lang.CharSequence mBreadCrumbShortTitleText -> i
    android.os.Parcelable$Creator CREATOR -> CREATOR
    96:138:android.support.v4.app.BackStackRecord instantiate(android.support.v4.app.FragmentManagerImpl) -> a
    142:142:int describeContents() -> describeContents
    146:155:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.BackStackState$1 -> android.support.v4.app.d:
    160:160:android.support.v4.app.BackStackState createFromParcel(android.os.Parcel) -> a
    164:164:android.support.v4.app.BackStackState[] newArray(int) -> a
    158:158:java.lang.Object[] newArray(int) -> newArray
    158:158:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.DialogFragment -> android.support.v4.app.DialogFragment:
    int STYLE_NORMAL -> STYLE_NORMAL
    int STYLE_NO_TITLE -> STYLE_NO_TITLE
    int STYLE_NO_FRAME -> STYLE_NO_FRAME
    int STYLE_NO_INPUT -> STYLE_NO_INPUT
    java.lang.String SAVED_DIALOG_STATE_TAG -> SAVED_DIALOG_STATE_TAG
    java.lang.String SAVED_STYLE -> SAVED_STYLE
    java.lang.String SAVED_THEME -> SAVED_THEME
    java.lang.String SAVED_CANCELABLE -> SAVED_CANCELABLE
    java.lang.String SAVED_SHOWS_DIALOG -> SAVED_SHOWS_DIALOG
    java.lang.String SAVED_BACK_STACK_ID -> SAVED_BACK_STACK_ID
    int mStyle -> mStyle
    int mTheme -> mTheme
    boolean mCancelable -> mCancelable
    boolean mShowsDialog -> mShowsDialog
    int mBackStackId -> mBackStackId
    android.app.Dialog mDialog -> mDialog
    boolean mViewDestroyed -> mViewDestroyed
    boolean mDismissed -> mDismissed
    boolean mShownByMe -> mShownByMe
    102:109:void setStyle(int,int) -> setStyle
    123:128:void show(android.support.v4.app.FragmentManager,java.lang.String) -> show
    140:145:int show(android.support.v4.app.FragmentTransaction,java.lang.String) -> show
    155:156:void dismiss() -> dismiss
    165:166:void dismissAllowingStateLoss() -> dismissAllowingStateLoss
    169:192:void dismissInternal(boolean) -> dismissInternal
    195:195:android.app.Dialog getDialog() -> getDialog
    199:199:int getTheme() -> getTheme
    212:214:void setCancelable(boolean) -> setCancelable
    220:220:boolean isCancelable() -> isCancelable
    241:242:void setShowsDialog(boolean) -> setShowsDialog
    248:248:boolean getShowsDialog() -> getShowsDialog
    253:259:void onAttach(android.app.Activity) -> onAttach
    263:270:void onDetach() -> onDetach
    274:286:void onCreate(android.os.Bundle) -> onCreate
    291:310:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    337:337:android.app.Dialog onCreateDialog(android.os.Bundle) -> onCreateDialog
    341:341:void onCancel(android.content.DialogInterface) -> onCancel
    344:351:void onDismiss(android.content.DialogInterface) -> onDismiss
    355:378:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    382:387:void onStart() -> onStart
    391:413:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    417:421:void onStop() -> onStop
    428:437:void onDestroyView() -> onDestroyView
android.support.v4.app.Fragment -> android.support.v4.app.Fragment:
    java.util.HashMap sClassMap -> sClassMap
    int INITIALIZING -> INITIALIZING
    int CREATED -> CREATED
    int ACTIVITY_CREATED -> ACTIVITY_CREATED
    int STOPPED -> STOPPED
    int STARTED -> STARTED
    int RESUMED -> RESUMED
    int mState -> mState
    android.view.View mAnimatingAway -> mAnimatingAway
    int mStateAfterAnimating -> mStateAfterAnimating
    android.os.Bundle mSavedFragmentState -> mSavedFragmentState
    android.util.SparseArray mSavedViewState -> mSavedViewState
    int mIndex -> mIndex
    java.lang.String mWho -> mWho
    android.os.Bundle mArguments -> mArguments
    android.support.v4.app.Fragment mTarget -> mTarget
    int mTargetIndex -> mTargetIndex
    int mTargetRequestCode -> mTargetRequestCode
    boolean mAdded -> mAdded
    boolean mRemoving -> mRemoving
    boolean mResumed -> mResumed
    boolean mFromLayout -> mFromLayout
    boolean mInLayout -> mInLayout
    boolean mRestored -> mRestored
    int mBackStackNesting -> mBackStackNesting
    android.support.v4.app.FragmentManagerImpl mFragmentManager -> mFragmentManager
    android.support.v4.app.FragmentActivity mActivity -> mActivity
    android.support.v4.app.FragmentManagerImpl mChildFragmentManager -> mChildFragmentManager
    android.support.v4.app.Fragment mParentFragment -> mParentFragment
    int mFragmentId -> mFragmentId
    int mContainerId -> mContainerId
    java.lang.String mTag -> mTag
    boolean mHidden -> mHidden
    boolean mDetached -> mDetached
    boolean mRetainInstance -> mRetainInstance
    boolean mRetaining -> mRetaining
    boolean mHasMenu -> mHasMenu
    boolean mMenuVisible -> mMenuVisible
    boolean mCalled -> mCalled
    int mNextAnim -> mNextAnim
    android.view.ViewGroup mContainer -> mContainer
    android.view.View mView -> mView
    android.view.View mInnerView -> mInnerView
    boolean mDeferStart -> mDeferStart
    boolean mUserVisibleHint -> mUserVisibleHint
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    369:369:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String) -> instantiate
    388:409:android.support.v4.app.Fragment instantiate(android.content.Context,java.lang.String,android.os.Bundle) -> instantiate
    416:426:void restoreViewState(android.os.Bundle) -> restoreViewState
    429:435:void setIndex(int,android.support.v4.app.Fragment) -> setIndex
    438:438:boolean isInBackStack() -> isInBackStack
    445:445:boolean equals(java.lang.Object) -> equals
    452:452:int hashCode() -> hashCode
    457:472:java.lang.String toString() -> toString
    481:481:int getId() -> getId
    488:488:java.lang.String getTag() -> getTag
    499:503:void setArguments(android.os.Bundle) -> setArguments
    510:510:android.os.Bundle getArguments() -> getArguments
    522:527:void setInitialSavedState(android.support.v4.app.Fragment$SavedState) -> setInitialSavedState
    541:543:void setTargetFragment(android.support.v4.app.Fragment,int) -> setTargetFragment
    549:549:android.support.v4.app.Fragment getTargetFragment() -> getTargetFragment
    556:556:int getTargetRequestCode() -> getTargetRequestCode
    563:563:android.support.v4.app.FragmentActivity getActivity() -> getActivity
    570:573:android.content.res.Resources getResources() -> getResources
    583:583:java.lang.CharSequence getText(int) -> getText
    593:593:java.lang.String getString(int) -> getString
    606:606:java.lang.String getString(int,java.lang.Object[]) -> getString
    620:620:android.support.v4.app.FragmentManager getFragmentManager() -> getFragmentManager
    628:640:android.support.v4.app.FragmentManager getChildFragmentManager() -> getChildFragmentManager
    648:648:android.support.v4.app.Fragment getParentFragment() -> getParentFragment
    655:655:boolean isAdded() -> isAdded
    664:664:boolean isDetached() -> isDetached
    673:673:boolean isRemoving() -> isRemoving
    684:684:boolean isInLayout() -> isInLayout
    692:692:boolean isResumed() -> isResumed
    701:701:boolean isVisible() -> isVisible
    713:713:boolean isHidden() -> isHidden
    724:724:void onHiddenChanged(boolean) -> onHiddenChanged
    741:746:void setRetainInstance(boolean) -> setRetainInstance
    749:749:boolean getRetainInstance() -> getRetainInstance
    760:766:void setHasOptionsMenu(boolean) -> setHasOptionsMenu
    778:784:void setMenuVisibility(boolean) -> setMenuVisibility
    800:805:void setUserVisibleHint(boolean) -> setUserVisibleHint
    812:812:boolean getUserVisibleHint() -> getUserVisibleHint
    819:827:android.support.v4.app.LoaderManager getLoaderManager() -> getLoaderManager
    835:839:void startActivity(android.content.Intent) -> startActivity
    846:850:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    867:867:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    875:875:android.view.LayoutInflater getLayoutInflater(android.os.Bundle) -> getLayoutInflater
    921:922:void onInflate(android.app.Activity,android.util.AttributeSet,android.os.Bundle) -> onInflate
    929:930:void onAttach(android.app.Activity) -> onAttach
    936:936:android.view.animation.Animation onCreateAnimation(int,boolean,int) -> onCreateAnimation
    954:955:void onCreate(android.os.Bundle) -> onCreate
    978:978:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    992:992:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    1001:1001:android.view.View getView() -> getView
    1018:1019:void onActivityCreated(android.os.Bundle) -> onActivityCreated
    1033:1034:void onViewStateRestored(android.os.Bundle) -> onViewStateRestored
    1042:1054:void onStart() -> onStart
    1063:1064:void onResume() -> onResume
    1086:1086:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    1089:1090:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    1098:1099:void onPause() -> onPause
    1107:1108:void onStop() -> onStop
    1111:1112:void onLowMemory() -> onLowMemory
    1124:1125:void onDestroyView() -> onDestroyView
    1132:1142:void onDestroy() -> onDestroy
    1151:1171:void initState() -> initState
    1178:1179:void onDetach() -> onDetach
    1195:1195:void onCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> onCreateOptionsMenu
    1212:1212:void onPrepareOptionsMenu(android.view.Menu) -> onPrepareOptionsMenu
    1222:1222:void onDestroyOptionsMenu() -> onDestroyOptionsMenu
    1243:1243:boolean onOptionsItemSelected(android.view.MenuItem) -> onOptionsItemSelected
    1254:1254:void onOptionsMenuClosed(android.view.Menu) -> onOptionsMenuClosed
    1274:1275:void onCreateContextMenu(android.view.ContextMenu,android.view.View,android.view.ContextMenu$ContextMenuInfo) -> onCreateContextMenu
    1288:1289:void registerForContextMenu(android.view.View) -> registerForContextMenu
    1299:1300:void unregisterForContextMenu(android.view.View) -> unregisterForContextMenu
    1320:1320:boolean onContextItemSelected(android.view.MenuItem) -> onContextItemSelected
    1333:1407:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    1410:1416:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> findFragmentByWho
    1420:1430:void instantiateChildFragmentManager() -> instantiateChildFragmentManager
    1433:1453:void performCreate(android.os.Bundle) -> performCreate
    1457:1460:android.view.View performCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> performCreateView
    1464:1476:void performActivityCreated(android.os.Bundle) -> performActivityCreated
    1479:1495:void performStart() -> performStart
    1498:1512:void performResume() -> performResume
    1515:1519:void performConfigurationChanged(android.content.res.Configuration) -> performConfigurationChanged
    1522:1526:void performLowMemory() -> performLowMemory
    1538:1548:boolean performCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> performCreateOptionsMenu
    1552:1562:boolean performPrepareOptionsMenu(android.view.Menu) -> performPrepareOptionsMenu
    1566:1578:boolean performOptionsItemSelected(android.view.MenuItem) -> performOptionsItemSelected
    1582:1592:boolean performContextItemSelected(android.view.MenuItem) -> performContextItemSelected
    1596:1604:void performOptionsMenuClosed(android.view.Menu) -> performOptionsMenuClosed
    1607:1614:void performSaveInstanceState(android.os.Bundle) -> performSaveInstanceState
    1617:1626:void performPause() -> performPause
    1629:1638:void performStop() -> performStop
    1641:1658:void performReallyStop() -> performReallyStop
    1661:1673:void performDestroyView() -> performDestroyView
    1676:1685:void performDestroy() -> performDestroy
android.support.v4.app.Fragment$1 -> android.support.v4.app.e:
    android.support.v4.app.Fragment this$0 -> a
    1424:1427:android.view.View findViewById(int) -> a
android.support.v4.app.Fragment$InstantiationException -> android.support.v4.app.f:
android.support.v4.app.Fragment$SavedState -> android.support.v4.app.Fragment$SavedState:
    android.os.Bundle mState -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    314:314:int describeContents() -> describeContents
    319:320:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.Fragment$SavedState$1 -> android.support.v4.app.g:
    325:325:android.support.v4.app.Fragment$SavedState createFromParcel(android.os.Parcel) -> a
    329:329:android.support.v4.app.Fragment$SavedState[] newArray(int) -> a
    323:323:java.lang.Object[] newArray(int) -> newArray
    323:323:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentActivity -> android.support.v4.app.FragmentActivity:
    java.lang.String TAG -> TAG
    java.lang.String FRAGMENTS_TAG -> FRAGMENTS_TAG
    int HONEYCOMB -> HONEYCOMB
    int MSG_REALLY_STOPPED -> MSG_REALLY_STOPPED
    int MSG_RESUME_PENDING -> MSG_RESUME_PENDING
    android.os.Handler mHandler -> mHandler
    android.support.v4.app.FragmentManagerImpl mFragments -> mFragments
    android.support.v4.app.FragmentContainer mContainer -> mContainer
    boolean mCreated -> mCreated
    boolean mResumed -> mResumed
    boolean mStopped -> mStopped
    boolean mReallyStopped -> mReallyStopped
    boolean mRetaining -> mRetaining
    boolean mOptionsMenuInvalidated -> mOptionsMenuInvalidated
    boolean mCheckedForLoaderManager -> mCheckedForLoaderManager
    boolean mLoadersStarted -> mLoadersStarted
    java.util.HashMap mAllLoaderManagers -> mAllLoaderManagers
    android.support.v4.app.LoaderManagerImpl mLoaderManager -> mLoaderManager
    147:167:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    174:177:void onBackPressed() -> onBackPressed
    184:186:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    193:211:void onCreate(android.os.Bundle) -> onCreate
    218:229:boolean onCreatePanelMenu(int,android.view.Menu) -> onCreatePanelMenu
    237:312:android.view.View onCreateView(java.lang.String,android.content.Context,android.util.AttributeSet) -> onCreateView
    320:328:void onDestroy() -> onDestroy
    335:344:boolean onKeyDown(int,android.view.KeyEvent) -> onKeyDown
    352:354:void onLowMemory() -> onLowMemory
    361:373:boolean onMenuItemSelected(int,android.view.MenuItem) -> onMenuItemSelected
    382:388:void onPanelClosed(int,android.view.Menu) -> onPanelClosed
    395:402:void onPause() -> onPause
    416:418:void onNewIntent(android.content.Intent) -> onNewIntent
    431:435:void onResume() -> onResume
    442:446:void onPostResume() -> onPostResume
    455:456:void onResumeFragments() -> onResumeFragments
    463:473:boolean onPreparePanel(int,android.view.View,android.view.Menu) -> onPreparePanel
    483:518:java.lang.Object onRetainNonConfigurationInstance() -> onRetainNonConfigurationInstance
    526:531:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    539:580:void onStart() -> onStart
    587:593:void onStop() -> onStop
    604:604:java.lang.Object onRetainCustomNonConfigurationInstance() -> onRetainCustomNonConfigurationInstance
    612:614:java.lang.Object getLastCustomNonConfigurationInstance() -> getLastCustomNonConfigurationInstance
    623:633:void supportInvalidateOptionsMenu() -> supportInvalidateOptionsMenu
    646:670:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    673:735:java.lang.String viewToString(android.view.View) -> viewToString
    739:757:void dumpViewHierarchy(java.lang.String,java.io.PrintWriter,android.view.View) -> dumpViewHierarchy
    760:766:void doReallyStop(boolean) -> doReallyStop
    776:788:void onReallyStop() -> onReallyStop
    798:798:void onAttachFragment(android.support.v4.app.Fragment) -> onAttachFragment
    805:805:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
    814:818:void startActivityForResult(android.content.Intent,int) -> startActivityForResult
    825:833:void startActivityFromFragment(android.support.v4.app.Fragment,android.content.Intent,int) -> startActivityFromFragment
    837:844:void invalidateSupportFragment(java.lang.String) -> invalidateSupportFragment
    854:859:android.support.v4.app.LoaderManager getSupportLoaderManager() -> getSupportLoaderManager
    863:875:android.support.v4.app.LoaderManagerImpl getLoaderManager(java.lang.String,boolean,boolean) -> getLoaderManager
android.support.v4.app.FragmentActivity$1 -> android.support.v4.app.h:
    android.support.v4.app.FragmentActivity this$0 -> a
    84:97:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.app.FragmentActivity$2 -> android.support.v4.app.i:
    android.support.v4.app.FragmentActivity this$0 -> a
    104:104:android.view.View findViewById(int) -> a
android.support.v4.app.FragmentActivity$FragmentTag -> android.support.v4.app.j:
    int[] Fragment -> a
android.support.v4.app.FragmentActivity$NonConfigurationInstances -> android.support.v4.app.k:
    java.lang.Object activity -> a
    java.lang.Object custom -> b
    java.util.HashMap children -> c
    java.util.ArrayList fragments -> d
    java.util.HashMap loaders -> e
android.support.v4.app.FragmentContainer -> android.support.v4.app.l:
    android.view.View findViewById(int) -> a
android.support.v4.app.FragmentManager -> android.support.v4.app.m:
    int POP_BACK_STACK_INCLUSIVE -> POP_BACK_STACK_INCLUSIVE
    android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    139:139:android.support.v4.app.FragmentTransaction openTransaction() -> openTransaction
    boolean executePendingTransactions() -> executePendingTransactions
    android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    void popBackStack() -> popBackStack
    boolean popBackStackImmediate() -> popBackStackImmediate
    void popBackStack(java.lang.String,int) -> popBackStack
    boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    void popBackStack(int,int) -> popBackStack
    boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    int getBackStackEntryCount() -> getBackStackEntryCount
    android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    334:335:void enableDebugLogging(boolean) -> enableDebugLogging
android.support.v4.app.FragmentManager$BackStackEntry -> android.support.v4.app.n:
    int getId() -> a
    java.lang.String getName() -> f
    int getBreadCrumbTitleRes() -> b
    int getBreadCrumbShortTitleRes() -> c
    java.lang.CharSequence getBreadCrumbTitle() -> d
    java.lang.CharSequence getBreadCrumbShortTitle() -> e
android.support.v4.app.FragmentManager$OnBackStackChangedListener -> android.support.v4.app.o:
    void onBackStackChanged() -> a
android.support.v4.app.FragmentManagerImpl -> android.support.v4.app.p:
    boolean DEBUG -> a
    boolean HONEYCOMB -> b
    java.util.ArrayList mPendingActions -> c
    java.lang.Runnable[] mTmpActions -> d
    boolean mExecutingActions -> e
    java.util.ArrayList mActive -> f
    java.util.ArrayList mAdded -> g
    java.util.ArrayList mAvailIndices -> h
    java.util.ArrayList mBackStack -> i
    java.util.ArrayList mCreatedMenus -> j
    java.util.ArrayList mBackStackIndices -> k
    java.util.ArrayList mAvailBackStackIndices -> l
    java.util.ArrayList mBackStackChangeListeners -> m
    int mCurState -> n
    android.support.v4.app.FragmentActivity mActivity -> o
    android.support.v4.app.FragmentContainer mContainer -> p
    android.support.v4.app.Fragment mParent -> q
    boolean mNeedMenuInvalidate -> r
    boolean mStateSaved -> s
    boolean mDestroyed -> t
    java.lang.String mNoTransactionsBecause -> u
    boolean mHavePendingDeferredStart -> v
    android.os.Bundle mStateBundle -> w
    android.util.SparseArray mStateArray -> x
    java.lang.Runnable mExecCommit -> y
    android.view.animation.Interpolator DECELERATE_QUINT -> z
    android.view.animation.Interpolator DECELERATE_CUBIC -> A
    android.view.animation.Interpolator ACCELERATE_QUINT -> B
    android.view.animation.Interpolator ACCELERATE_CUBIC -> C
    434:451:void throwException(java.lang.RuntimeException) -> a
    456:456:android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    461:461:boolean executePendingTransactions() -> executePendingTransactions
    466:471:void popBackStack() -> popBackStack
    475:477:boolean popBackStackImmediate() -> popBackStackImmediate
    482:487:void popBackStack(java.lang.String,int) -> popBackStack
    491:493:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    498:506:void popBackStack(int,int) -> popBackStack
    510:515:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    520:520:int getBackStackEntryCount() -> getBackStackEntryCount
    525:525:android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    530:534:void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    538:541:void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    545:550:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    554:567:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    572:580:android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    585:595:java.lang.String toString() -> toString
    600:709:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
    720:730:android.view.animation.Animation makeOpenCloseAnimation(android.content.Context,float,float,float,float) -> a
    734:737:android.view.animation.Animation makeFadeAnimation(android.content.Context,float,float) -> a
    742:796:android.view.animation.Animation loadAnimation(android.support.v4.app.Fragment,int,boolean,int) -> a
    800:809:void performPendingDeferredStart(android.support.v4.app.Fragment) -> a
    814:1063:void moveToState(android.support.v4.app.Fragment,int,int,int,boolean) -> a
    1066:1067:void moveToState(android.support.v4.app.Fragment) -> b
    1070:1071:void moveToState(int,boolean) -> a
    1074:1104:void moveToState(int,int,int,boolean) -> a
    1107:1115:void startPendingDeferredFragments() -> a
    1118:1134:void makeActive(android.support.v4.app.Fragment) -> c
    1137:1149:void makeInactive(android.support.v4.app.Fragment) -> d
    1152:1171:void addFragment(android.support.v4.app.Fragment,boolean) -> a
    1174:1188:void removeFragment(android.support.v4.app.Fragment,int,int) -> a
    1191:1207:void hideFragment(android.support.v4.app.Fragment,int,int) -> b
    1210:1226:void showFragment(android.support.v4.app.Fragment,int,int) -> c
    1229:1245:void detachFragment(android.support.v4.app.Fragment,int,int) -> d
    1248:1267:void attachFragment(android.support.v4.app.Fragment,int,int) -> e
    1270:1288:android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    1292:1310:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    1314:1322:android.support.v4.app.Fragment findFragmentByWho(java.lang.String) -> a
    1326:1334:void checkStateLoss() -> q
    1337:1353:void enqueueAction(java.lang.Runnable,boolean) -> a
    1356:1372:int allocBackStackIndex(android.support.v4.app.BackStackRecord) -> a
    1376:1398:void setBackStackIndex(int,android.support.v4.app.BackStackRecord) -> a
    1401:1409:void freeBackStackIndex(int) -> a
    1415:1464:boolean execPendingActions() -> b
    1468:1473:void reportBackStackChanged() -> c
    1476:1481:void addBackStackState(android.support.v4.app.BackStackRecord) -> b
    1484:1543:boolean popBackStackState(android.os.Handler,java.lang.String,int,int) -> a
    1547:1562:java.util.ArrayList retainNonConfig() -> d
    1566:1579:void saveFragmentViewState(android.support.v4.app.Fragment) -> e
    1582:1611:android.os.Bundle saveFragmentBasicState(android.support.v4.app.Fragment) -> f
    1617:1727:android.os.Parcelable saveAllState() -> e
    1733:1840:void restoreAllState(android.os.Parcelable,java.util.ArrayList) -> a
    1844:1848:void attachActivity(android.support.v4.app.FragmentActivity,android.support.v4.app.FragmentContainer,android.support.v4.app.Fragment) -> a
    1851:1852:void noteStateNotSaved() -> f
    1855:1857:void dispatchCreate() -> g
    1860:1862:void dispatchActivityCreated() -> h
    1865:1867:void dispatchStart() -> i
    1870:1872:void dispatchResume() -> j
    1875:1876:void dispatchPause() -> k
    1882:1885:void dispatchStop() -> l
    1888:1889:void dispatchReallyStop() -> m
    1892:1893:void dispatchDestroyView() -> n
    1896:1902:void dispatchDestroy() -> o
    1905:1913:void dispatchConfigurationChanged(android.content.res.Configuration) -> a
    1916:1924:void dispatchLowMemory() -> p
    1927:1955:boolean dispatchCreateOptionsMenu(android.view.Menu,android.view.MenuInflater) -> a
    1959:1970:boolean dispatchPrepareOptionsMenu(android.view.Menu) -> a
    1974:1984:boolean dispatchOptionsItemSelected(android.view.MenuItem) -> a
    1988:1998:boolean dispatchContextItemSelected(android.view.MenuItem) -> b
    2002:2010:void dispatchOptionsMenuClosed(android.view.Menu) -> b
    2013:2025:int reverseTransit(int) -> b
    2037:2049:int transitToStyleIndex(int,boolean) -> b
android.support.v4.app.FragmentManagerImpl$1 -> android.support.v4.app.q:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    429:430:void run() -> run
android.support.v4.app.FragmentManagerImpl$2 -> android.support.v4.app.r:
    android.support.v4.app.FragmentManagerImpl this$0 -> a
    468:469:void run() -> run
android.support.v4.app.FragmentManagerImpl$3 -> android.support.v4.app.s:
    java.lang.String val$name -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    484:485:void run() -> run
android.support.v4.app.FragmentManagerImpl$4 -> android.support.v4.app.t:
    int val$id -> a
    int val$flags -> b
    android.support.v4.app.FragmentManagerImpl this$0 -> c
    503:504:void run() -> run
android.support.v4.app.FragmentManagerImpl$5 -> android.support.v4.app.u:
    android.support.v4.app.Fragment val$fragment -> a
    android.support.v4.app.FragmentManagerImpl this$0 -> b
    994:999:void onAnimationEnd(android.view.animation.Animation) -> onAnimationEnd
    1002:1002:void onAnimationRepeat(android.view.animation.Animation) -> onAnimationRepeat
    1005:1005:void onAnimationStart(android.view.animation.Animation) -> onAnimationStart
android.support.v4.app.FragmentManagerState -> android.support.v4.app.FragmentManagerState:
    android.support.v4.app.FragmentState[] mActive -> a
    int[] mAdded -> b
    android.support.v4.app.BackStackState[] mBackStack -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    353:353:int describeContents() -> describeContents
    357:360:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentManagerState$1 -> android.support.v4.app.v:
    365:365:android.support.v4.app.FragmentManagerState createFromParcel(android.os.Parcel) -> a
    369:369:android.support.v4.app.FragmentManagerState[] newArray(int) -> a
    363:363:java.lang.Object[] newArray(int) -> newArray
    363:363:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentState -> android.support.v4.app.FragmentState:
    java.lang.String mClassName -> a
    int mIndex -> b
    boolean mFromLayout -> c
    int mFragmentId -> d
    int mContainerId -> e
    java.lang.String mTag -> f
    boolean mRetainInstance -> g
    boolean mDetached -> h
    android.os.Bundle mArguments -> i
    android.os.Bundle mSavedFragmentState -> j
    android.support.v4.app.Fragment mInstance -> k
    android.os.Parcelable$Creator CREATOR -> CREATOR
    89:116:android.support.v4.app.Fragment instantiate(android.support.v4.app.FragmentActivity,android.support.v4.app.Fragment) -> a
    120:120:int describeContents() -> describeContents
    124:134:void writeToParcel(android.os.Parcel,int) -> writeToParcel
android.support.v4.app.FragmentState$1 -> android.support.v4.app.w:
    139:139:android.support.v4.app.FragmentState createFromParcel(android.os.Parcel) -> a
    143:143:android.support.v4.app.FragmentState[] newArray(int) -> a
    137:137:java.lang.Object[] newArray(int) -> newArray
    137:137:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost -> android.support.v4.app.FragmentTabHost:
    java.util.ArrayList mTabs -> a
    android.widget.FrameLayout mRealTabContent -> b
    android.content.Context mContext -> c
    android.support.v4.app.FragmentManager mFragmentManager -> d
    int mContainerId -> e
    android.widget.TabHost$OnTabChangeListener mOnTabChangeListener -> f
    android.support.v4.app.FragmentTabHost$TabInfo mLastTab -> g
    boolean mAttached -> h
    140:172:void initFragmentTabHost(android.content.Context,android.util.AttributeSet) -> a
    181:181:void setup() -> setup
    186:190:void setup(android.content.Context,android.support.v4.app.FragmentManager) -> a
    193:205:void setup(android.content.Context,android.support.v4.app.FragmentManager,int) -> a
    208:215:void ensureContent() -> a
    219:220:void setOnTabChangedListener(android.widget.TabHost$OnTabChangeListener) -> setOnTabChangedListener
    223:242:void addTab(android.widget.TabHost$TabSpec,java.lang.Class,android.os.Bundle) -> a
    246:281:void onAttachedToWindow() -> onAttachedToWindow
    285:287:void onDetachedFromWindow() -> onDetachedFromWindow
    291:294:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    299:302:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    306:315:void onTabChanged(java.lang.String) -> onTabChanged
    318:349:android.support.v4.app.FragmentTransaction doTabChanged(java.lang.String,android.support.v4.app.FragmentTransaction) -> a
android.support.v4.app.FragmentTabHost$1 -> android.support.v4.app.x:
android.support.v4.app.FragmentTabHost$DummyTabFactory -> android.support.v4.app.y:
    android.content.Context mContext -> a
    83:86:android.view.View createTabContent(java.lang.String) -> createTabContent
android.support.v4.app.FragmentTabHost$SavedState -> android.support.v4.app.FragmentTabHost$SavedState:
    java.lang.String curTab -> a
    android.os.Parcelable$Creator CREATOR -> CREATOR
    104:106:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    110:110:java.lang.String toString() -> toString
android.support.v4.app.FragmentTabHost$SavedState$1 -> android.support.v4.app.z:
    118:118:android.support.v4.app.FragmentTabHost$SavedState createFromParcel(android.os.Parcel) -> a
    122:122:android.support.v4.app.FragmentTabHost$SavedState[] newArray(int) -> a
    116:116:java.lang.Object[] newArray(int) -> newArray
    116:116:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
android.support.v4.app.FragmentTabHost$TabInfo -> android.support.v4.app.aa:
    java.lang.String tag -> a
    java.lang.Class clss -> b
    android.os.Bundle args -> c
    android.support.v4.app.Fragment fragment -> d
    61:61:android.support.v4.app.Fragment access$102(android.support.v4.app.FragmentTabHost$TabInfo,android.support.v4.app.Fragment) -> a
    61:61:android.support.v4.app.Fragment access$100(android.support.v4.app.FragmentTabHost$TabInfo) -> a
    61:61:java.lang.String access$200(android.support.v4.app.FragmentTabHost$TabInfo) -> b
    61:61:java.lang.Class access$300(android.support.v4.app.FragmentTabHost$TabInfo) -> c
    61:61:android.os.Bundle access$400(android.support.v4.app.FragmentTabHost$TabInfo) -> d
android.support.v4.app.FragmentTransaction -> android.support.v4.app.ab:
    int TRANSIT_ENTER_MASK -> TRANSIT_ENTER_MASK
    int TRANSIT_EXIT_MASK -> TRANSIT_EXIT_MASK
    int TRANSIT_UNSET -> TRANSIT_UNSET
    int TRANSIT_NONE -> TRANSIT_NONE
    int TRANSIT_FRAGMENT_OPEN -> TRANSIT_FRAGMENT_OPEN
    int TRANSIT_FRAGMENT_CLOSE -> TRANSIT_FRAGMENT_CLOSE
    int TRANSIT_FRAGMENT_FADE -> TRANSIT_FRAGMENT_FADE
    android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    boolean isEmpty() -> isEmpty
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
    android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    int commit() -> commit
    int commitAllowingStateLoss() -> commitAllowingStateLoss
android.support.v4.app.ListFragment -> android.support.v4.app.ListFragment:
    int INTERNAL_EMPTY_ID -> INTERNAL_EMPTY_ID
    int INTERNAL_PROGRESS_CONTAINER_ID -> INTERNAL_PROGRESS_CONTAINER_ID
    int INTERNAL_LIST_CONTAINER_ID -> INTERNAL_LIST_CONTAINER_ID
    android.os.Handler mHandler -> mHandler
    java.lang.Runnable mRequestFocus -> mRequestFocus
    android.widget.AdapterView$OnItemClickListener mOnClickListener -> mOnClickListener
    android.widget.ListAdapter mAdapter -> mAdapter
    android.widget.ListView mList -> mList
    android.view.View mEmptyView -> mEmptyView
    android.widget.TextView mStandardEmptyView -> mStandardEmptyView
    android.view.View mProgressContainer -> mProgressContainer
    android.view.View mListContainer -> mListContainer
    java.lang.CharSequence mEmptyText -> mEmptyText
    boolean mListShown -> mListShown
    91:136:android.view.View onCreateView(android.view.LayoutInflater,android.view.ViewGroup,android.os.Bundle) -> onCreateView
    144:146:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    153:159:void onDestroyView() -> onDestroyView
    173:173:void onListItemClick(android.widget.ListView,android.view.View,int,long) -> onListItemClick
    179:189:void setListAdapter(android.widget.ListAdapter) -> setListAdapter
    198:200:void setSelection(int) -> setSelection
    206:207:int getSelectedItemPosition() -> getSelectedItemPosition
    214:215:long getSelectedItemId() -> getSelectedItemId
    222:223:android.widget.ListView getListView() -> getListView
    232:241:void setEmptyText(java.lang.CharSequence) -> setEmptyText
    258:259:void setListShown(boolean) -> setListShown
    266:267:void setListShownNoAnimation(boolean) -> setListShownNoAnimation
    280:313:void setListShown(boolean,boolean) -> setListShown
    319:319:android.widget.ListAdapter getListAdapter() -> getListAdapter
    323:374:void ensureList() -> ensureList
android.support.v4.app.ListFragment$1 -> android.support.v4.app.ac:
    android.support.v4.app.ListFragment this$0 -> a
    51:52:void run() -> run
android.support.v4.app.ListFragment$2 -> android.support.v4.app.ad:
    android.support.v4.app.ListFragment this$0 -> a
    58:59:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
android.support.v4.app.LoaderManager -> android.support.v4.app.ae:
    android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    void destroyLoader(int) -> a
    android.support.v4.content.Loader getLoader(int) -> b
    void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    177:178:void enableDebugLogging(boolean) -> a
    184:184:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManager$LoaderCallbacks -> android.support.v4.app.af:
    android.support.v4.content.Loader onCreateLoader(int,android.os.Bundle) -> a
    void onLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> a
    void onLoaderReset(android.support.v4.content.Loader) -> a
android.support.v4.app.LoaderManagerImpl -> android.support.v4.app.ag:
    boolean DEBUG -> a
    android.support.v4.util.SparseArrayCompat mLoaders -> b
    android.support.v4.util.SparseArrayCompat mInactiveLoaders -> c
    java.lang.String mWho -> d
    android.support.v4.app.FragmentActivity mActivity -> e
    boolean mStarted -> f
    boolean mRetaining -> g
    boolean mCreatingLoader -> h
    484:485:void updateActivity(android.support.v4.app.FragmentActivity) -> a
    489:492:android.support.v4.app.LoaderManagerImpl$LoaderInfo createLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> c
    498:503:android.support.v4.app.LoaderManagerImpl$LoaderInfo createAndInstallLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> d
    508:515:void installLoader(android.support.v4.app.LoaderManagerImpl$LoaderInfo) -> a
    543:565:android.support.v4.content.Loader initLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> a
    593:647:android.support.v4.content.Loader restartLoader(int,android.os.Bundle,android.support.v4.app.LoaderManager$LoaderCallbacks) -> b
    658:678:void destroyLoader(int) -> a
    686:697:android.support.v4.content.Loader getLoader(int) -> b
    701:716:void doStart() -> b
    719:731:void doStop() -> c
    734:747:void doRetain() -> d
    750:758:void finishRetain() -> e
    761:764:void doReportNextStart() -> f
    767:770:void doReportStart() -> g
    773:785:void doDestroy() -> h
    789:795:java.lang.String toString() -> toString
    800:820:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
    824:830:boolean hasRunningLoaders() -> a
android.support.v4.app.LoaderManagerImpl$LoaderInfo -> android.support.v4.app.ah:
    int mId -> a
    android.os.Bundle mArgs -> b
    android.support.v4.app.LoaderManager$LoaderCallbacks mCallbacks -> c
    android.support.v4.content.Loader mLoader -> d
    boolean mHaveData -> e
    boolean mDeliveredData -> f
    java.lang.Object mData -> g
    boolean mStarted -> h
    boolean mRetaining -> i
    boolean mRetainingStarted -> j
    boolean mReportNextStart -> k
    boolean mDestroyed -> l
    boolean mListenerRegistered -> m
    android.support.v4.app.LoaderManagerImpl$LoaderInfo mPendingLoader -> n
    android.support.v4.app.LoaderManagerImpl this$0 -> o
    235:267:void start() -> a
    270:275:void retain() -> b
    278:300:void finishRetain() -> c
    303:311:void reportStart() -> d
    314:324:void stop() -> e
    327:359:void destroy() -> f
    362:415:void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
    418:435:void callOnLoadFinished(android.support.v4.content.Loader,java.lang.Object) -> b
    439:447:java.lang.String toString() -> toString
    451:474:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> a
android.support.v4.app.NoSaveStateFrameLayout -> android.support.v4.app.ai:
    32:41:android.view.ViewGroup wrap(android.view.View) -> a
    53:54:void dispatchSaveInstanceState(android.util.SparseArray) -> dispatchSaveInstanceState
    61:62:void dispatchRestoreInstanceState(android.util.SparseArray) -> dispatchRestoreInstanceState
android.support.v4.app.SuperNotCalledException -> android.support.v4.app.aj:
android.support.v4.content.AsyncTaskLoader -> android.support.v4.a.a:
    java.lang.String TAG -> TAG
    boolean DEBUG -> DEBUG
    android.support.v4.content.AsyncTaskLoader$LoadTask mTask -> mTask
    android.support.v4.content.AsyncTaskLoader$LoadTask mCancellingTask -> mCancellingTask
    long mUpdateThrottle -> mUpdateThrottle
    long mLastLoadCompleteTime -> mLastLoadCompleteTime
    android.os.Handler mHandler -> mHandler
    103:107:void setUpdateThrottle(long) -> setUpdateThrottle
    111:116:void onForceLoad() -> onForceLoad
    136:166:boolean cancelLoad() -> cancelLoad
    174:174:void onCanceled(java.lang.Object) -> onCanceled
    177:197:void executePendingTask() -> executePendingTask
    200:207:void dispatchOnCancelled(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnCancelled
    210:224:void dispatchOnLoadComplete(android.support.v4.content.AsyncTaskLoader$LoadTask,java.lang.Object) -> dispatchOnLoadComplete
    java.lang.Object loadInBackground() -> loadInBackground
    240:240:java.lang.Object onLoadInBackground() -> onLoadInBackground
    254:262:void waitForLoader() -> waitForLoader
    266:283:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.AsyncTaskLoader$LoadTask -> android.support.v4.a.b:
    java.lang.Object result -> a
    boolean waiting -> b
    java.util.concurrent.CountDownLatch done -> e
    android.support.v4.content.AsyncTaskLoader this$0 -> c
    51:53:java.lang.Object doInBackground(java.lang.Void[]) -> a
    61:65:void onPostExecute(java.lang.Object) -> a
    71:75:void onCancelled() -> a
    79:81:void run() -> run
    40:40:java.lang.Object doInBackground(java.lang.Object[]) -> a
    40:40:java.util.concurrent.CountDownLatch access$000(android.support.v4.content.AsyncTaskLoader$LoadTask) -> a
android.support.v4.content.Loader -> android.support.v4.a.c:
    int mId -> mId
    android.support.v4.content.Loader$OnLoadCompleteListener mListener -> mListener
    android.content.Context mContext -> mContext
    boolean mStarted -> mStarted
    boolean mAbandoned -> mAbandoned
    boolean mReset -> mReset
    boolean mContentChanged -> mContentChanged
    102:105:void deliverResult(java.lang.Object) -> deliverResult
    111:111:android.content.Context getContext() -> getContext
    118:118:int getId() -> getId
    129:134:void registerListener(int,android.support.v4.content.Loader$OnLoadCompleteListener) -> registerListener
    142:149:void unregisterListener(android.support.v4.content.Loader$OnLoadCompleteListener) -> unregisterListener
    157:157:boolean isStarted() -> isStarted
    166:166:boolean isAbandoned() -> isAbandoned
    175:175:boolean isReset() -> isReset
    194:198:void startLoading() -> startLoading
    206:206:void onStartLoading() -> onStartLoading
    217:218:void forceLoad() -> forceLoad
    225:225:void onForceLoad() -> onForceLoad
    242:244:void stopLoading() -> stopLoading
    253:253:void onStopLoading() -> onStopLoading
    261:263:void abandon() -> abandon
    275:275:void onAbandon() -> onAbandon
    290:295:void reset() -> reset
    304:304:void onReset() -> onReset
    312:314:boolean takeContentChanged() -> takeContentChanged
    326:334:void onContentChanged() -> onContentChanged
    341:344:java.lang.String dataToString(java.lang.Object) -> dataToString
    349:354:java.lang.String toString() -> toString
    366:372:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
android.support.v4.content.Loader$OnLoadCompleteListener -> android.support.v4.a.d:
    void onLoadComplete(android.support.v4.content.Loader,java.lang.Object) -> a
android.support.v4.content.ModernAsyncTask -> android.support.v4.a.e:
    java.util.concurrent.ThreadFactory sThreadFactory -> a
    java.util.concurrent.BlockingQueue sPoolWorkQueue -> b
    java.util.concurrent.Executor THREAD_POOL_EXECUTOR -> d
    android.support.v4.content.ModernAsyncTask$InternalHandler sHandler -> c
    java.util.concurrent.Executor sDefaultExecutor -> e
    android.support.v4.content.ModernAsyncTask$WorkerRunnable mWorker -> f
    java.util.concurrent.FutureTask mFuture -> g
    android.support.v4.content.ModernAsyncTask$Status mStatus -> h
    java.util.concurrent.atomic.AtomicBoolean mTaskInvoked -> i
    106:107:void init() -> b
    111:112:void setDefaultExecutor(java.util.concurrent.Executor) -> a
    150:154:void postResultIfNotInvoked(java.lang.Object) -> c
    157:160:java.lang.Object postResult(java.lang.Object) -> d
    169:169:android.support.v4.content.ModernAsyncTask$Status getStatus() -> c
    java.lang.Object doInBackground(java.lang.Object[]) -> a
    197:197:void onPreExecute() -> d
    213:213:void onPostExecute(java.lang.Object) -> a
    226:226:void onProgressUpdate(java.lang.Object[]) -> b
    244:245:void onCancelled(java.lang.Object) -> b
    260:260:void onCancelled() -> a
    273:273:boolean isCancelled() -> e
    306:306:boolean cancel(boolean) -> a
    321:321:java.lang.Object get() -> f
    341:341:java.lang.Object get(long,java.util.concurrent.TimeUnit) -> a
    371:371:android.support.v4.content.ModernAsyncTask execute(java.lang.Object[]) -> c
    406:425:android.support.v4.content.ModernAsyncTask executeOnExecutor(java.util.concurrent.Executor,java.lang.Object[]) -> a
    433:434:void execute(java.lang.Runnable) -> a
    458:464:void finish(java.lang.Object) -> e
    47:47:java.util.concurrent.atomic.AtomicBoolean access$200(android.support.v4.content.ModernAsyncTask) -> a
    47:47:java.lang.Object access$300(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> a
    47:47:void access$400(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> b
    47:47:void access$500(android.support.v4.content.ModernAsyncTask,java.lang.Object) -> c
android.support.v4.content.ModernAsyncTask$1 -> android.support.v4.a.f:
    java.util.concurrent.atomic.AtomicInteger mCount -> a
    58:58:java.lang.Thread newThread(java.lang.Runnable) -> newThread
android.support.v4.content.ModernAsyncTask$2 -> android.support.v4.a.g:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    120:123:java.lang.Object call() -> call
android.support.v4.content.ModernAsyncTask$3 -> android.support.v4.a.h:
    android.support.v4.content.ModernAsyncTask this$0 -> a
    131:145:void done() -> done
android.support.v4.content.ModernAsyncTask$4 -> android.support.v4.a.i:
    int[] $SwitchMap$android$support$v4$content$ModernAsyncTask$Status -> a
android.support.v4.content.ModernAsyncTask$AsyncTaskResult -> android.support.v4.a.j:
    android.support.v4.content.ModernAsyncTask mTask -> a
    java.lang.Object[] mData -> b
android.support.v4.content.ModernAsyncTask$InternalHandler -> android.support.v4.a.k:
    470:480:void handleMessage(android.os.Message) -> handleMessage
android.support.v4.content.ModernAsyncTask$Status -> android.support.v4.a.l:
    android.support.v4.content.ModernAsyncTask$Status PENDING -> a
    android.support.v4.content.ModernAsyncTask$Status RUNNING -> b
    android.support.v4.content.ModernAsyncTask$Status FINISHED -> c
    android.support.v4.content.ModernAsyncTask$Status[] $VALUES -> d
    89:89:android.support.v4.content.ModernAsyncTask$Status[] values() -> values
    89:89:android.support.v4.content.ModernAsyncTask$Status valueOf(java.lang.String) -> valueOf
android.support.v4.content.ModernAsyncTask$WorkerRunnable -> android.support.v4.a.m:
    java.lang.Object[] mParams -> b
android.support.v4.os.ParcelableCompat -> android.support.v4.b.a:
    36:39:android.os.Parcelable$Creator newCreator(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.os.ParcelableCompat$CompatCreator -> android.support.v4.b.b:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    51:51:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    56:56:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorCallbacks -> android.support.v4.b.c:
    java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
    java.lang.Object[] newArray(int) -> a
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2 -> android.support.v4.b.d:
    android.support.v4.os.ParcelableCompatCreatorCallbacks mCallbacks -> a
    36:36:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
    40:40:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> createFromParcel
    44:44:java.lang.Object[] newArray(int) -> newArray
android.support.v4.os.ParcelableCompatCreatorHoneycombMR2Stub -> android.support.v4.b.e:
    24:24:android.os.Parcelable$Creator instantiate(android.support.v4.os.ParcelableCompatCreatorCallbacks) -> a
android.support.v4.util.DebugUtils -> android.support.v4.c.a:
    28:43:void buildShortClassTag(java.lang.Object,java.lang.StringBuilder) -> a
android.support.v4.util.LogWriter -> android.support.v4.c.b:
    java.lang.String mTag -> a
    java.lang.StringBuilder mBuilder -> b
    44:45:void close() -> close
    48:49:void flush() -> flush
    52:61:void write(char[],int,int) -> write
    64:68:void flushBuilder() -> a
android.support.v4.util.SparseArrayCompat -> android.support.v4.c.c:
    java.lang.Object DELETED -> a
    boolean mGarbage -> b
    int[] mKeys -> c
    java.lang.Object[] mValues -> d
    int mSize -> e
    52:52:java.lang.Object get(int) -> a
    60:65:java.lang.Object get(int,java.lang.Object) -> a
    73:81:void delete(int) -> b
    87:88:void remove(int) -> c
    94:98:void removeAt(int) -> d
    107:111:void removeAtRange(int,int) -> a
    116:138:void gc() -> c
    146:190:void put(int,java.lang.Object) -> b
    197:201:int size() -> a
    210:214:int keyAt(int) -> e
    223:227:java.lang.Object valueAt(int) -> f
    236:241:void setValueAt(int,java.lang.Object) -> c
    249:253:int indexOfKey(int) -> g
    265:273:int indexOfValue(java.lang.Object) -> a
    280:289:void clear() -> b
    296:323:void append(int,java.lang.Object) -> d
    326:342:int binarySearch(int[],int,int,int) -> a
    346:350:int idealByteArraySize(int) -> h
    354:354:int idealIntArraySize(int) -> i
android.support.v4.util.TimeUtils -> android.support.v4.c.d:
    java.lang.Object sFormatSync -> a
    char[] sFormatStr -> b
    39:48:int accumField(int,int,boolean,int) -> a
    53:72:int printField(char[],int,char,int,boolean,int) -> a
    76:143:int formatDurationLocked(long,int) -> a
    148:152:void formatDuration(long,java.lang.StringBuilder) -> a
    156:160:void formatDuration(long,java.io.PrintWriter,int) -> a
    164:165:void formatDuration(long,java.io.PrintWriter) -> a
    169:174:void formatDuration(long,long,java.io.PrintWriter) -> a
android.support.v4.view.AccessibilityDelegateCompat -> android.support.v4.view.a:
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl IMPL -> b
    java.lang.Object DEFAULT_DELEGATE -> c
    java.lang.Object mBridge -> a
    318:318:java.lang.Object getBridge() -> a
    336:337:void sendAccessibilityEvent(android.view.View,int) -> a
    358:359:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    379:379:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    399:400:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    419:420:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    438:439:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    462:462:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    480:480:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> a
    500:500:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl -> android.support.v4.view.b:
    122:122:java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    127:127:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    172:172:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    179:180:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    185:187:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    192:193:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    198:198:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    204:205:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    210:211:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl$1 -> android.support.v4.view.c:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateIcsImpl this$0 -> b
    132:132:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    137:138:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    142:144:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    148:149:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    154:154:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    159:160:void sendAccessibilityEvent(android.view.View,int) -> a
    164:165:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateImpl -> android.support.v4.view.d:
    java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl -> android.support.v4.view.e:
    217:217:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    275:280:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    286:286:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl$1 -> android.support.v4.view.f:
    android.support.v4.view.AccessibilityDelegateCompat val$compat -> a
    android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateJellyBeanImpl this$0 -> b
    223:223:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    228:229:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    233:235:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    239:240:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    245:245:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    250:251:void sendAccessibilityEvent(android.view.View,int) -> a
    255:256:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    260:262:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    267:267:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompat$AccessibilityDelegateStubImpl -> android.support.v4.view.g:
    57:57:java.lang.Object newAccessiblityDelegateDefaultImpl() -> a
    62:62:java.lang.Object newAccessiblityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompat) -> a
    68:68:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    75:75:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    81:81:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    87:87:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    92:92:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    98:98:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    104:104:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    109:109:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    115:115:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatIcs -> android.support.v4.view.h:
    42:42:java.lang.Object newAccessibilityDelegateDefaultImpl() -> a
    46:46:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge) -> a
    87:87:boolean dispatchPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    92:93:void onInitializeAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    96:98:void onInitializeAccessibilityNodeInfo(java.lang.Object,android.view.View,java.lang.Object) -> a
    102:103:void onPopulateAccessibilityEvent(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    107:107:boolean onRequestSendAccessibilityEvent(java.lang.Object,android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    112:113:void sendAccessibilityEvent(java.lang.Object,android.view.View,int) -> a
    117:118:void sendAccessibilityEventUnchecked(java.lang.Object,android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatIcs$1 -> android.support.v4.view.i:
    android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge val$bridge -> a
    49:49:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    54:55:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    59:60:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    64:65:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    70:70:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    75:76:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    80:81:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
android.support.v4.view.AccessibilityDelegateCompatIcs$AccessibilityDelegateBridge -> android.support.v4.view.j:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
android.support.v4.view.AccessibilityDelegateCompatJellyBean -> android.support.v4.view.k:
    47:47:java.lang.Object newAccessibilityDelegateBridge(android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean) -> a
    99:99:java.lang.Object getAccessibilityNodeProvider(java.lang.Object,android.view.View) -> a
    104:104:boolean performAccessibilityAction(java.lang.Object,android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.AccessibilityDelegateCompatJellyBean$1 -> android.support.v4.view.l:
    android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean val$bridge -> a
    51:51:boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    56:57:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onInitializeAccessibilityEvent
    61:62:void onInitializeAccessibilityNodeInfo(android.view.View,android.view.accessibility.AccessibilityNodeInfo) -> onInitializeAccessibilityNodeInfo
    66:67:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> onPopulateAccessibilityEvent
    72:72:boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> onRequestSendAccessibilityEvent
    77:78:void sendAccessibilityEvent(android.view.View,int) -> sendAccessibilityEvent
    82:83:void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> sendAccessibilityEventUnchecked
    87:87:android.view.accessibility.AccessibilityNodeProvider getAccessibilityNodeProvider(android.view.View) -> getAccessibilityNodeProvider
    92:92:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> performAccessibilityAction
android.support.v4.view.AccessibilityDelegateCompatJellyBean$AccessibilityDelegateBridgeJellyBean -> android.support.v4.view.m:
    boolean dispatchPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> a
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> c
    boolean onRequestSendAccessibilityEvent(android.view.ViewGroup,android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void sendAccessibilityEvent(android.view.View,int) -> a
    void sendAccessibilityEventUnchecked(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    java.lang.Object getAccessibilityNodeProvider(android.view.View) -> a
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.KeyEventCompat -> android.support.v4.view.n:
    android.support.v4.view.KeyEventCompat$KeyEventVersionImpl IMPL -> a
    127:127:int normalizeMetaState(int) -> a
    131:131:boolean metaStateHasModifiers(int,int) -> a
    135:135:boolean metaStateHasNoModifiers(int) -> b
    139:139:boolean hasModifiers(android.view.KeyEvent,int) -> a
    143:143:boolean hasNoModifiers(android.view.KeyEvent) -> a
android.support.v4.view.KeyEventCompat$BaseKeyEventVersionImpl -> android.support.v4.view.o:
    49:61:int metaStateFilterDirectionalModifiers(int,int,int,int,int) -> a
    67:73:int normalizeMetaState(int) -> a
    78:83:boolean metaStateHasModifiers(int,int) -> a
    88:88:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$HoneycombKeyEventVersionImpl -> android.support.v4.view.p:
    98:98:int normalizeMetaState(int) -> a
    103:103:boolean metaStateHasModifiers(int,int) -> a
    108:108:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompat$KeyEventVersionImpl -> android.support.v4.view.q:
    int normalizeMetaState(int) -> a
    boolean metaStateHasModifiers(int,int) -> a
    boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.KeyEventCompatHoneycomb -> android.support.v4.view.r:
    26:26:int normalizeMetaState(int) -> a
    30:30:boolean metaStateHasModifiers(int,int) -> a
    34:34:boolean metaStateHasNoModifiers(int) -> b
android.support.v4.view.MotionEventCompat -> android.support.v4.view.s:
    android.support.v4.view.MotionEventCompat$MotionEventVersionImpl IMPL -> a
    183:183:int getActionMasked(android.view.MotionEvent) -> a
    191:191:int getActionIndex(android.view.MotionEvent) -> b
    201:201:int findPointerIndex(android.view.MotionEvent,int) -> a
    210:210:int getPointerId(android.view.MotionEvent,int) -> b
    219:219:float getX(android.view.MotionEvent,int) -> c
    228:228:float getY(android.view.MotionEvent,int) -> d
    236:236:int getPointerCount(android.view.MotionEvent) -> c
android.support.v4.view.MotionEventCompat$BaseMotionEventVersionImpl -> android.support.v4.view.t:
    43:47:int findPointerIndex(android.view.MotionEvent,int) -> a
    51:55:int getPointerId(android.view.MotionEvent,int) -> b
    59:62:float getX(android.view.MotionEvent,int) -> c
    66:69:float getY(android.view.MotionEvent,int) -> d
    73:73:int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$EclairMotionEventVersionImpl -> android.support.v4.view.u:
    83:83:int findPointerIndex(android.view.MotionEvent,int) -> a
    87:87:int getPointerId(android.view.MotionEvent,int) -> b
    91:91:float getX(android.view.MotionEvent,int) -> c
    95:95:float getY(android.view.MotionEvent,int) -> d
    99:99:int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompat$MotionEventVersionImpl -> android.support.v4.view.v:
    int findPointerIndex(android.view.MotionEvent,int) -> a
    int getPointerId(android.view.MotionEvent,int) -> b
    float getX(android.view.MotionEvent,int) -> c
    float getY(android.view.MotionEvent,int) -> d
    int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.MotionEventCompatEclair -> android.support.v4.view.w:
    26:26:int findPointerIndex(android.view.MotionEvent,int) -> a
    29:29:int getPointerId(android.view.MotionEvent,int) -> b
    32:32:float getX(android.view.MotionEvent,int) -> c
    35:35:float getY(android.view.MotionEvent,int) -> d
    38:38:int getPointerCount(android.view.MotionEvent) -> a
android.support.v4.view.PagerAdapter -> android.support.v4.view.x:
    android.database.DataSetObservable mObservable -> a
    int getCount() -> a
    95:96:void startUpdate(android.view.ViewGroup) -> a
    110:110:java.lang.Object instantiateItem(android.view.ViewGroup,int) -> a
    124:125:void destroyItem(android.view.ViewGroup,int,java.lang.Object) -> a
    137:138:void setPrimaryItem(android.view.ViewGroup,int,java.lang.Object) -> b
    148:149:void finishUpdate(android.view.ViewGroup) -> b
    159:159:void startUpdate(android.view.View) -> a
    175:175:java.lang.Object instantiateItem(android.view.View,int) -> a
    192:192:void destroyItem(android.view.View,int,java.lang.Object) -> a
    207:207:void setPrimaryItem(android.view.View,int,java.lang.Object) -> b
    219:219:void finishUpdate(android.view.View) -> b
    boolean isViewFromObject(android.view.View,java.lang.Object) -> a
    239:239:android.os.Parcelable saveState() -> b
    250:250:void restoreState(android.os.Parcelable,java.lang.ClassLoader) -> a
    268:268:int getItemPosition(java.lang.Object) -> a
    276:277:void notifyDataSetChanged() -> c
    280:281:void registerDataSetObserver(android.database.DataSetObserver) -> a
    284:285:void unregisterDataSetObserver(android.database.DataSetObserver) -> b
    297:297:java.lang.CharSequence getPageTitle(int) -> a
    308:308:float getPageWidth(int) -> b
android.support.v4.view.PagerTabStrip -> android.support.v4.view.PagerTabStrip:
    int mIndicatorColor -> f
    int mIndicatorHeight -> g
    int mMinPaddingBottom -> h
    int mMinTextSpacing -> i
    int mMinStripHeight -> j
    int mTabPadding -> k
    android.graphics.Paint mTabPaint -> l
    android.graphics.Rect mTempRect -> m
    int mTabAlpha -> n
    boolean mDrawFullUnderline -> o
    boolean mDrawFullUnderlineSet -> p
    int mFullUnderlineHeight -> q
    boolean mIgnoreTap -> r
    float mInitialMotionX -> s
    float mInitialMotionY -> t
    int mTouchSlop -> u
    129:132:void setTabIndicatorColor(int) -> setTabIndicatorColor
    140:141:void setTabIndicatorColorResource(int) -> setTabIndicatorColorResource
    147:147:int getTabIndicatorColor() -> getTabIndicatorColor
    152:156:void setPadding(int,int,int,int) -> setPadding
    160:164:void setTextSpacing(int) -> setTextSpacing
    168:172:void setBackgroundDrawable(android.graphics.drawable.Drawable) -> setBackgroundDrawable
    176:180:void setBackgroundColor(int) -> setBackgroundColor
    184:188:void setBackgroundResource(int) -> setBackgroundResource
    197:200:void setDrawFullUnderline(boolean) -> setDrawFullUnderline
    210:210:boolean getDrawFullUnderline() -> getDrawFullUnderline
    215:215:int getMinHeight() -> getMinHeight
    220:252:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    257:273:void onDraw(android.graphics.Canvas) -> onDraw
    277:293:void updateTextPositions(int,float,boolean) -> a
android.support.v4.view.PagerTabStrip$1 -> android.support.v4.view.y:
    android.support.v4.view.PagerTabStrip this$0 -> a
    106:107:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTabStrip$2 -> android.support.v4.view.z:
    android.support.v4.view.PagerTabStrip this$0 -> a
    114:115:void onClick(android.view.View) -> onClick
android.support.v4.view.PagerTitleStrip -> android.support.v4.view.PagerTitleStrip:
    android.support.v4.view.ViewPager mPager -> a
    android.widget.TextView mPrevText -> b
    android.widget.TextView mCurrText -> c
    android.widget.TextView mNextText -> d
    int mLastKnownCurrentPage -> f
    float mLastKnownPositionOffset -> g
    int mScaledTextSpacing -> h
    int mGravity -> i
    boolean mUpdatingText -> j
    boolean mUpdatingPositions -> k
    android.support.v4.view.PagerTitleStrip$PageListener mPageListener -> l
    java.lang.ref.WeakReference mWatchingAdapter -> m
    int[] ATTRS -> n
    int[] TEXT_ATTRS -> o
    int mNonPrimaryAlpha -> p
    int mTextColor -> e
    android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl IMPL -> q
    108:109:void setSingleLineAllCaps(android.widget.TextView) -> setSingleLineAllCaps
    176:178:void setTextSpacing(int) -> setTextSpacing
    184:184:int getTextSpacing() -> getTextSpacing
    193:197:void setNonPrimaryAlpha(float) -> setNonPrimaryAlpha
    206:211:void setTextColor(int) -> setTextColor
    224:227:void setTextSize(int,float) -> a
    236:238:void setGravity(int) -> setGravity
    242:257:void onAttachedToWindow() -> onAttachedToWindow
    261:268:void onDetachedFromWindow() -> onDetachedFromWindow
    271:306:void updateText(int,android.support.v4.view.PagerAdapter) -> a
    310:313:void requestLayout() -> requestLayout
    316:330:void updateAdapter(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    333:418:void updateTextPositions(int,float,boolean) -> a
    422:451:void onMeasure(int,int) -> onMeasure
    455:459:void onLayout(boolean,int,int,int,int) -> onLayout
    462:467:int getMinHeight() -> getMinHeight
    45:45:float access$100(android.support.v4.view.PagerTitleStrip) -> a
android.support.v4.view.PagerTitleStrip$1 -> android.support.v4.view.aa:
android.support.v4.view.PagerTitleStrip$PageListener -> android.support.v4.view.ab:
    int mScrollState -> b
    android.support.v4.view.PagerTitleStrip this$0 -> a
    476:481:void onPageScrolled(int,float,int) -> a
    485:492:void onPageSelected(int) -> a
    496:497:void onPageScrollStateChanged(int) -> b
    501:502:void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
    506:510:void onChanged() -> onChanged
android.support.v4.view.PagerTitleStrip$PagerTitleStripImpl -> android.support.v4.view.ac:
    void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplBase -> android.support.v4.view.ad:
    88:89:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStrip$PagerTitleStripImplIcs -> android.support.v4.view.ae:
    94:95:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs -> android.support.v4.view.af:
    28:29:void setSingleLineAllCaps(android.widget.TextView) -> a
android.support.v4.view.PagerTitleStripIcs$SingleLineAllCapsTransform -> android.support.v4.view.ag:
    java.util.Locale mLocale -> a
    42:43:java.lang.CharSequence getTransformation(java.lang.CharSequence,android.view.View) -> getTransformation
android.support.v4.view.VelocityTrackerCompat -> android.support.v4.view.ah:
    android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl IMPL -> a
    82:82:float getXVelocity(android.view.VelocityTracker,int) -> a
    91:91:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$BaseVelocityTrackerVersionImpl -> android.support.v4.view.ai:
    40:40:float getXVelocity(android.view.VelocityTracker,int) -> a
    44:44:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$HoneycombVelocityTrackerVersionImpl -> android.support.v4.view.aj:
    54:54:float getXVelocity(android.view.VelocityTracker,int) -> a
    58:58:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompat$VelocityTrackerVersionImpl -> android.support.v4.view.ak:
    float getXVelocity(android.view.VelocityTracker,int) -> a
    float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.VelocityTrackerCompatHoneycomb -> android.support.v4.view.al:
    26:26:float getXVelocity(android.view.VelocityTracker,int) -> a
    29:29:float getYVelocity(android.view.VelocityTracker,int) -> b
android.support.v4.view.ViewCompat -> android.support.v4.view.am:
    android.support.v4.view.ViewCompat$ViewCompatImpl IMPL -> a
    347:347:boolean canScrollHorizontally(android.view.View,int) -> a
    358:358:boolean canScrollVertically(android.view.View,int) -> b
    371:371:int getOverScrollMode(android.view.View) -> a
    387:388:void setOverScrollMode(android.view.View,int) -> c
    424:425:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    457:458:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    493:494:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    508:509:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    520:520:boolean hasTransientState(android.view.View) -> b
    531:532:void setHasTransientState(android.view.View,boolean) -> a
    544:545:void postInvalidateOnAnimation(android.view.View) -> c
    562:563:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    576:577:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    593:594:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    609:609:int getImportantForAccessibility(android.view.View) -> d
    625:626:void setImportantForAccessibility(android.view.View,int) -> d
    643:643:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    670:670:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    713:714:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    733:733:int getLayerType(android.view.View) -> f
    744:744:int getLabelFor(android.view.View) -> g
    755:756:void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompat$BaseViewCompatImpl -> android.support.v4.view.an:
    141:141:boolean canScrollHorizontally(android.view.View,int) -> a
    144:144:boolean canScrollVertically(android.view.View,int) -> b
    147:147:int getOverScrollMode(android.view.View) -> a
    151:151:void setOverScrollMode(android.view.View,int) -> c
    154:154:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    157:157:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    160:160:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    163:163:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    166:166:boolean hasTransientState(android.view.View) -> b
    170:170:void setHasTransientState(android.view.View,boolean) -> a
    172:173:void postInvalidateOnAnimation(android.view.View) -> c
    175:176:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    178:179:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    181:182:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    184:184:long getFrameTime() -> a
    187:187:int getImportantForAccessibility(android.view.View) -> d
    191:191:void setImportantForAccessibility(android.view.View,int) -> d
    193:193:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    196:196:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    199:199:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    201:201:int getLayerType(android.view.View) -> f
    204:204:int getLabelFor(android.view.View) -> g
    208:208:void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompat$GBViewCompatImpl -> android.support.v4.view.ao:
    214:214:int getOverScrollMode(android.view.View) -> a
    218:219:void setOverScrollMode(android.view.View,int) -> c
android.support.v4.view.ViewCompat$HCViewCompatImpl -> android.support.v4.view.ap:
    224:224:long getFrameTime() -> a
    227:228:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    230:230:int getLayerType(android.view.View) -> f
android.support.v4.view.ViewCompat$ICSViewCompatImpl -> android.support.v4.view.aq:
    237:237:boolean canScrollHorizontally(android.view.View,int) -> a
    241:241:boolean canScrollVertically(android.view.View,int) -> b
    245:246:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    249:250:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    253:254:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    257:258:void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
android.support.v4.view.ViewCompat$JBViewCompatImpl -> android.support.v4.view.ar:
    264:264:boolean hasTransientState(android.view.View) -> b
    268:269:void setHasTransientState(android.view.View,boolean) -> a
    272:273:void postInvalidateOnAnimation(android.view.View) -> c
    276:277:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    280:281:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    284:285:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    288:288:int getImportantForAccessibility(android.view.View) -> d
    292:293:void setImportantForAccessibility(android.view.View,int) -> d
    296:296:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    300:304:android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
android.support.v4.view.ViewCompat$JbMr1ViewCompatImpl -> android.support.v4.view.as:
    312:312:int getLabelFor(android.view.View) -> g
    317:318:void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompat$ViewCompatImpl -> android.support.v4.view.at:
    boolean canScrollHorizontally(android.view.View,int) -> a
    boolean canScrollVertically(android.view.View,int) -> b
    int getOverScrollMode(android.view.View) -> a
    void setOverScrollMode(android.view.View,int) -> c
    void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    void setAccessibilityDelegate(android.view.View,android.support.v4.view.AccessibilityDelegateCompat) -> a
    boolean hasTransientState(android.view.View) -> b
    void setHasTransientState(android.view.View,boolean) -> a
    void postInvalidateOnAnimation(android.view.View) -> c
    void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    int getImportantForAccessibility(android.view.View) -> d
    void setImportantForAccessibility(android.view.View,int) -> d
    boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat getAccessibilityNodeProvider(android.view.View) -> e
    void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    int getLayerType(android.view.View) -> f
    int getLabelFor(android.view.View) -> g
    void setLabelFor(android.view.View,int) -> e
android.support.v4.view.ViewCompatGingerbread -> android.support.v4.view.au:
    23:23:int getOverScrollMode(android.view.View) -> a
    27:28:void setOverScrollMode(android.view.View,int) -> a
android.support.v4.view.ViewCompatHC -> android.support.v4.view.av:
    25:25:long getFrameTime() -> a
    29:30:void setLayerType(android.view.View,int,android.graphics.Paint) -> a
    33:33:int getLayerType(android.view.View) -> a
android.support.v4.view.ViewCompatICS -> android.support.v4.view.aw:
    30:30:boolean canScrollHorizontally(android.view.View,int) -> a
    34:34:boolean canScrollVertically(android.view.View,int) -> b
    38:39:void setAccessibilityDelegate(android.view.View,java.lang.Object) -> a
    42:43:void onPopulateAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> a
    46:47:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> b
    50:51:void onInitializeAccessibilityNodeInfo(android.view.View,java.lang.Object) -> b
android.support.v4.view.ViewCompatJB -> android.support.v4.view.ax:
    28:28:boolean hasTransientState(android.view.View) -> a
    32:33:void setHasTransientState(android.view.View,boolean) -> a
    36:37:void postInvalidateOnAnimation(android.view.View) -> b
    41:42:void postInvalidateOnAnimation(android.view.View,int,int,int,int) -> a
    45:46:void postOnAnimation(android.view.View,java.lang.Runnable) -> a
    49:50:void postOnAnimationDelayed(android.view.View,java.lang.Runnable,long) -> a
    53:53:int getImportantForAccessibility(android.view.View) -> c
    57:58:void setImportantForAccessibility(android.view.View,int) -> a
    61:61:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
    65:65:java.lang.Object getAccessibilityNodeProvider(android.view.View) -> d
android.support.v4.view.ViewCompatJellybeanMr1 -> android.support.v4.view.ay:
    27:27:int getLabelFor(android.view.View) -> a
    31:32:void setLabelFor(android.view.View,int) -> a
android.support.v4.view.ViewConfigurationCompat -> android.support.v4.view.az:
    android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl IMPL -> a
    73:73:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$BaseViewConfigurationVersionImpl -> android.support.v4.view.ba:
    39:39:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$FroyoViewConfigurationVersionImpl -> android.support.v4.view.bb:
    49:49:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompat$ViewConfigurationVersionImpl -> android.support.v4.view.bc:
    int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewConfigurationCompatFroyo -> android.support.v4.view.bd:
    26:26:int getScaledPagingTouchSlop(android.view.ViewConfiguration) -> a
android.support.v4.view.ViewPager -> android.support.v4.view.ViewPager:
    int[] LAYOUT_ATTRS -> a
    java.util.Comparator COMPARATOR -> b
    android.view.animation.Interpolator sInterpolator -> c
    java.util.ArrayList mItems -> d
    android.support.v4.view.ViewPager$ItemInfo mTempItem -> e
    android.graphics.Rect mTempRect -> f
    android.support.v4.view.PagerAdapter mAdapter -> g
    int mCurItem -> h
    int mRestoredCurItem -> i
    android.os.Parcelable mRestoredAdapterState -> j
    java.lang.ClassLoader mRestoredClassLoader -> k
    android.widget.Scroller mScroller -> l
    android.support.v4.view.ViewPager$PagerObserver mObserver -> m
    int mPageMargin -> n
    android.graphics.drawable.Drawable mMarginDrawable -> o
    int mTopPageBounds -> p
    int mBottomPageBounds -> q
    float mFirstOffset -> r
    float mLastOffset -> s
    int mChildWidthMeasureSpec -> t
    int mChildHeightMeasureSpec -> u
    boolean mInLayout -> v
    boolean mScrollingCacheEnabled -> w
    boolean mPopulatePending -> x
    int mOffscreenPageLimit -> y
    boolean mIsBeingDragged -> z
    boolean mIsUnableToDrag -> A
    int mDefaultGutterSize -> B
    int mGutterSize -> C
    int mTouchSlop -> D
    float mInitialMotionX -> E
    float mLastMotionX -> F
    float mLastMotionY -> G
    int mActivePointerId -> H
    android.view.VelocityTracker mVelocityTracker -> I
    int mMinimumVelocity -> J
    int mMaximumVelocity -> K
    int mFlingDistance -> L
    int mCloseEnough -> M
    int mSeenPositionMin -> N
    int mSeenPositionMax -> O
    boolean mFakeDragging -> P
    long mFakeDragBeginTime -> Q
    android.support.v4.widget.EdgeEffectCompat mLeftEdge -> R
    android.support.v4.widget.EdgeEffectCompat mRightEdge -> S
    boolean mFirstLayout -> T
    boolean mNeedCalculatePageOffsets -> U
    boolean mCalledSuper -> V
    int mDecorChildCount -> W
    android.support.v4.view.ViewPager$OnPageChangeListener mOnPageChangeListener -> Z
    android.support.v4.view.ViewPager$OnPageChangeListener mInternalPageChangeListener -> aa
    android.support.v4.view.ViewPager$OnAdapterChangeListener mAdapterChangeListener -> ab
    android.support.v4.view.ViewPager$PageTransformer mPageTransformer -> ac
    java.lang.reflect.Method mSetChildrenDrawingOrderEnabled -> ad
    int mDrawingOrder -> ae
    java.util.ArrayList mDrawingOrderedChildren -> af
    android.support.v4.view.ViewPager$ViewPositionComparator sPositionComparator -> ag
    java.lang.Runnable mEndScrollRunnable -> ah
    int mScrollState -> ai
    347:371:void initViewPager() -> a
    375:377:void onDetachedFromWindow() -> onDetachedFromWindow
    380:395:void setScrollState(int) -> setScrollState
    403:441:void setAdapter(android.support.v4.view.PagerAdapter) -> setAdapter
    444:452:void removeNonDecorViews() -> j
    460:460:android.support.v4.view.PagerAdapter getAdapter() -> getAdapter
    464:465:void setOnAdapterChangeListener(android.support.v4.view.ViewPager$OnAdapterChangeListener) -> setOnAdapterChangeListener
    475:477:void setCurrentItem(int) -> setCurrentItem
    486:488:void setCurrentItem(int,boolean) -> a
    491:491:int getCurrentItem() -> getCurrentItem
    495:496:void setCurrentItemInternal(int,boolean,boolean) -> a
    499:525:void setCurrentItemInternal(int,boolean,boolean,int) -> a
    529:554:void scrollToItem(int,boolean,int,boolean) -> a
    563:564:void setOnPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> setOnPageChangeListener
    579:591:void setPageTransformer(boolean,android.support.v4.view.ViewPager$PageTransformer) -> a
    594:607:void setChildrenDrawingOrderEnabledCompat(boolean) -> setChildrenDrawingOrderEnabledCompat
    611:613:int getChildDrawingOrder(int,int) -> getChildDrawingOrder
    623:625:android.support.v4.view.ViewPager$OnPageChangeListener setInternalPageChangeListener(android.support.v4.view.ViewPager$OnPageChangeListener) -> a
    636:636:int getOffscreenPageLimit() -> getOffscreenPageLimit
    657:666:void setOffscreenPageLimit(int) -> setOffscreenPageLimit
    677:684:void setPageMargin(int) -> setPageMargin
    692:692:int getPageMargin() -> getPageMargin
    701:705:void setPageMarginDrawable(android.graphics.drawable.Drawable) -> setPageMarginDrawable
    713:714:void setPageMarginDrawable(int) -> setPageMarginDrawable
    718:718:boolean verifyDrawable(android.graphics.drawable.Drawable) -> verifyDrawable
    723:728:void drawableStateChanged() -> drawableStateChanged
    735:737:float distanceInfluenceForSnapDuration(float) -> a
    758:796:void smoothScrollTo(int,int,int) -> a
    799:808:android.support.v4.view.ViewPager$ItemInfo addNewItem(int,int) -> a
    814:878:void dataSetChanged() -> b
    881:882:void populate() -> c
    885:1058:void populate(int) -> a
    1061:1144:void calculatePageOffsets(android.support.v4.view.ViewPager$ItemInfo,int,android.support.v4.view.ViewPager$ItemInfo) -> a
    1200:1206:android.os.Parcelable onSaveInstanceState() -> onSaveInstanceState
    1211:1227:void onRestoreInstanceState(android.os.Parcelable) -> onRestoreInstanceState
    1231:1253:void addView(android.view.View,int,android.view.ViewGroup$LayoutParams) -> addView
    1256:1262:android.support.v4.view.ViewPager$ItemInfo infoForChild(android.view.View) -> a
    1267:1273:android.support.v4.view.ViewPager$ItemInfo infoForAnyChild(android.view.View) -> b
    1277:1283:android.support.v4.view.ViewPager$ItemInfo infoForPosition(int) -> b
    1288:1290:void onAttachedToWindow() -> onAttachedToWindow
    1299:1385:void onMeasure(int,int) -> onMeasure
    1389:1395:void onSizeChanged(int,int,int,int) -> onSizeChanged
    1398:1422:void recomputeScrollPosition(int,int,int,int) -> a
    1426:1530:void onLayout(boolean,int,int,int,int) -> onLayout
    1534:1555:void computeScroll() -> computeScroll
    1558:1582:boolean pageScrolled(int) -> d
    1599:1667:void onPageScrolled(int,float,int) -> a
    1670:1698:void completeScroll(boolean) -> a
    1701:1701:boolean isGutterDrag(float,float) -> a
    1705:1711:void enableLayers(boolean) -> b
    1721:1853:boolean onInterceptTouchEvent(android.view.MotionEvent) -> onInterceptTouchEvent
    1858:1972:boolean onTouchEvent(android.view.MotionEvent) -> onTouchEvent
    1976:2019:boolean performDrag(float) -> c
    2027:2065:android.support.v4.view.ViewPager$ItemInfo infoForCurrentScrollPosition() -> k
    2070:2089:int determineTargetPage(int,float,int,int) -> a
    2094:2132:void draw(android.graphics.Canvas) -> draw
    2136:2176:void onDraw(android.graphics.Canvas) -> onDraw
    2196:2212:boolean beginFakeDrag() -> d
    2222:2243:void endFakeDrag() -> e
    2253:2291:void fakeDragBy(float) -> b
    2303:2303:boolean isFakeDragging() -> f
    2307:2319:void onSecondaryPointerUp(android.view.MotionEvent) -> a
    2322:2329:void endDrag() -> l
    2332:2344:void setScrollingCacheEnabled(boolean) -> setScrollingCacheEnabled
    2358:2377:boolean canScroll(android.view.View,boolean,int,int,int) -> a
    2383:2383:boolean dispatchKeyEvent(android.view.KeyEvent) -> dispatchKeyEvent
    2395:2417:boolean executeKeyEvent(android.view.KeyEvent) -> a
    2421:2460:boolean arrowScroll(int) -> c
    2464:2486:android.graphics.Rect getChildRectInPagerCoordinates(android.graphics.Rect,android.view.View) -> a
    2490:2494:boolean pageLeft() -> g
    2498:2502:boolean pageRight() -> h
    2510:2547:void addFocusables(java.util.ArrayList,int,int) -> addFocusables
    2557:2566:void addTouchables(java.util.ArrayList) -> addTouchables
    2577:2598:boolean onRequestFocusInDescendants(int,android.graphics.Rect) -> onRequestFocusInDescendants
    2608:2620:boolean dispatchPopulateAccessibilityEvent(android.view.accessibility.AccessibilityEvent) -> dispatchPopulateAccessibilityEvent
    2625:2625:android.view.ViewGroup$LayoutParams generateDefaultLayoutParams() -> generateDefaultLayoutParams
    2630:2630:android.view.ViewGroup$LayoutParams generateLayoutParams(android.view.ViewGroup$LayoutParams) -> generateLayoutParams
    2635:2635:boolean checkLayoutParams(android.view.ViewGroup$LayoutParams) -> checkLayoutParams
    2640:2640:android.view.ViewGroup$LayoutParams generateLayoutParams(android.util.AttributeSet) -> generateLayoutParams
    84:84:void access$000(android.support.v4.view.ViewPager,int) -> a
    84:84:android.support.v4.view.PagerAdapter access$200(android.support.v4.view.ViewPager) -> a
    84:84:int access$300(android.support.v4.view.ViewPager) -> b
    84:84:int[] access$400() -> i
android.support.v4.view.ViewPager$1 -> android.support.v4.view.be:
    111:111:int compare(android.support.v4.view.ViewPager$ItemInfo,android.support.v4.view.ViewPager$ItemInfo) -> a
    108:108:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.ViewPager$2 -> android.support.v4.view.bf:
    117:118:float getInterpolation(float) -> getInterpolation
android.support.v4.view.ViewPager$3 -> android.support.v4.view.bg:
    android.support.v4.view.ViewPager this$0 -> a
    236:238:void run() -> run
android.support.v4.view.ViewPager$Decor -> android.support.v4.view.bh:
android.support.v4.view.ViewPager$ItemInfo -> android.support.v4.view.bi:
    java.lang.Object object -> a
    int position -> b
    boolean scrolling -> c
    float widthFactor -> d
    float offset -> e
android.support.v4.view.ViewPager$LayoutParams -> android.support.v4.view.ViewPager$LayoutParams:
    boolean isDecor -> a
    int gravity -> b
    float widthFactor -> c
    boolean needsMeasure -> d
    int position -> e
    int childIndex -> f
android.support.v4.view.ViewPager$MyAccessibilityDelegate -> android.support.v4.view.bj:
    android.support.v4.view.ViewPager this$0 -> b
    2647:2649:void onInitializeAccessibilityEvent(android.view.View,android.view.accessibility.AccessibilityEvent) -> d
    2653:2662:void onInitializeAccessibilityNodeInfo(android.view.View,android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    2666:2683:boolean performAccessibilityAction(android.view.View,int,android.os.Bundle) -> a
android.support.v4.view.ViewPager$OnAdapterChangeListener -> android.support.v4.view.bk:
    void onAdapterChanged(android.support.v4.view.PagerAdapter,android.support.v4.view.PagerAdapter) -> a
android.support.v4.view.ViewPager$OnPageChangeListener -> android.support.v4.view.bl:
    void onPageScrolled(int,float,int) -> a
    void onPageSelected(int) -> a
    void onPageScrollStateChanged(int) -> b
android.support.v4.view.ViewPager$PageTransformer -> android.support.v4.view.bm:
    void transformPage(android.view.View,float) -> a
android.support.v4.view.ViewPager$PagerObserver -> android.support.v4.view.bn:
    android.support.v4.view.ViewPager this$0 -> a
    2690:2691:void onChanged() -> onChanged
    2694:2695:void onInvalidated() -> onInvalidated
android.support.v4.view.ViewPager$SavedState -> android.support.v4.view.ViewPager$SavedState:
    int position -> a
    android.os.Parcelable adapterState -> b
    java.lang.ClassLoader loader -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    1163:1166:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    1170:1170:java.lang.String toString() -> toString
android.support.v4.view.ViewPager$SavedState$1 -> android.support.v4.view.bo:
    1179:1179:android.support.v4.view.ViewPager$SavedState createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> b
    1183:1183:android.support.v4.view.ViewPager$SavedState[] newArray(int) -> b
    1176:1176:java.lang.Object[] newArray(int) -> a
    1176:1176:java.lang.Object createFromParcel(android.os.Parcel,java.lang.ClassLoader) -> a
android.support.v4.view.ViewPager$ViewPositionComparator -> android.support.v4.view.bp:
    2753:2758:int compare(android.view.View,android.view.View) -> a
    2750:2750:int compare(java.lang.Object,java.lang.Object) -> compare
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat -> android.support.v4.view.a.a:
    android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl IMPL -> a
    java.lang.Object mInfo -> b
    918:921:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat wrapNonNullInstance(java.lang.Object) -> a
    938:938:java.lang.Object getInfo() -> a
    949:949:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View) -> a
    963:963:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.view.View,int) -> a
    973:973:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain() -> b
    984:984:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat obtain(android.support.v4.view.accessibility.AccessibilityNodeInfoCompat) -> a
    993:994:void setSource(android.view.View) -> b
    1016:1017:void setSource(android.view.View,int) -> b
    1031:1031:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat findFocus(int) -> a
    1049:1049:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat focusSearch(int) -> b
    1058:1058:int getWindowId() -> c
    1067:1067:int getChildCount() -> d
    1084:1084:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getChild(int) -> c
    1099:1100:void addChild(android.view.View) -> c
    1117:1118:void addChild(android.view.View,int) -> c
    1130:1130:int getActions() -> e
    1145:1146:void addAction(int) -> d
    1161:1161:boolean performAction(int) -> e
    1178:1178:boolean performAction(int,android.os.Bundle) -> a
    1194:1195:void setMovementGranularities(int) -> f
    1203:1203:int getMovementGranularities() -> f
    1220:1227:java.util.List findAccessibilityNodeInfosByText(java.lang.String) -> a
    1241:1241:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat getParent() -> g
    1256:1257:void setParent(android.view.View) -> d
    1279:1280:void setParent(android.view.View,int) -> d
    1288:1289:void getBoundsInParent(android.graphics.Rect) -> a
    1303:1304:void setBoundsInParent(android.graphics.Rect) -> b
    1312:1313:void getBoundsInScreen(android.graphics.Rect) -> c
    1327:1328:void setBoundsInScreen(android.graphics.Rect) -> d
    1336:1336:boolean isCheckable() -> h
    1351:1352:void setCheckable(boolean) -> a
    1360:1360:boolean isChecked() -> i
    1375:1376:void setChecked(boolean) -> b
    1384:1384:boolean isFocusable() -> j
    1399:1400:void setFocusable(boolean) -> c
    1408:1408:boolean isFocused() -> k
    1423:1424:void setFocused(boolean) -> d
    1432:1432:boolean isVisibleToUser() -> l
    1448:1449:void setVisibleToUser(boolean) -> e
    1457:1457:boolean isAccessibilityFocused() -> m
    1473:1474:void setAccessibilityFocused(boolean) -> f
    1482:1482:boolean isSelected() -> n
    1497:1498:void setSelected(boolean) -> g
    1506:1506:boolean isClickable() -> o
    1521:1522:void setClickable(boolean) -> h
    1530:1530:boolean isLongClickable() -> p
    1545:1546:void setLongClickable(boolean) -> i
    1554:1554:boolean isEnabled() -> q
    1569:1570:void setEnabled(boolean) -> j
    1578:1578:boolean isPassword() -> r
    1593:1594:void setPassword(boolean) -> k
    1602:1602:boolean isScrollable() -> s
    1617:1618:void setScrollable(boolean) -> l
    1626:1626:java.lang.CharSequence getPackageName() -> t
    1641:1642:void setPackageName(java.lang.CharSequence) -> a
    1650:1650:java.lang.CharSequence getClassName() -> u
    1665:1666:void setClassName(java.lang.CharSequence) -> b
    1674:1674:java.lang.CharSequence getText() -> v
    1689:1690:void setText(java.lang.CharSequence) -> c
    1698:1698:java.lang.CharSequence getContentDescription() -> w
    1713:1714:void setContentDescription(java.lang.CharSequence) -> d
    1724:1725:void recycle() -> x
    1729:1729:int hashCode() -> hashCode
    1734:1751:boolean equals(java.lang.Object) -> equals
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoIcsImpl -> android.support.v4.view.a.b:
    402:402:java.lang.Object obtain() -> a
    407:407:java.lang.Object obtain(android.view.View) -> a
    412:412:java.lang.Object obtain(java.lang.Object) -> a
    417:418:void addAction(java.lang.Object,int) -> a
    422:423:void addChild(java.lang.Object,android.view.View) -> a
    427:427:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    432:432:int getActions(java.lang.Object) -> b
    437:438:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    442:443:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    447:447:java.lang.Object getChild(java.lang.Object,int) -> b
    452:452:int getChildCount(java.lang.Object) -> c
    457:457:java.lang.CharSequence getClassName(java.lang.Object) -> d
    462:462:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    467:467:java.lang.CharSequence getPackageName(java.lang.Object) -> f
    472:472:java.lang.Object getParent(java.lang.Object) -> g
    477:477:java.lang.CharSequence getText(java.lang.Object) -> h
    482:482:int getWindowId(java.lang.Object) -> i
    487:487:boolean isCheckable(java.lang.Object) -> j
    492:492:boolean isChecked(java.lang.Object) -> k
    497:497:boolean isClickable(java.lang.Object) -> l
    502:502:boolean isEnabled(java.lang.Object) -> m
    507:507:boolean isFocusable(java.lang.Object) -> n
    512:512:boolean isFocused(java.lang.Object) -> o
    517:517:boolean isLongClickable(java.lang.Object) -> p
    522:522:boolean isPassword(java.lang.Object) -> q
    527:527:boolean isScrollable(java.lang.Object) -> r
    532:532:boolean isSelected(java.lang.Object) -> s
    537:537:boolean performAction(java.lang.Object,int) -> c
    542:543:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    547:548:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    552:553:void setCheckable(java.lang.Object,boolean) -> a
    557:558:void setChecked(java.lang.Object,boolean) -> b
    562:563:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    567:568:void setClickable(java.lang.Object,boolean) -> c
    572:573:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    577:578:void setEnabled(java.lang.Object,boolean) -> d
    582:583:void setFocusable(java.lang.Object,boolean) -> e
    587:588:void setFocused(java.lang.Object,boolean) -> f
    592:593:void setLongClickable(java.lang.Object,boolean) -> g
    597:598:void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    602:603:void setParent(java.lang.Object,android.view.View) -> b
    607:608:void setPassword(java.lang.Object,boolean) -> h
    612:613:void setScrollable(java.lang.Object,boolean) -> i
    617:618:void setSelected(java.lang.Object,boolean) -> j
    622:623:void setSource(java.lang.Object,android.view.View) -> c
    627:628:void setText(java.lang.Object,java.lang.CharSequence) -> d
    632:633:void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoImpl -> android.support.v4.view.a.c:
    java.lang.Object obtain() -> a
    java.lang.Object obtain(android.view.View) -> a
    java.lang.Object obtain(java.lang.Object) -> a
    java.lang.Object obtain(android.view.View,int) -> a
    void setSource(java.lang.Object,android.view.View) -> c
    void setSource(java.lang.Object,android.view.View,int) -> a
    java.lang.Object findFocus(java.lang.Object,int) -> d
    java.lang.Object focusSearch(java.lang.Object,int) -> e
    int getWindowId(java.lang.Object) -> i
    int getChildCount(java.lang.Object) -> c
    java.lang.Object getChild(java.lang.Object,int) -> b
    void addChild(java.lang.Object,android.view.View) -> a
    void addChild(java.lang.Object,android.view.View,int) -> b
    int getActions(java.lang.Object) -> b
    void addAction(java.lang.Object,int) -> a
    boolean performAction(java.lang.Object,int) -> c
    boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    void setMovementGranularities(java.lang.Object,int) -> f
    int getMovementGranularities(java.lang.Object) -> u
    java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    java.lang.Object getParent(java.lang.Object) -> g
    void setParent(java.lang.Object,android.view.View,int) -> c
    void setParent(java.lang.Object,android.view.View) -> b
    void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    boolean isCheckable(java.lang.Object) -> j
    void setCheckable(java.lang.Object,boolean) -> a
    boolean isChecked(java.lang.Object) -> k
    void setChecked(java.lang.Object,boolean) -> b
    boolean isFocusable(java.lang.Object) -> n
    void setFocusable(java.lang.Object,boolean) -> e
    boolean isFocused(java.lang.Object) -> o
    void setFocused(java.lang.Object,boolean) -> f
    boolean isVisibleToUser(java.lang.Object) -> v
    void setVisibleToUser(java.lang.Object,boolean) -> k
    boolean isAccessibilityFocused(java.lang.Object) -> w
    void setAccessibilityFocused(java.lang.Object,boolean) -> l
    boolean isSelected(java.lang.Object) -> s
    void setSelected(java.lang.Object,boolean) -> j
    boolean isClickable(java.lang.Object) -> l
    void setClickable(java.lang.Object,boolean) -> c
    boolean isLongClickable(java.lang.Object) -> p
    void setLongClickable(java.lang.Object,boolean) -> g
    boolean isEnabled(java.lang.Object) -> m
    void setEnabled(java.lang.Object,boolean) -> d
    boolean isPassword(java.lang.Object) -> q
    void setPassword(java.lang.Object,boolean) -> h
    boolean isScrollable(java.lang.Object) -> r
    void setScrollable(java.lang.Object,boolean) -> i
    java.lang.CharSequence getPackageName(java.lang.Object) -> f
    void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    java.lang.CharSequence getClassName(java.lang.Object) -> d
    void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    java.lang.CharSequence getText(java.lang.Object) -> h
    void setText(java.lang.Object,java.lang.CharSequence) -> d
    java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoJellybeanImpl -> android.support.v4.view.a.d:
    639:639:java.lang.Object obtain(android.view.View,int) -> a
    644:644:java.lang.Object findFocus(java.lang.Object,int) -> d
    649:649:java.lang.Object focusSearch(java.lang.Object,int) -> e
    654:655:void addChild(java.lang.Object,android.view.View,int) -> b
    659:660:void setSource(java.lang.Object,android.view.View,int) -> a
    664:664:boolean isVisibleToUser(java.lang.Object) -> v
    669:670:void setVisibleToUser(java.lang.Object,boolean) -> k
    674:674:boolean isAccessibilityFocused(java.lang.Object) -> w
    679:680:void setAccessibilityFocused(java.lang.Object,boolean) -> l
    684:684:boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    689:690:void setMovementGranularities(java.lang.Object,int) -> f
    694:694:int getMovementGranularities(java.lang.Object) -> u
    699:700:void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompat$AccessibilityNodeInfoStubImpl -> android.support.v4.view.a.e:
    100:100:java.lang.Object obtain() -> a
    105:105:java.lang.Object obtain(android.view.View) -> a
    110:110:java.lang.Object obtain(android.view.View,int) -> a
    115:115:java.lang.Object obtain(java.lang.Object) -> a
    121:121:void addAction(java.lang.Object,int) -> a
    126:126:void addChild(java.lang.Object,android.view.View) -> a
    131:131:void addChild(java.lang.Object,android.view.View,int) -> b
    135:135:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    140:140:int getActions(java.lang.Object) -> b
    146:146:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    151:151:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    155:155:java.lang.Object getChild(java.lang.Object,int) -> b
    160:160:int getChildCount(java.lang.Object) -> c
    165:165:java.lang.CharSequence getClassName(java.lang.Object) -> d
    170:170:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    175:175:java.lang.CharSequence getPackageName(java.lang.Object) -> f
    180:180:java.lang.Object getParent(java.lang.Object) -> g
    185:185:java.lang.CharSequence getText(java.lang.Object) -> h
    190:190:int getWindowId(java.lang.Object) -> i
    195:195:boolean isCheckable(java.lang.Object) -> j
    200:200:boolean isChecked(java.lang.Object) -> k
    205:205:boolean isClickable(java.lang.Object) -> l
    210:210:boolean isEnabled(java.lang.Object) -> m
    215:215:boolean isFocusable(java.lang.Object) -> n
    220:220:boolean isFocused(java.lang.Object) -> o
    225:225:boolean isVisibleToUser(java.lang.Object) -> v
    230:230:boolean isAccessibilityFocused(java.lang.Object) -> w
    235:235:boolean isLongClickable(java.lang.Object) -> p
    240:240:boolean isPassword(java.lang.Object) -> q
    245:245:boolean isScrollable(java.lang.Object) -> r
    250:250:boolean isSelected(java.lang.Object) -> s
    255:255:boolean performAction(java.lang.Object,int) -> c
    260:260:boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    266:266:void setMovementGranularities(java.lang.Object,int) -> f
    270:270:int getMovementGranularities(java.lang.Object) -> u
    276:276:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    281:281:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    286:286:void setCheckable(java.lang.Object,boolean) -> a
    291:291:void setChecked(java.lang.Object,boolean) -> b
    296:296:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    301:301:void setClickable(java.lang.Object,boolean) -> c
    306:306:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    311:311:void setEnabled(java.lang.Object,boolean) -> d
    316:316:void setFocusable(java.lang.Object,boolean) -> e
    321:321:void setFocused(java.lang.Object,boolean) -> f
    326:326:void setVisibleToUser(java.lang.Object,boolean) -> k
    331:331:void setAccessibilityFocused(java.lang.Object,boolean) -> l
    336:336:void setLongClickable(java.lang.Object,boolean) -> g
    341:341:void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    346:346:void setParent(java.lang.Object,android.view.View) -> b
    351:351:void setPassword(java.lang.Object,boolean) -> h
    356:356:void setScrollable(java.lang.Object,boolean) -> i
    361:361:void setSelected(java.lang.Object,boolean) -> j
    366:366:void setSource(java.lang.Object,android.view.View) -> c
    371:371:void setSource(java.lang.Object,android.view.View,int) -> a
    375:375:java.lang.Object findFocus(java.lang.Object,int) -> d
    380:380:java.lang.Object focusSearch(java.lang.Object,int) -> e
    386:386:void setText(java.lang.Object,java.lang.CharSequence) -> d
    391:391:void recycle(java.lang.Object) -> t
    396:396:void setParent(java.lang.Object,android.view.View,int) -> c
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatIcs -> android.support.v4.view.a.f:
    31:31:java.lang.Object obtain() -> a
    35:35:java.lang.Object obtain(android.view.View) -> a
    39:39:java.lang.Object obtain(java.lang.Object) -> a
    43:44:void addAction(java.lang.Object,int) -> a
    47:48:void addChild(java.lang.Object,android.view.View) -> a
    52:53:java.util.List findAccessibilityNodeInfosByText(java.lang.Object,java.lang.String) -> a
    57:57:int getActions(java.lang.Object) -> b
    61:62:void getBoundsInParent(java.lang.Object,android.graphics.Rect) -> a
    65:66:void getBoundsInScreen(java.lang.Object,android.graphics.Rect) -> b
    69:69:java.lang.Object getChild(java.lang.Object,int) -> b
    73:73:int getChildCount(java.lang.Object) -> c
    77:77:java.lang.CharSequence getClassName(java.lang.Object) -> d
    81:81:java.lang.CharSequence getContentDescription(java.lang.Object) -> e
    85:85:java.lang.CharSequence getPackageName(java.lang.Object) -> f
    89:89:java.lang.Object getParent(java.lang.Object) -> g
    93:93:java.lang.CharSequence getText(java.lang.Object) -> h
    97:97:int getWindowId(java.lang.Object) -> i
    101:101:boolean isCheckable(java.lang.Object) -> j
    105:105:boolean isChecked(java.lang.Object) -> k
    109:109:boolean isClickable(java.lang.Object) -> l
    113:113:boolean isEnabled(java.lang.Object) -> m
    117:117:boolean isFocusable(java.lang.Object) -> n
    121:121:boolean isFocused(java.lang.Object) -> o
    125:125:boolean isLongClickable(java.lang.Object) -> p
    129:129:boolean isPassword(java.lang.Object) -> q
    133:133:boolean isScrollable(java.lang.Object) -> r
    137:137:boolean isSelected(java.lang.Object) -> s
    141:141:boolean performAction(java.lang.Object,int) -> c
    145:146:void setBoundsInParent(java.lang.Object,android.graphics.Rect) -> c
    149:150:void setBoundsInScreen(java.lang.Object,android.graphics.Rect) -> d
    153:154:void setCheckable(java.lang.Object,boolean) -> a
    157:158:void setChecked(java.lang.Object,boolean) -> b
    161:162:void setClassName(java.lang.Object,java.lang.CharSequence) -> a
    165:166:void setClickable(java.lang.Object,boolean) -> c
    169:170:void setContentDescription(java.lang.Object,java.lang.CharSequence) -> b
    173:174:void setEnabled(java.lang.Object,boolean) -> d
    177:178:void setFocusable(java.lang.Object,boolean) -> e
    181:182:void setFocused(java.lang.Object,boolean) -> f
    185:186:void setLongClickable(java.lang.Object,boolean) -> g
    189:190:void setPackageName(java.lang.Object,java.lang.CharSequence) -> c
    193:194:void setParent(java.lang.Object,android.view.View) -> b
    197:198:void setPassword(java.lang.Object,boolean) -> h
    201:202:void setScrollable(java.lang.Object,boolean) -> i
    205:206:void setSelected(java.lang.Object,boolean) -> j
    209:210:void setSource(java.lang.Object,android.view.View) -> c
    213:214:void setText(java.lang.Object,java.lang.CharSequence) -> d
    217:218:void recycle(java.lang.Object) -> t
android.support.v4.view.accessibility.AccessibilityNodeInfoCompatJellyBean -> android.support.v4.view.a.g:
    29:30:void addChild(java.lang.Object,android.view.View,int) -> a
    33:34:void setSource(java.lang.Object,android.view.View,int) -> b
    37:37:boolean isVisibleToUser(java.lang.Object) -> a
    41:42:void setVisibleToUser(java.lang.Object,boolean) -> a
    45:45:boolean performAction(java.lang.Object,int,android.os.Bundle) -> a
    49:50:void setMovementGranularities(java.lang.Object,int) -> a
    53:53:int getMovementGranularities(java.lang.Object) -> b
    57:57:java.lang.Object obtain(android.view.View,int) -> a
    61:61:java.lang.Object findFocus(java.lang.Object,int) -> b
    65:65:java.lang.Object focusSearch(java.lang.Object,int) -> c
    69:70:void setParent(java.lang.Object,android.view.View,int) -> c
    73:73:boolean isAccessibilityFocused(java.lang.Object) -> c
    77:78:void setAccesibilityFocused(java.lang.Object,boolean) -> b
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat -> android.support.v4.view.a.h:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl IMPL -> a
    java.lang.Object mProvider -> b
    117:117:java.lang.Object getProvider() -> a
    143:143:android.support.v4.view.accessibility.AccessibilityNodeInfoCompat createAccessibilityNodeInfo(int) -> a
    160:160:boolean performAction(int,int,android.os.Bundle) -> a
    179:179:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderImpl -> android.support.v4.view.a.i:
    java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl -> android.support.v4.view.a.j:
    47:47:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl$1 -> android.support.v4.view.a.k:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat val$compat -> a
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderJellyBeanImpl this$0 -> b
    52:52:boolean performAction(int,int,android.os.Bundle) -> a
    58:66:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
    72:77:java.lang.Object createAccessibilityNodeInfo(int) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompat$AccessibilityNodeProviderStubImpl -> android.support.v4.view.a.l:
    39:39:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompat) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean -> android.support.v4.view.a.m:
    38:38:java.lang.Object newAccessibilityNodeProviderBridge(android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge) -> a
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$1 -> android.support.v4.view.a.n:
    android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge val$bridge -> a
    41:41:android.view.accessibility.AccessibilityNodeInfo createAccessibilityNodeInfo(int) -> createAccessibilityNodeInfo
    49:49:java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> findAccessibilityNodeInfosByText
    55:55:boolean performAction(int,int,android.os.Bundle) -> performAction
android.support.v4.view.accessibility.AccessibilityNodeProviderCompatJellyBean$AccessibilityNodeInfoBridge -> android.support.v4.view.a.o:
    java.lang.Object createAccessibilityNodeInfo(int) -> a
    boolean performAction(int,int,android.os.Bundle) -> a
    java.util.List findAccessibilityNodeInfosByText(java.lang.String,int) -> a
android.support.v4.widget.EdgeEffectCompat -> android.support.v4.d.a:
    java.lang.Object mEdgeEffect -> a
    android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl IMPL -> b
    143:144:void setSize(int,int) -> a
    154:154:boolean isFinished() -> a
    162:163:void finish() -> b
    177:177:boolean onPull(float) -> a
    189:189:boolean onRelease() -> c
    204:204:boolean onAbsorb(int) -> a
    218:218:boolean draw(android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$BaseEdgeEffectImpl -> android.support.v4.d.b:
    60:60:java.lang.Object newEdgeEffect(android.content.Context) -> a
    64:64:void setSize(java.lang.Object,int,int) -> a
    67:67:boolean isFinished(java.lang.Object) -> a
    71:71:void finish(java.lang.Object) -> b
    74:74:boolean onPull(java.lang.Object,float) -> a
    78:78:boolean onRelease(java.lang.Object) -> c
    82:82:boolean onAbsorb(java.lang.Object,int) -> a
    86:86:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectIcsImpl -> android.support.v4.d.c:
    92:92:java.lang.Object newEdgeEffect(android.content.Context) -> a
    96:97:void setSize(java.lang.Object,int,int) -> a
    100:100:boolean isFinished(java.lang.Object) -> a
    104:105:void finish(java.lang.Object) -> b
    108:108:boolean onPull(java.lang.Object,float) -> a
    112:112:boolean onRelease(java.lang.Object) -> c
    116:116:boolean onAbsorb(java.lang.Object,int) -> a
    120:120:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompat$EdgeEffectImpl -> android.support.v4.d.d:
    java.lang.Object newEdgeEffect(android.content.Context) -> a
    void setSize(java.lang.Object,int,int) -> a
    boolean isFinished(java.lang.Object) -> a
    void finish(java.lang.Object) -> b
    boolean onPull(java.lang.Object,float) -> a
    boolean onRelease(java.lang.Object) -> c
    boolean onAbsorb(java.lang.Object,int) -> a
    boolean draw(java.lang.Object,android.graphics.Canvas) -> a
android.support.v4.widget.EdgeEffectCompatIcs -> android.support.v4.d.e:
    30:30:java.lang.Object newEdgeEffect(android.content.Context) -> a
    34:35:void setSize(java.lang.Object,int,int) -> a
    38:38:boolean isFinished(java.lang.Object) -> a
    42:43:void finish(java.lang.Object) -> b
    46:47:boolean onPull(java.lang.Object,float) -> a
    51:53:boolean onRelease(java.lang.Object) -> c
    57:58:boolean onAbsorb(java.lang.Object,int) -> a
    62:62:boolean draw(java.lang.Object,android.graphics.Canvas) -> a
com.benlakey.android.Connectivity -> com.benlakey.a.a:
    32:35:boolean isConnected(android.content.Context) -> a
    43:46:void disableConnectionReuseIfNecessary() -> a
com.benlakey.stackcareers.InjectionModule -> com.benlakey.stackcareers.a:
    28:29:void configure(com.google.inject.Binder) -> configure
com.benlakey.stackcareers.JobActivity -> com.benlakey.stackcareers.JobActivity:
    android.widget.TextView titleTextView -> a
    android.widget.TextView uriTextView -> b
    android.widget.TextView postedTimeTextView -> c
    android.widget.TextView updatedTimeTextView -> d
    android.widget.TextView descriptionTextView -> e
    com.benlakey.stackcareers.JobListing listing -> f
    51:67:void onCreate(android.os.Bundle) -> onCreate
    71:73:void onStart() -> onStart
    77:79:void onStop() -> onStop
    82:85:void setTitle() -> a
    88:91:void setUri() -> b
    94:97:void setPostedTime() -> c
    100:103:void setUpdatedTime() -> d
    106:111:void setDescription() -> e
    115:129:void share(android.view.View) -> share
com.benlakey.stackcareers.JobListing -> com.benlakey.stackcareers.b:
    java.lang.String title -> a
    java.lang.String encodedDescriptionMarkup -> b
    java.lang.String postedDateTime -> c
    java.lang.String updatedDateTime -> d
    java.lang.String uri -> e
    32:32:java.lang.String getTitle() -> a
    36:37:void setTitle(java.lang.String) -> a
    40:40:java.lang.String getEncodedDescriptionMarkup() -> b
    44:45:void setEncodedDescriptionMarkup(java.lang.String) -> b
    48:48:java.lang.String getPostedDateTime() -> c
    52:53:void setPostedDateTime(java.lang.String) -> c
    56:56:java.lang.String getUpdatedDateTime() -> d
    60:61:void setUpdatedDateTime(java.lang.String) -> d
    64:64:java.lang.String getUri() -> e
    68:69:void setUri(java.lang.String) -> e
    73:73:java.lang.String toString() -> toString
com.benlakey.stackcareers.JobResultsActivity -> com.benlakey.stackcareers.JobResultsActivity:
    android.widget.ListView searchResults -> b
    android.widget.ProgressBar searchProgress -> c
    android.widget.TextView resultsLabel -> d
    com.benlakey.stackcareers.feed.CareerFeedClient client -> a
    java.util.ArrayList listings -> e
    62:74:void onCreate(android.os.Bundle) -> onCreate
    78:80:void onStart() -> onStart
    84:86:void onStop() -> onStop
    90:92:void onSaveInstanceState(android.os.Bundle) -> onSaveInstanceState
    97:106:void onRestoreInstanceState(android.os.Bundle) -> onRestoreInstanceState
    110:115:void executeSearch() -> executeSearch
    119:125:com.benlakey.stackcareers.SearchQuery getQuery() -> a
    158:182:void loadNewListings(java.util.List) -> a
    156:156:void access$0(com.benlakey.stackcareers.JobResultsActivity,java.util.List) -> a
    53:53:java.util.ArrayList access$1(com.benlakey.stackcareers.JobResultsActivity) -> a
com.benlakey.stackcareers.JobResultsActivity$1 -> com.benlakey.stackcareers.c:
    com.benlakey.stackcareers.JobResultsActivity this$0 -> a
    167:171:void onItemClick(android.widget.AdapterView,android.view.View,int,long) -> onItemClick
com.benlakey.stackcareers.JobResultsActivity$SearchExecutor -> com.benlakey.stackcareers.d:
    com.benlakey.stackcareers.JobResultsActivity this$0 -> a
    134:145:java.util.List doInBackground(com.benlakey.stackcareers.SearchQuery[]) -> a
    151:152:void onPostExecute(java.util.List) -> a
    1:1:void onPostExecute(java.lang.Object) -> onPostExecute
    1:1:java.lang.Object doInBackground(java.lang.Object[]) -> doInBackground
com.benlakey.stackcareers.JobResultsAdapter -> com.benlakey.stackcareers.e:
    android.view.LayoutInflater inflater -> a
    int rowViewId -> b
    java.util.List listings -> c
    44:51:android.view.View getView(int,android.view.View,android.view.ViewGroup) -> getView
com.benlakey.stackcareers.MainActivity -> com.benlakey.stackcareers.MainActivity:
    byte[] LICENSE_SALT -> a
    com.google.android.vending.licensing.LicenseChecker licenseChecker -> b
    int licenseTryCount -> c
    android.widget.EditText skillEditText -> d
    android.widget.EditText locationEditText -> e
    64:75:void onCreate(android.os.Bundle) -> onCreate
    79:90:void performLicenseCheck() -> a
    94:96:void onStart() -> onStart
    100:102:void onStop() -> onStop
    106:108:void onDestroy() -> onDestroy
    111:119:void setClearOnClick(android.widget.EditText) -> a
    123:133:void executeSearch(android.view.View) -> executeSearch
    136:140:java.lang.String getEditTextValue(android.widget.EditText) -> b
    175:178:void sendUserToAppStore() -> b
    53:53:void access$0(com.benlakey.stackcareers.MainActivity,int) -> a
    53:53:int access$1(com.benlakey.stackcareers.MainActivity) -> a
    77:77:void access$2(com.benlakey.stackcareers.MainActivity) -> b
    174:174:void access$3(com.benlakey.stackcareers.MainActivity) -> c
com.benlakey.stackcareers.MainActivity$1 -> com.benlakey.stackcareers.f:
    com.benlakey.stackcareers.MainActivity this$0 -> a
    android.widget.EditText val$editText -> b
    114:117:void onFocusChange(android.view.View,boolean) -> onFocusChange
com.benlakey.stackcareers.MainActivity$StackCareersLicenseCheckerCallback -> com.benlakey.stackcareers.g:
    com.benlakey.stackcareers.MainActivity this$0 -> a
    147:160:void dontAllow(int) -> a
    164:165:void allow(int) -> b
    169:170:void applicationError(int) -> c
com.benlakey.stackcareers.SearchQuery -> com.benlakey.stackcareers.h:
    java.lang.String skill -> a
    java.lang.String location -> b
    int radiusMiles -> c
    32:32:java.lang.String getSkill() -> a
    36:36:java.lang.String getLocation() -> b
    40:40:int getRadiusMiles() -> c
com.benlakey.stackcareers.StackCareersApplication -> com.benlakey.stackcareers.StackCareersApplication:
    29:37:void onCreate() -> onCreate
com.benlakey.stackcareers.feed.CareerFeedClient -> com.benlakey.stackcareers.a.a:
    java.util.List search(com.benlakey.stackcareers.SearchQuery) -> a
com.benlakey.stackcareers.feed.HttpCareerFeedClient -> com.benlakey.stackcareers.a.b:
    com.benlakey.stackcareers.feed.HttpSearchRequestBuilder requestBuilder -> a
    com.benlakey.stackcareers.feed.HttpSearchResponseParser responseParser -> b
    53:63:java.util.List search(com.benlakey.stackcareers.SearchQuery) -> a
    69:75:java.net.URL constructURL(com.benlakey.stackcareers.SearchQuery) -> b
    83:100:java.io.InputStream fetchData(java.net.URL) -> a
    106:110:void configureConnection(java.net.HttpURLConnection) -> a
com.benlakey.stackcareers.feed.HttpSearchRequestBuilder -> com.benlakey.stackcareers.a.c:
    android.content.Context context -> a
    java.lang.String skill -> b
    java.lang.String location -> c
    39:40:com.benlakey.stackcareers.feed.HttpSearchRequestBuilder setSkill(java.lang.String) -> a
    44:45:com.benlakey.stackcareers.feed.HttpSearchRequestBuilder setLocation(java.lang.String) -> b
    49:54:java.net.URL build() -> a
com.benlakey.stackcareers.feed.HttpSearchResponseParser -> com.benlakey.stackcareers.a.d:
    37:46:java.util.List parse(java.io.InputStream) -> a
    53:76:java.util.List readFeed(org.xmlpull.v1.XmlPullParser) -> a
    82:114:com.benlakey.stackcareers.JobListing readEntry(org.xmlpull.v1.XmlPullParser) -> b
    119:122:java.lang.String readTagText(org.xmlpull.v1.XmlPullParser,java.lang.String) -> a
    126:131:java.lang.String readTagText(org.xmlpull.v1.XmlPullParser) -> c
    135:145:void skipElement(org.xmlpull.v1.XmlPullParser) -> d
com.google.analytics.tracking.android.AdHitIdGenerator -> com.google.analytics.tracking.android.a:
    boolean adMobSdkInstalled -> a
    31:34:int getAdHitId() -> a
com.google.analytics.tracking.android.AdMobInfo -> com.google.analytics.tracking.android.b:
    com.google.analytics.tracking.android.AdMobInfo INSTANCE -> a
    int adHitId -> b
    java.util.Random random -> c
    40:40:com.google.analytics.tracking.android.AdMobInfo getInstance() -> a
    55:56:int generateAdHitId() -> b
com.google.analytics.tracking.android.Analytics -> com.google.analytics.tracking.android.c:
    void setDebug(boolean) -> a
    boolean debugEnabled() -> a
    com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> a
    com.google.analytics.tracking.android.Tracker getDefaultTracker() -> b
    void setDefaultTracker(com.google.analytics.tracking.android.Tracker) -> a
    void setAppOptOut(boolean) -> b
    void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> a
com.google.analytics.tracking.android.Analytics$AppOptOutCallback -> com.google.analytics.tracking.android.d:
    void reportAppOptOut(boolean) -> a
com.google.analytics.tracking.android.AnalyticsClient -> com.google.analytics.tracking.android.e:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
    void connect() -> b
    void disconnect() -> c
com.google.analytics.tracking.android.AnalyticsGmsCoreClient -> com.google.analytics.tracking.android.f:
    android.content.ServiceConnection connection -> a
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener onConnectedListener -> b
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener onConnectionFailedListener -> c
    android.content.Context context -> d
    com.google.android.gms.analytics.internal.IAnalyticsService service -> e
    68:82:void connect() -> b
    93:99:void disconnect() -> c
    105:109:void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    114:118:void clearHits() -> a
    120:121:com.google.android.gms.analytics.internal.IAnalyticsService getService() -> f
    129:133:void checkConnected() -> d
    139:139:boolean isConnected() -> e
    181:182:void onServiceBound() -> g
    189:190:void onConnectionSuccess() -> h
    23:23:com.google.android.gms.analytics.internal.IAnalyticsService access$002(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,com.google.android.gms.analytics.internal.IAnalyticsService) -> a
    23:23:void access$100(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> a
    23:23:android.content.Context access$200(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> b
    23:23:android.content.ServiceConnection access$302(com.google.analytics.tracking.android.AnalyticsGmsCoreClient,android.content.ServiceConnection) -> a
    23:23:com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener access$400(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> c
    23:23:com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener access$500(com.google.analytics.tracking.android.AnalyticsGmsCoreClient) -> d
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$AnalyticsServiceConnection -> com.google.analytics.tracking.android.g:
    com.google.analytics.tracking.android.AnalyticsGmsCoreClient this$0 -> a
    146:166:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    170:173:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectedListener -> com.google.analytics.tracking.android.h:
    void onConnected() -> a
    void onDisconnected() -> b
com.google.analytics.tracking.android.AnalyticsGmsCoreClient$OnConnectionFailedListener -> com.google.analytics.tracking.android.i:
    void onConnectionFailed(int,android.content.Intent) -> a
com.google.analytics.tracking.android.AnalyticsReceiver -> com.google.analytics.tracking.android.AnalyticsReceiver:
    29:45:void onReceive(android.content.Context,android.content.Intent) -> onReceive
com.google.analytics.tracking.android.AnalyticsStore -> com.google.analytics.tracking.android.j:
    void setDispatch(boolean) -> a
    void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    void clearHits() -> a
    void dispatch() -> b
    void close() -> c
    void setThrottlingEnabled(boolean) -> b
com.google.analytics.tracking.android.AnalyticsStoreStateListener -> com.google.analytics.tracking.android.k:
    void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.AnalyticsThread -> com.google.analytics.tracking.android.l:
    void sendHit(java.util.Map) -> a
    void dispatch() -> a
    void setAppOptOut(boolean) -> a
    void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> a
    void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    java.lang.Thread getThread() -> c
com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback -> com.google.analytics.tracking.android.m:
    void reportClientId(java.lang.String) -> a
com.google.analytics.tracking.android.Clock -> com.google.analytics.tracking.android.n:
    long currentTimeMillis() -> a
com.google.analytics.tracking.android.Dispatcher -> com.google.analytics.tracking.android.o:
    int dispatchHits(java.util.List) -> a
    boolean okToDispatch() -> a
com.google.analytics.tracking.android.EasyTracker -> com.google.analytics.tracking.android.p:
    com.google.analytics.tracking.android.EasyTracker instance -> a
    boolean gaEnabled -> b
    java.lang.String gaTrackingId -> c
    java.lang.String gaAppName -> d
    java.lang.String gaAppVersion -> e
    int gaDispatchPeriod -> f
    boolean gaDebug -> g
    java.lang.Double gaSampleRate -> h
    boolean gaAnonymizeIp -> i
    boolean gaReportUncaughtExceptions -> j
    java.lang.Thread$UncaughtExceptionHandler handler -> k
    boolean autoActivityTracking -> l
    int activitiesActive -> m
    long gaSessionTimeout -> n
    long lastOnStopTime -> o
    android.content.Context gaContext -> p
    java.util.Map activityNameMap -> q
    com.google.analytics.tracking.android.Tracker tracker -> r
    com.google.analytics.tracking.android.ParameterLoader parameterFetcher -> s
    com.google.analytics.tracking.android.Analytics ga -> t
    com.google.analytics.tracking.android.ServiceManager serviceManager -> u
    com.google.analytics.tracking.android.Clock clock -> v
    java.util.Timer timer -> w
    java.util.TimerTask timerTask -> x
    boolean inForeground -> y
    110:113:com.google.analytics.tracking.android.EasyTracker getInstance() -> a
    125:129:com.google.analytics.tracking.android.Tracker getTracker() -> b
    223:223:boolean checkForNewSession() -> c
    232:285:void loadParameters() -> e
    305:314:void setContext(android.content.Context) -> a
    324:334:void setContext(android.content.Context,com.google.analytics.tracking.android.ParameterLoader,com.google.analytics.tracking.android.Analytics,com.google.analytics.tracking.android.ServiceManager) -> a
    348:369:void activityStart(android.app.Activity) -> a
    379:398:void activityStop(android.app.Activity) -> b
    404:407:void dispatch() -> d
    410:414:void clearExistingTimer() -> f
    426:435:java.lang.String getActivityName(android.app.Activity) -> c
    93:93:boolean access$102(com.google.analytics.tracking.android.EasyTracker,boolean) -> a
com.google.analytics.tracking.android.EasyTracker$1 -> com.google.analytics.tracking.android.q:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    99:99:long currentTimeMillis() -> a
com.google.analytics.tracking.android.EasyTracker$NoopTracker -> com.google.analytics.tracking.android.r:
    java.lang.String appId -> b
    java.lang.String appInstallerId -> c
    double sampleRate -> d
    boolean anonymizeIp -> e
    boolean useSecure -> f
    com.google.analytics.tracking.android.ExceptionParser exceptionParser -> g
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    473:473:void setStartSession(boolean) -> a
    477:477:void setAppName(java.lang.String) -> a
    481:481:void setAppVersion(java.lang.String) -> b
    485:485:void setAppScreen(java.lang.String) -> c
    489:489:void trackView() -> a
    493:493:void trackView(java.lang.String) -> d
    497:497:void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> a
    501:501:void trackTransaction(com.google.analytics.tracking.android.Transaction) -> a
    505:505:void trackException(java.lang.String,boolean) -> a
    509:509:void trackException(java.lang.String,java.lang.Throwable,boolean) -> a
    514:514:void trackTiming(java.lang.String,long,java.lang.String,java.lang.String) -> a
    518:518:void trackSocial(java.lang.String,java.lang.String,java.lang.String) -> a
    522:522:void close() -> b
    526:526:void send(java.lang.String,java.util.Map) -> a
    530:530:java.lang.String get(java.lang.String) -> e
    535:535:void set(java.lang.String,java.lang.String) -> a
    539:539:java.lang.String getTrackingId() -> c
    544:545:void setAnonymizeIp(boolean) -> b
    549:549:boolean anonymizeIpEnabled() -> d
    554:555:void setSampleRate(double) -> a
    559:559:double getSampleRate() -> e
    564:565:void setUseSecure(boolean) -> c
    569:569:boolean getUseSecure() -> f
    574:574:void setReferrer(java.lang.String) -> f
    578:578:void setCampaign(java.lang.String) -> g
    582:583:void setAppId(java.lang.String) -> h
    587:587:java.lang.String getAppId() -> g
    592:593:void setAppInstallerId(java.lang.String) -> i
    597:597:java.lang.String getAppInstallerId() -> h
    602:603:void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> a
    607:607:com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> i
    613:613:java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> b
    618:618:java.util.Map constructTransaction(com.google.analytics.tracking.android.Transaction) -> b
    624:624:java.util.Map constructException(java.lang.String,boolean) -> b
    630:630:java.util.Map constructRawException(java.lang.String,java.lang.Throwable,boolean) -> b
    636:636:java.util.Map constructTiming(java.lang.String,long,java.lang.String,java.lang.String) -> b
    641:641:java.util.Map constructSocial(java.lang.String,java.lang.String,java.lang.String) -> b
    646:646:void setCustomDimension(int,java.lang.String) -> a
    650:650:void setCustomMetric(int,java.lang.Long) -> a
    655:655:void setCustomDimensionsAndMetrics(java.util.Map,java.util.Map) -> a
com.google.analytics.tracking.android.EasyTracker$NotInForegroundTimerTask -> com.google.analytics.tracking.android.s:
    com.google.analytics.tracking.android.EasyTracker this$0 -> a
    661:666:void run() -> run
com.google.analytics.tracking.android.ExceptionParser -> com.google.analytics.tracking.android.t:
    java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.ExceptionReporter -> com.google.analytics.tracking.android.u:
    java.lang.Thread$UncaughtExceptionHandler originalHandler -> a
    com.google.analytics.tracking.android.Tracker tracker -> b
    com.google.analytics.tracking.android.ServiceManager serviceManager -> c
    com.google.analytics.tracking.android.ExceptionParser exceptionParser -> d
    54:54:com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> a
    58:59:void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> a
    64:80:void uncaughtException(java.lang.Thread,java.lang.Throwable) -> uncaughtException
com.google.analytics.tracking.android.FutureApis -> com.google.analytics.tracking.android.v:
    26:31:int version() -> a
    39:53:boolean setOwnerOnlyReadWrite(java.lang.String) -> a
com.google.analytics.tracking.android.GAServiceManager -> com.google.analytics.tracking.android.w:
    java.lang.Object MSG_OBJECT -> a
    android.content.Context ctx -> b
    com.google.analytics.tracking.android.AnalyticsStore store -> c
    com.google.analytics.tracking.android.AnalyticsThread thread -> d
    int dispatchPeriodInSeconds -> e
    boolean pendingDispatch -> f
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> g
    android.os.Handler handler -> h
    boolean powerSaveMode -> i
    com.google.analytics.tracking.android.GAServiceManager instance -> j
    57:60:com.google.analytics.tracking.android.GAServiceManager getInstance() -> a
    76:98:void initializeHandler() -> e
    109:120:void initialize(android.content.Context,com.google.analytics.tracking.android.AnalyticsThread) -> a
    141:153:com.google.analytics.tracking.android.AnalyticsStore getStore() -> b
    160:168:void dispatch() -> c
    172:188:void setDispatchPeriod(int) -> a
    194:206:void updatePowerSaveMode(boolean) -> a
    20:20:java.lang.Object access$000() -> d
    20:20:int access$100(com.google.analytics.tracking.android.GAServiceManager) -> a
    20:20:boolean access$200(com.google.analytics.tracking.android.GAServiceManager) -> b
    20:20:android.os.Handler access$300(com.google.analytics.tracking.android.GAServiceManager) -> c
com.google.analytics.tracking.android.GAServiceManager$1 -> com.google.analytics.tracking.android.x:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    45:46:void reportStoreIsEmpty(boolean) -> a
com.google.analytics.tracking.android.GAServiceManager$2 -> com.google.analytics.tracking.android.y:
    com.google.analytics.tracking.android.GAServiceManager this$0 -> a
    80:90:boolean handleMessage(android.os.Message) -> handleMessage
com.google.analytics.tracking.android.GAServiceProxy -> com.google.analytics.tracking.android.z:
    long lastRequestTime -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState state -> b
    com.google.analytics.tracking.android.AnalyticsClient client -> c
    com.google.analytics.tracking.android.AnalyticsStore store -> d
    com.google.analytics.tracking.android.AnalyticsStore testStore -> e
    com.google.analytics.tracking.android.AnalyticsThread thread -> f
    android.content.Context ctx -> g
    java.util.Queue queue -> h
    int connectTries -> i
    java.util.Timer reConnectTimer -> j
    java.util.Timer failedConnectTimer -> k
    java.util.Timer disconnectCheckTimer -> l
    boolean pendingDispatch -> m
    boolean pendingClearHits -> n
    com.google.analytics.tracking.android.Clock clock -> o
    long idleTimeout -> p
    95:99:void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    103:113:void dispatch() -> c
    117:132:void clearHits() -> d
    141:144:java.util.Timer cancelTimer(java.util.Timer) -> a
    148:151:void clearAllTimers() -> f
    159:164:void createService() -> e
    182:183:void setIdleTimeout(long) -> a
    194:239:void sendQueue() -> g
    245:247:void dispatchToStore() -> h
    253:268:void useStore() -> i
    271:288:void connectToService() -> j
    291:295:void disconnectFromService() -> k
    299:307:void onConnected() -> a
    311:324:void onDisconnected() -> b
    328:335:void onConnectionFailed(int,android.content.Intent) -> a
    338:341:void fireReconnectAttempt() -> l
    27:27:void access$000(com.google.analytics.tracking.android.GAServiceProxy) -> a
    27:27:com.google.analytics.tracking.android.GAServiceProxy$ConnectState access$400(com.google.analytics.tracking.android.GAServiceProxy) -> b
    27:27:void access$500(com.google.analytics.tracking.android.GAServiceProxy) -> c
    27:27:void access$600(com.google.analytics.tracking.android.GAServiceProxy) -> d
    27:27:java.util.Queue access$700(com.google.analytics.tracking.android.GAServiceProxy) -> e
    27:27:long access$800(com.google.analytics.tracking.android.GAServiceProxy) -> f
    27:27:long access$900(com.google.analytics.tracking.android.GAServiceProxy) -> g
    27:27:com.google.analytics.tracking.android.Clock access$1000(com.google.analytics.tracking.android.GAServiceProxy) -> h
    27:27:void access$1100(com.google.analytics.tracking.android.GAServiceProxy) -> i
    27:27:java.util.Timer access$1200(com.google.analytics.tracking.android.GAServiceProxy) -> j
com.google.analytics.tracking.android.GAServiceProxy$1 -> com.google.analytics.tracking.android.aa:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    74:74:long currentTimeMillis() -> a
com.google.analytics.tracking.android.GAServiceProxy$2 -> com.google.analytics.tracking.android.ab:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    198:199:void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$3 -> com.google.analytics.tracking.android.ac:
    int[] $SwitchMap$com$google$analytics$tracking$android$GAServiceProxy$ConnectState -> a
com.google.analytics.tracking.android.GAServiceProxy$ConnectState -> com.google.analytics.tracking.android.ad:
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTING -> a
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_SERVICE -> b
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState CONNECTED_LOCAL -> c
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState BLOCKED -> d
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_CONNECTION -> e
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState PENDING_DISCONNECT -> f
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState DISCONNECTED -> g
    com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] $VALUES -> h
    29:29:com.google.analytics.tracking.android.GAServiceProxy$ConnectState[] values() -> values
    29:29:com.google.analytics.tracking.android.GAServiceProxy$ConnectState valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GAServiceProxy$DisconnectCheckTask -> com.google.analytics.tracking.android.ae:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    363:371:void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$FailedConnectTask -> com.google.analytics.tracking.android.af:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    346:350:void run() -> run
com.google.analytics.tracking.android.GAServiceProxy$HitParams -> com.google.analytics.tracking.android.ag:
    java.util.Map wireFormatParams -> a
    long hitTimeInMilliseconds -> b
    java.lang.String path -> c
    java.util.List commands -> d
    392:392:java.util.Map getWireFormatParams() -> a
    396:396:long getHitTimeInMilliseconds() -> b
    400:400:java.lang.String getPath() -> c
    404:404:java.util.List getCommands() -> d
com.google.analytics.tracking.android.GAServiceProxy$ReconnectTask -> com.google.analytics.tracking.android.ah:
    com.google.analytics.tracking.android.GAServiceProxy this$0 -> a
    356:357:void run() -> run
com.google.analytics.tracking.android.GAThread -> com.google.analytics.tracking.android.ai:
    java.util.concurrent.LinkedBlockingQueue queue -> a
    boolean disabled -> b
    boolean closed -> c
    boolean appOptOut -> d
    java.util.List commands -> e
    com.google.analytics.tracking.android.MetaModel metaModel -> f
    java.lang.String installCampaign -> g
    java.lang.String clientId -> h
    com.google.analytics.tracking.android.GAThread instance -> i
    com.google.analytics.tracking.android.ServiceProxy proxy -> j
    android.content.Context ctx -> k
    63:66:com.google.analytics.tracking.android.GAThread getInstance(android.content.Context) -> a
    88:97:void init() -> f
    101:127:void sendHit(java.util.Map) -> a
    131:137:java.lang.String getHostUrl(java.util.Map) -> b
    144:174:void fillExceptionParameters(java.util.Map) -> c
    179:192:boolean isSampledOut(java.util.Map) -> d
    197:217:void fillAppParameters(java.util.Map) -> e
    220:223:void putIfAbsent(java.util.Map,java.lang.String,java.lang.String) -> a
    226:246:void fillCampaignParameters(java.util.Map) -> f
    250:258:void dispatch() -> a
    262:287:void setAppOptOut(boolean) -> a
    291:299:void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> a
    303:311:void requestClientId(com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback) -> a
    314:315:void queueToThread(java.lang.Runnable) -> a
    322:322:boolean loadAppOptOut() -> g
    333:343:boolean storeClientId(java.lang.String) -> a
    361:366:java.lang.String generateClientId() -> d
    370:403:java.lang.String initializeClientId() -> e
    414:448:java.lang.String getAndClearCampaign(android.content.Context) -> b
    453:457:java.lang.String printStackTrace(java.lang.Throwable) -> a
    468:511:void run() -> run
    515:515:java.util.concurrent.LinkedBlockingQueue getQueue() -> b
    520:520:java.lang.Thread getThread() -> c
    35:35:boolean access$000(com.google.analytics.tracking.android.GAThread) -> a
    35:35:boolean access$100(com.google.analytics.tracking.android.GAThread,java.util.Map) -> a
    35:35:java.lang.String access$200(com.google.analytics.tracking.android.GAThread) -> b
    35:35:java.lang.String access$300(com.google.analytics.tracking.android.GAThread) -> c
    35:35:java.lang.String access$302(com.google.analytics.tracking.android.GAThread,java.lang.String) -> a
    35:35:void access$400(com.google.analytics.tracking.android.GAThread,java.util.Map) -> b
    35:35:void access$500(com.google.analytics.tracking.android.GAThread,java.util.Map) -> c
    35:35:void access$600(com.google.analytics.tracking.android.GAThread,java.util.Map) -> d
    35:35:com.google.analytics.tracking.android.MetaModel access$700(com.google.analytics.tracking.android.GAThread) -> d
    35:35:java.lang.String access$800(com.google.analytics.tracking.android.GAThread,java.util.Map) -> e
    35:35:java.util.List access$900(com.google.analytics.tracking.android.GAThread) -> e
    35:35:com.google.analytics.tracking.android.ServiceProxy access$1000(com.google.analytics.tracking.android.GAThread) -> f
    35:35:android.content.Context access$1100(com.google.analytics.tracking.android.GAThread) -> g
    35:35:boolean access$002(com.google.analytics.tracking.android.GAThread,boolean) -> a
com.google.analytics.tracking.android.GAThread$1 -> com.google.analytics.tracking.android.aj:
    java.util.Map val$hitCopy -> a
    long val$hitTime -> b
    com.google.analytics.tracking.android.GAThread this$0 -> c
    112:125:void run() -> run
com.google.analytics.tracking.android.GAThread$2 -> com.google.analytics.tracking.android.ak:
    com.google.analytics.tracking.android.GAThread this$0 -> a
    254:255:void run() -> run
com.google.analytics.tracking.android.GAThread$3 -> com.google.analytics.tracking.android.al:
    boolean val$appOptOut -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    266:283:void run() -> run
com.google.analytics.tracking.android.GAThread$4 -> com.google.analytics.tracking.android.am:
    com.google.analytics.tracking.android.Analytics$AppOptOutCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    295:296:void run() -> run
com.google.analytics.tracking.android.GAThread$5 -> com.google.analytics.tracking.android.an:
    com.google.analytics.tracking.android.AnalyticsThread$ClientIdCallback val$callback -> a
    com.google.analytics.tracking.android.GAThread this$0 -> b
    307:308:void run() -> run
com.google.analytics.tracking.android.GAUsage -> com.google.analytics.tracking.android.ao:
    java.util.SortedSet usedFields -> a
    java.lang.StringBuilder sequence -> b
    boolean disableUsage -> c
    com.google.analytics.tracking.android.GAUsage INSTANCE -> d
    97:97:com.google.analytics.tracking.android.GAUsage getInstance() -> a
    108:109:void setDisableUsage(boolean) -> a
    112:116:void setUsage(com.google.analytics.tracking.android.GAUsage$Field) -> a
    125:165:java.lang.String getAndClearUsage() -> b
    177:182:java.lang.String getAndClearSequence() -> c
com.google.analytics.tracking.android.GAUsage$Field -> com.google.analytics.tracking.android.ap:
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW -> a
    com.google.analytics.tracking.android.GAUsage$Field TRACK_VIEW_WITH_APPSCREEN -> b
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EVENT -> c
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TRANSACTION -> d
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_DESCRIPTION -> e
    com.google.analytics.tracking.android.GAUsage$Field TRACK_EXCEPTION_WITH_THROWABLE -> f
    com.google.analytics.tracking.android.GAUsage$Field BLANK_06 -> g
    com.google.analytics.tracking.android.GAUsage$Field TRACK_TIMING -> h
    com.google.analytics.tracking.android.GAUsage$Field TRACK_SOCIAL -> i
    com.google.analytics.tracking.android.GAUsage$Field GET -> j
    com.google.analytics.tracking.android.GAUsage$Field SET -> k
    com.google.analytics.tracking.android.GAUsage$Field SEND -> l
    com.google.analytics.tracking.android.GAUsage$Field SET_START_SESSION -> m
    com.google.analytics.tracking.android.GAUsage$Field BLANK_13 -> n
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_NAME -> o
    com.google.analytics.tracking.android.GAUsage$Field BLANK_15 -> p
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_VERSION -> q
    com.google.analytics.tracking.android.GAUsage$Field BLANK_17 -> r
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_SCREEN -> s
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKING_ID -> t
    com.google.analytics.tracking.android.GAUsage$Field SET_ANONYMIZE_IP -> u
    com.google.analytics.tracking.android.GAUsage$Field GET_ANONYMIZE_IP -> v
    com.google.analytics.tracking.android.GAUsage$Field SET_SAMPLE_RATE -> w
    com.google.analytics.tracking.android.GAUsage$Field GET_SAMPLE_RATE -> x
    com.google.analytics.tracking.android.GAUsage$Field SET_USE_SECURE -> y
    com.google.analytics.tracking.android.GAUsage$Field GET_USE_SECURE -> z
    com.google.analytics.tracking.android.GAUsage$Field SET_REFERRER -> A
    com.google.analytics.tracking.android.GAUsage$Field SET_CAMPAIGN -> B
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_ID -> C
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_ID -> D
    com.google.analytics.tracking.android.GAUsage$Field SET_EXCEPTION_PARSER -> E
    com.google.analytics.tracking.android.GAUsage$Field GET_EXCEPTION_PARSER -> F
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TRANSACTION -> G
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EXCEPTION -> H
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_RAW_EXCEPTION -> I
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_TIMING -> J
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_SOCIAL -> K
    com.google.analytics.tracking.android.GAUsage$Field SET_DEBUG -> L
    com.google.analytics.tracking.android.GAUsage$Field GET_DEBUG -> M
    com.google.analytics.tracking.android.GAUsage$Field GET_TRACKER -> N
    com.google.analytics.tracking.android.GAUsage$Field GET_DEFAULT_TRACKER -> O
    com.google.analytics.tracking.android.GAUsage$Field SET_DEFAULT_TRACKER -> P
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_OPT_OUT -> Q
    com.google.analytics.tracking.android.GAUsage$Field REQUEST_APP_OPT_OUT -> R
    com.google.analytics.tracking.android.GAUsage$Field DISPATCH -> S
    com.google.analytics.tracking.android.GAUsage$Field SET_DISPATCH_PERIOD -> T
    com.google.analytics.tracking.android.GAUsage$Field BLANK_48 -> U
    com.google.analytics.tracking.android.GAUsage$Field REPORT_UNCAUGHT_EXCEPTIONS -> V
    com.google.analytics.tracking.android.GAUsage$Field SET_AUTO_ACTIVITY_TRACKING -> W
    com.google.analytics.tracking.android.GAUsage$Field SET_SESSION_TIMEOUT -> X
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_EVENT -> Y
    com.google.analytics.tracking.android.GAUsage$Field CONSTRUCT_ITEM -> Z
    com.google.analytics.tracking.android.GAUsage$Field SET_APP_INSTALLER_ID -> aa
    com.google.analytics.tracking.android.GAUsage$Field GET_APP_INSTALLER_ID -> ab
    com.google.analytics.tracking.android.GAUsage$Field[] $VALUES -> ac
    31:31:com.google.analytics.tracking.android.GAUsage$Field[] values() -> values
    31:31:com.google.analytics.tracking.android.GAUsage$Field valueOf(java.lang.String) -> valueOf
com.google.analytics.tracking.android.GoogleAnalytics -> com.google.analytics.tracking.android.aq:
    boolean debug -> a
    com.google.analytics.tracking.android.AnalyticsThread thread -> b
    android.content.Context context -> c
    com.google.analytics.tracking.android.Tracker defaultTracker -> d
    com.google.analytics.tracking.android.AdHitIdGenerator adHitIdGenerator -> e
    java.lang.String clientId -> f
    java.lang.Boolean appOptOut -> g
    java.util.Map trackers -> h
    java.lang.String lastTrackingId -> i
    com.google.analytics.tracking.android.GoogleAnalytics instance -> j
    90:93:com.google.analytics.tracking.android.GoogleAnalytics getInstance(android.content.Context) -> a
    130:133:void setDebug(boolean) -> a
    137:138:boolean debugEnabled() -> a
    143:157:com.google.analytics.tracking.android.Tracker getTracker(java.lang.String) -> a
    162:163:com.google.analytics.tracking.android.Tracker getDefaultTracker() -> b
    168:170:void setDefaultTracker(com.google.analytics.tracking.android.Tracker) -> a
    174:178:void closeTracker(com.google.analytics.tracking.android.Tracker) -> b
    182:198:void sendHit(java.util.Map) -> a
    227:230:void setAppOptOut(boolean) -> b
    241:247:void requestAppOptOut(com.google.analytics.tracking.android.Analytics$AppOptOutCallback) -> a
    23:23:java.lang.Boolean access$002(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.Boolean) -> a
    23:23:java.lang.String access$102(com.google.analytics.tracking.android.GoogleAnalytics,java.lang.String) -> a
com.google.analytics.tracking.android.GoogleAnalytics$1 -> com.google.analytics.tracking.android.ar:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    69:70:void reportAppOptOut(boolean) -> a
com.google.analytics.tracking.android.GoogleAnalytics$2 -> com.google.analytics.tracking.android.as:
    com.google.analytics.tracking.android.GoogleAnalytics this$0 -> a
    77:79:void reportClientId(java.lang.String) -> a
com.google.analytics.tracking.android.GoogleTracker -> com.google.analytics.tracking.android.at:
    java.text.DecimalFormat DF -> a
    com.google.analytics.tracking.android.TrackerHandler handler -> b
    com.google.analytics.tracking.android.GoogleTracker$SimpleModel model -> c
    com.google.analytics.tracking.android.ExceptionParser exceptionParser -> d
    boolean trackerClosed -> e
    boolean trackingStarted -> f
    59:62:void assertTrackerOpen() -> j
    66:69:void send(java.lang.String,java.util.Map) -> a
    72:80:void internalSend(java.lang.String,java.util.Map) -> b
    84:87:void setStartSession(boolean) -> a
    91:94:void setAppScreen(java.lang.String) -> c
    98:104:void trackView() -> a
    108:115:void trackView(java.lang.String) -> d
    119:124:void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> a
    128:137:void trackTransaction(com.google.analytics.tracking.android.Transaction) -> a
    141:146:void trackException(java.lang.String,boolean) -> a
    150:169:void trackException(java.lang.String,java.lang.Throwable,boolean) -> a
    174:180:void trackTiming(java.lang.String,long,java.lang.String,java.lang.String) -> a
    184:189:void trackSocial(java.lang.String,java.lang.String,java.lang.String) -> a
    194:203:java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> b
    207:207:java.lang.String microsToCurrencyString(long) -> a
    212:223:java.util.Map constructTransaction(com.google.analytics.tracking.android.Transaction) -> b
    227:237:java.util.Map constructItem(com.google.analytics.tracking.android.Item,com.google.analytics.tracking.android.Transaction) -> a
    243:248:java.util.Map constructException(java.lang.String,boolean) -> b
    254:266:java.util.Map constructRawException(java.lang.String,java.lang.Throwable,boolean) -> b
    272:279:java.util.Map constructTiming(java.lang.String,long,java.lang.String,java.lang.String) -> b
    284:290:java.util.Map constructSocial(java.lang.String,java.lang.String,java.lang.String) -> b
    295:297:void close() -> b
    301:302:java.lang.String getTrackingId() -> c
    307:309:void setAnonymizeIp(boolean) -> b
    313:315:void setSampleRate(double) -> a
    319:320:boolean anonymizeIpEnabled() -> d
    325:326:double getSampleRate() -> e
    331:333:void setReferrer(java.lang.String) -> f
    337:339:void setCampaign(java.lang.String) -> g
    343:344:java.lang.String get(java.lang.String) -> e
    349:351:void set(java.lang.String,java.lang.String) -> a
    358:369:void setAppName(java.lang.String) -> a
    376:382:void setAppVersion(java.lang.String) -> b
    386:388:void setAppId(java.lang.String) -> h
    392:393:java.lang.String getAppId() -> g
    398:400:void setAppInstallerId(java.lang.String) -> i
    404:405:java.lang.String getAppInstallerId() -> h
    410:412:void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> a
    416:417:com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> i
    422:424:void setUseSecure(boolean) -> c
    428:429:boolean getUseSecure() -> f
    434:439:void setCustomDimension(int,java.lang.String) -> a
    443:453:void setCustomMetric(int,java.lang.Long) -> a
    458:468:void setCustomDimensionsAndMetrics(java.util.Map,java.util.Map) -> a
com.google.analytics.tracking.android.GoogleTracker$1 -> com.google.analytics.tracking.android.au:
com.google.analytics.tracking.android.GoogleTracker$SimpleModel -> com.google.analytics.tracking.android.av:
    java.util.Map temporaryMap -> a
    java.util.Map permanentMap -> b
    475:476:void setForNextHit(java.lang.String,java.lang.String) -> a
    479:480:void set(java.lang.String,java.lang.String) -> b
    483:484:void clearTemporaryValues() -> a
    487:491:java.lang.String get(java.lang.String) -> a
    495:500:void setAll(java.util.Map,java.lang.Boolean) -> a
    503:505:java.util.Map getKeysAndValues() -> b
com.google.analytics.tracking.android.Hit -> com.google.analytics.tracking.android.aw:
    java.lang.String hitString -> a
    long hitId -> b
    long hitTime -> c
    java.lang.String hitUrl -> d
    21:21:java.lang.String getHitParams() -> a
    25:26:void setHitString(java.lang.String) -> a
    29:29:long getHitId() -> b
    33:33:long getHitTime() -> c
    43:43:java.lang.String getHitUrl() -> d
    48:49:void setHitUrl(java.lang.String) -> b
com.google.analytics.tracking.android.HitBuilder -> com.google.analytics.tracking.android.ax:
    25:47:java.util.Map generateHitParams(com.google.analytics.tracking.android.MetaModel,java.util.Map) -> a
    59:78:java.lang.String postProcessHit(com.google.analytics.tracking.android.Hit,long) -> a
    83:85:java.lang.String encode(java.lang.String) -> a
com.google.analytics.tracking.android.HttpClientFactory -> com.google.analytics.tracking.android.ay:
    org.apache.http.client.HttpClient newInstance() -> a
com.google.analytics.tracking.android.Item -> com.google.analytics.tracking.android.az:
    java.lang.String productSKU -> a
    java.lang.String productName -> b
    java.lang.String productCategory -> c
    long itemPriceInMicros -> d
    long itemQuantity -> e
    27:27:java.lang.String getProductSKU() -> a
    31:31:java.lang.String getProductName() -> b
    35:35:java.lang.String getProductCategory() -> c
    39:39:long getItemPriceInMicros() -> d
    43:43:long getItemQuantity() -> e
com.google.analytics.tracking.android.Log -> com.google.analytics.tracking.android.ba:
    boolean debug -> a
    26:27:void setDebug(boolean) -> a
    35:35:boolean debugEnabled() -> a
    46:46:int d(java.lang.String) -> a
    57:60:int dDebug(java.lang.String) -> b
    71:71:int e(java.lang.String) -> c
    96:96:int i(java.lang.String) -> d
    107:110:int iDebug(java.lang.String) -> e
    121:121:int v(java.lang.String) -> f
    132:135:int vDebug(java.lang.String) -> g
    146:146:int w(java.lang.String) -> h
    157:160:int wDebug(java.lang.String) -> i
    164:164:java.lang.String formatMessage(java.lang.String) -> j
com.google.analytics.tracking.android.MetaModel -> com.google.analytics.tracking.android.bb:
    java.util.Map metaInfos -> a
    20:30:com.google.analytics.tracking.android.MetaModel$MetaInfo getMetaInfo(java.lang.String) -> a
    41:42:void addField(java.lang.String,java.lang.String,java.lang.String,com.google.analytics.tracking.android.MetaModel$Formatter) -> a
com.google.analytics.tracking.android.MetaModel$Formatter -> com.google.analytics.tracking.android.bc:
    java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModel$MetaInfo -> com.google.analytics.tracking.android.bd:
    java.lang.String urlParam -> a
    java.lang.String defaultValue -> b
    com.google.analytics.tracking.android.MetaModel$Formatter formatter -> c
    69:86:java.lang.String getUrlParam(java.lang.String) -> a
    91:91:java.lang.String getDefaultValue() -> a
    95:95:com.google.analytics.tracking.android.MetaModel$Formatter getFormatter() -> b
com.google.analytics.tracking.android.MetaModelInitializer -> com.google.analytics.tracking.android.be:
    com.google.analytics.tracking.android.MetaModel$Formatter BOOLEAN_FORMATTER -> a
    com.google.analytics.tracking.android.MetaModel$Formatter UP_TO_TWO_DIGIT_FLOAT_FORMATTER -> b
    34:124:void set(com.google.analytics.tracking.android.MetaModel) -> a
com.google.analytics.tracking.android.MetaModelInitializer$1 -> com.google.analytics.tracking.android.bf:
    17:17:java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.MetaModelInitializer$2 -> com.google.analytics.tracking.android.bg:
    java.text.DecimalFormat floatFormat -> a
    25:25:java.lang.String format(java.lang.String) -> a
com.google.analytics.tracking.android.NoopDispatcher -> com.google.analytics.tracking.android.bh:
    18:18:boolean okToDispatch() -> a
    23:46:int dispatchHits(java.util.List) -> a
com.google.analytics.tracking.android.ParameterLoader -> com.google.analytics.tracking.android.bi:
    java.lang.String getString(java.lang.String) -> a
    java.lang.Double getDoubleFromString(java.lang.String) -> b
    boolean getBoolean(java.lang.String) -> c
    boolean isBooleanKeyPresent(java.lang.String) -> d
    int getInt(java.lang.String,int) -> a
com.google.analytics.tracking.android.ParameterLoaderImpl -> com.google.analytics.tracking.android.bj:
    android.content.Context ctx -> a
    36:39:int getResourceIdForType(java.lang.String,java.lang.String) -> a
    44:48:java.lang.String getString(java.lang.String) -> a
    54:58:boolean getBoolean(java.lang.String) -> c
    64:72:int getInt(java.lang.String,int) -> a
    79:79:boolean isBooleanKeyPresent(java.lang.String) -> d
    84:92:java.lang.Double getDoubleFromString(java.lang.String) -> b
com.google.analytics.tracking.android.PersistentAnalyticsStore -> com.google.analytics.tracking.android.bk:
    long tokens -> a
    long lastTrackTime -> b
    boolean throttlingEnabled -> c
    java.lang.String CREATE_HITS_TABLE -> d
    com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper dbHelper -> e
    com.google.analytics.tracking.android.Dispatcher dispatcher -> f
    com.google.analytics.tracking.android.AnalyticsStoreStateListener listener -> g
    android.content.Context context -> h
    java.lang.String databaseName -> i
    long lastDeleteStaleHitsTime -> j
    125:125:com.google.analytics.tracking.android.HttpClientFactory createDefaultHttpClientFactory() -> h
    135:138:void setDispatch(boolean) -> a
    151:159:void clearHits() -> a
    177:185:void putHit(java.util.Map,long,java.lang.String,java.util.Collection) -> a
    193:200:void fillVersionParametersIfNecessary(java.util.Map,java.util.Collection) -> a
    207:217:void storeVersion(java.util.Map,java.lang.String,java.lang.String) -> a
    225:231:void removeOldHitIfFull() -> i
    236:264:void writeHitToDatabase(java.util.Map,long,java.lang.String) -> a
    267:271:java.lang.String generateHitString(java.util.Map) -> a
    283:373:java.util.List peekHits(int) -> a
    389:402:int deleteStaleHits() -> d
    411:436:void deleteHits(java.util.Collection) -> a
    439:457:int getNumStoredHits() -> e
    462:487:void dispatch() -> b
    492:497:void close() -> c
    520:536:boolean tokensAvailable() -> f
    544:545:void setThrottlingEnabled(boolean) -> b
    564:571:android.database.sqlite.SQLiteDatabase getWritableDatabase(java.lang.String) -> a
    36:36:java.lang.String access$000() -> g
com.google.analytics.tracking.android.PersistentAnalyticsStore$1 -> com.google.analytics.tracking.android.bl:
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    128:128:org.apache.http.client.HttpClient newInstance() -> a
com.google.analytics.tracking.android.PersistentAnalyticsStore$AnalyticsDatabaseHelper -> com.google.analytics.tracking.android.bm:
    boolean badDatabase -> b
    com.google.analytics.tracking.android.PersistentAnalyticsStore this$0 -> a
    604:619:boolean tablePresent(java.lang.String,android.database.sqlite.SQLiteDatabase) -> a
    633:636:android.database.sqlite.SQLiteDatabase getWritableDatabase() -> getWritableDatabase
    642:650:void onOpen(android.database.sqlite.SQLiteDatabase) -> onOpen
    654:655:void onCreate(android.database.sqlite.SQLiteDatabase) -> onCreate
    663:663:void onUpgrade(android.database.sqlite.SQLiteDatabase,int,int) -> onUpgrade
com.google.analytics.tracking.android.ServiceManager -> com.google.analytics.tracking.android.bn:
    void dispatch() -> c
    void setDispatchPeriod(int) -> a
com.google.analytics.tracking.android.ServiceProxy -> com.google.analytics.tracking.android.bo:
    void putHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> d
    void dispatch() -> c
    void createService() -> e
com.google.analytics.tracking.android.SimpleNetworkDispatcher -> com.google.analytics.tracking.android.bp:
    java.lang.String userAgent -> a
    com.google.analytics.tracking.android.HttpClientFactory httpClientFactory -> b
    android.content.Context ctx -> c
    67:78:boolean okToDispatch() -> a
    83:143:int dispatchHits(java.util.List) -> a
    156:174:org.apache.http.HttpEntityEnclosingRequest buildRequest(java.lang.String,java.lang.String) -> a
    184:208:void logDebugInformation(boolean,org.apache.http.HttpEntityEnclosingRequest) -> a
    217:217:java.lang.String createUserAgentString(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String) -> a
    226:235:java.net.URL getUrl(com.google.analytics.tracking.android.Hit) -> a
com.google.analytics.tracking.android.StandardExceptionParser -> com.google.analytics.tracking.android.bq:
    java.util.TreeSet includedPackages -> a
    57:105:void setIncludedPackages(android.content.Context,java.util.Collection) -> a
    116:120:java.lang.Throwable getCause(java.lang.Throwable) -> a
    131:143:java.lang.StackTraceElement getBestStackTraceElement(java.lang.Throwable) -> b
    155:171:java.lang.String getDescription(java.lang.Throwable,java.lang.StackTraceElement,java.lang.String) -> a
    176:176:java.lang.String getDescription(java.lang.String,java.lang.Throwable) -> a
com.google.analytics.tracking.android.TrackedActivity -> com.google.analytics.tracking.android.TrackedActivity:
    23:29:void onStart() -> onStart
    33:38:void onStop() -> onStop
com.google.analytics.tracking.android.TrackedExpandableListActivity -> com.google.analytics.tracking.android.TrackedExpandableListActivity:
    23:29:void onStart() -> onStart
    33:38:void onStop() -> onStop
com.google.analytics.tracking.android.TrackedListActivity -> com.google.analytics.tracking.android.TrackedListActivity:
    22:28:void onStart() -> onStart
    32:37:void onStop() -> onStop
com.google.analytics.tracking.android.TrackedPreferenceActivity -> com.google.analytics.tracking.android.TrackedPreferenceActivity:
    22:28:void onStart() -> onStart
    32:37:void onStop() -> onStop
com.google.analytics.tracking.android.TrackedTabActivity -> com.google.analytics.tracking.android.TrackedTabActivity:
    22:28:void onStart() -> onStart
    32:37:void onStop() -> onStop
com.google.analytics.tracking.android.Tracker -> com.google.analytics.tracking.android.br:
    void setStartSession(boolean) -> a
    void setAppName(java.lang.String) -> a
    void setAppVersion(java.lang.String) -> b
    void setAppScreen(java.lang.String) -> c
    void trackView() -> a
    void trackView(java.lang.String) -> d
    void trackEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> a
    void trackTransaction(com.google.analytics.tracking.android.Transaction) -> a
    void trackException(java.lang.String,boolean) -> a
    void trackException(java.lang.String,java.lang.Throwable,boolean) -> a
    void trackTiming(java.lang.String,long,java.lang.String,java.lang.String) -> a
    void trackSocial(java.lang.String,java.lang.String,java.lang.String) -> a
    void close() -> b
    void send(java.lang.String,java.util.Map) -> a
    java.lang.String get(java.lang.String) -> e
    void set(java.lang.String,java.lang.String) -> a
    java.lang.String getTrackingId() -> c
    void setAnonymizeIp(boolean) -> b
    boolean anonymizeIpEnabled() -> d
    void setSampleRate(double) -> a
    double getSampleRate() -> e
    void setUseSecure(boolean) -> c
    boolean getUseSecure() -> f
    void setReferrer(java.lang.String) -> f
    void setCampaign(java.lang.String) -> g
    void setAppId(java.lang.String) -> h
    java.lang.String getAppId() -> g
    void setAppInstallerId(java.lang.String) -> i
    java.lang.String getAppInstallerId() -> h
    void setExceptionParser(com.google.analytics.tracking.android.ExceptionParser) -> a
    com.google.analytics.tracking.android.ExceptionParser getExceptionParser() -> i
    void setCustomDimension(int,java.lang.String) -> a
    void setCustomMetric(int,java.lang.Long) -> a
    void setCustomDimensionsAndMetrics(java.util.Map,java.util.Map) -> a
    java.util.Map constructEvent(java.lang.String,java.lang.String,java.lang.String,java.lang.Long) -> b
    java.util.Map constructTransaction(com.google.analytics.tracking.android.Transaction) -> b
    java.util.Map constructException(java.lang.String,boolean) -> b
    java.util.Map constructRawException(java.lang.String,java.lang.Throwable,boolean) -> b
    java.util.Map constructTiming(java.lang.String,long,java.lang.String,java.lang.String) -> b
    java.util.Map constructSocial(java.lang.String,java.lang.String,java.lang.String) -> b
com.google.analytics.tracking.android.TrackerHandler -> com.google.analytics.tracking.android.bs:
    void closeTracker(com.google.analytics.tracking.android.Tracker) -> b
    void sendHit(java.util.Map) -> a
com.google.analytics.tracking.android.Transaction -> com.google.analytics.tracking.android.bt:
    java.lang.String transactionId -> a
    java.lang.String affiliation -> b
    long totalCostInMicros -> c
    long totalTaxInMicros -> d
    long shippingCostInMicros -> e
    java.lang.String currencyCode -> f
    java.util.Map items -> g
    37:37:java.lang.String getTransactionId() -> a
    41:41:java.lang.String getAffiliation() -> b
    45:45:long getTotalCostInMicros() -> c
    49:49:long getTotalTaxInMicros() -> d
    53:53:long getShippingCostInMicros() -> e
    57:57:java.lang.String getCurrencyCode() -> f
    67:68:void addItem(com.google.analytics.tracking.android.Item) -> a
    77:77:java.util.List getItems() -> g
com.google.analytics.tracking.android.Utils -> com.google.analytics.tracking.android.bu:
    char[] HEXBYTES -> a
    24:34:java.util.Map parseURLParameters(java.lang.String) -> a
    39:45:double safeParseDouble(java.lang.String) -> b
    51:57:long safeParseLong(java.lang.String) -> c
    63:63:boolean safeParseBoolean(java.lang.String) -> d
    76:126:java.lang.String filterCampaign(java.lang.String) -> e
    138:149:java.lang.String getLanguage(java.util.Locale) -> a
    153:159:java.lang.String hexEncode(byte[]) -> a
    163:169:int fromHexDigit(char) -> a
    173:178:byte[] hexDecode(java.lang.String) -> f
    182:182:java.lang.String getSlottedModelField(java.lang.String,int) -> a
com.google.android.gms.analytics.internal.Command -> com.google.android.gms.analytics.internal.Command:
    java.lang.String id -> a
    java.lang.String urlParam -> b
    java.lang.String value -> c
    android.os.Parcelable$Creator CREATOR -> CREATOR
    43:43:java.lang.String getId() -> a
    47:47:java.lang.String getUrlParam() -> b
    51:51:java.lang.String getValue() -> c
    76:76:int describeContents() -> describeContents
    81:84:void writeToParcel(android.os.Parcel,int) -> writeToParcel
    87:90:void readFromParcel(android.os.Parcel) -> a
com.google.android.gms.analytics.internal.Command$1 -> com.google.android.gms.analytics.internal.a:
    57:57:com.google.android.gms.analytics.internal.Command createFromParcel(android.os.Parcel) -> a
    62:62:com.google.android.gms.analytics.internal.Command[] newArray(int) -> a
    54:54:java.lang.Object[] newArray(int) -> newArray
    54:54:java.lang.Object createFromParcel(android.os.Parcel) -> createFromParcel
com.google.android.gms.analytics.internal.IAnalyticsService -> com.google.android.gms.analytics.internal.b:
    void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    void clearHits() -> a
com.google.android.gms.analytics.internal.IAnalyticsService$Stub -> com.google.android.gms.analytics.internal.c:
    26:33:com.google.android.gms.analytics.internal.IAnalyticsService asInterface(android.os.IBinder) -> a
    37:37:android.os.IBinder asBinder() -> asBinder
    41:72:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.gms.analytics.internal.IAnalyticsService$Stub$Proxy -> com.google.android.gms.analytics.internal.d:
    android.os.IBinder mRemote -> a
    83:83:android.os.IBinder asBinder() -> asBinder
    87:87:java.lang.String getInterfaceDescriptor() -> b
    102:117:void sendHit(java.util.Map,long,java.lang.String,java.util.List) -> a
    123:134:void clearHits() -> a
com.google.android.vending.licensing.AESObfuscator -> com.google.android.a.a.a:
    byte[] IV -> a
    javax.crypto.Cipher mEncryptor -> b
    javax.crypto.Cipher mDecryptor -> c
    73:82:java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    87:107:java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.google.android.vending.licensing.DeviceLimiter -> com.google.android.a.a.b:
    int isDeviceAllowed(java.lang.String) -> a
com.google.android.vending.licensing.ILicenseResultListener -> com.google.android.a.a.c:
    void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicenseResultListener$Stub -> com.google.android.a.a.d:
    29:36:com.google.android.vending.licensing.ILicenseResultListener asInterface(android.os.IBinder) -> a
    40:40:android.os.IBinder asBinder() -> asBinder
    44:64:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicenseResultListener$Stub$Proxy -> com.google.android.a.a.e:
    android.os.IBinder mRemote -> a
    75:75:android.os.IBinder asBinder() -> asBinder
    79:79:java.lang.String getInterfaceDescriptor() -> a
    83:94:void verifyLicense(int,java.lang.String,java.lang.String) -> a
com.google.android.vending.licensing.ILicensingService -> com.google.android.a.a.f:
    void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.ILicensingService$Stub -> com.google.android.a.a.g:
    29:36:com.google.android.vending.licensing.ILicensingService asInterface(android.os.IBinder) -> a
    40:40:android.os.IBinder asBinder() -> asBinder
    44:64:boolean onTransact(int,android.os.Parcel,android.os.Parcel,int) -> onTransact
com.google.android.vending.licensing.ILicensingService$Stub$Proxy -> com.google.android.a.a.h:
    android.os.IBinder mRemote -> a
    75:75:android.os.IBinder asBinder() -> asBinder
    79:79:java.lang.String getInterfaceDescriptor() -> a
    83:94:void checkLicense(long,java.lang.String,com.google.android.vending.licensing.ILicenseResultListener) -> a
com.google.android.vending.licensing.LicenseChecker -> com.google.android.a.a.i:
    java.security.SecureRandom RANDOM -> a
    com.google.android.vending.licensing.ILicensingService mService -> b
    java.security.PublicKey mPublicKey -> c
    android.content.Context mContext -> d
    com.google.android.vending.licensing.Policy mPolicy -> e
    android.os.Handler mHandler -> f
    java.lang.String mPackageName -> g
    java.lang.String mVersionCode -> h
    java.util.Set mChecksInProgress -> i
    java.util.Queue mPendingChecks -> j
    109:121:java.security.PublicKey generatePublicKey(java.lang.String) -> a
    139:173:void checkAccess(com.google.android.vending.licensing.LicenseCheckerCallback) -> a
    177:189:void runChecks() -> b
    192:196:void finishCheck(com.google.android.vending.licensing.LicenseValidator) -> a
    277:279:void onServiceConnected(android.content.ComponentName,android.os.IBinder) -> onServiceConnected
    285:287:void onServiceDisconnected(android.content.ComponentName) -> onServiceDisconnected
    294:301:void handleServiceConnectionError(com.google.android.vending.licensing.LicenseValidator) -> b
    305:315:void cleanupService() -> c
    326:328:void onDestroy() -> a
    332:332:int generateNonce() -> d
    344:348:java.lang.String getVersionCode(android.content.Context,java.lang.String) -> a
    293:293:void access$0(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> a
    191:191:void access$1(com.google.android.vending.licensing.LicenseChecker,com.google.android.vending.licensing.LicenseValidator) -> b
    77:77:android.os.Handler access$2(com.google.android.vending.licensing.LicenseChecker) -> a
    80:80:java.util.Set access$3(com.google.android.vending.licensing.LicenseChecker) -> b
    70:70:java.security.PublicKey access$4(com.google.android.vending.licensing.LicenseChecker) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener -> com.google.android.a.a.j:
    com.google.android.vending.licensing.LicenseValidator mValidator -> b
    java.lang.Runnable mOnTimeout -> c
    com.google.android.vending.licensing.LicenseChecker this$0 -> a
    222:263:void verifyLicense(int,java.lang.String,java.lang.String) -> a
    266:268:void startTimeout() -> a
    271:273:void clearTimeout() -> b
    199:199:com.google.android.vending.licensing.LicenseValidator access$0(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> a
    270:270:void access$1(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> b
    198:198:com.google.android.vending.licensing.LicenseChecker access$2(com.google.android.vending.licensing.LicenseChecker$ResultListener) -> c
com.google.android.vending.licensing.LicenseChecker$ResultListener$1 -> com.google.android.a.a.k:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    206:209:void run() -> run
com.google.android.vending.licensing.LicenseChecker$ResultListener$2 -> com.google.android.a.a.l:
    com.google.android.vending.licensing.LicenseChecker$ResultListener this$1 -> a
    int val$responseCode -> b
    java.lang.String val$signedData -> c
    java.lang.String val$signature -> d
    224:261:void run() -> run
com.google.android.vending.licensing.LicenseCheckerCallback -> com.google.android.a.a.m:
    void allow(int) -> b
    void dontAllow(int) -> a
    void applicationError(int) -> c
com.google.android.vending.licensing.LicenseValidator -> com.google.android.a.a.n:
    com.google.android.vending.licensing.Policy mPolicy -> a
    com.google.android.vending.licensing.LicenseCheckerCallback mCallback -> b
    int mNonce -> c
    java.lang.String mPackageName -> d
    java.lang.String mVersionCode -> e
    com.google.android.vending.licensing.DeviceLimiter mDeviceLimiter -> f
    68:68:com.google.android.vending.licensing.LicenseCheckerCallback getCallback() -> a
    72:72:int getNonce() -> b
    76:76:java.lang.String getPackageName() -> c
    90:196:void verify(java.security.PublicKey,int,java.lang.String,java.lang.String) -> a
    206:215:void handleResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    218:219:void handleApplicationError(int) -> a
    222:223:void handleInvalidResponse() -> d
com.google.android.vending.licensing.NullDeviceLimiter -> com.google.android.a.a.o:
    30:30:int isDeviceAllowed(java.lang.String) -> a
com.google.android.vending.licensing.Obfuscator -> com.google.android.a.a.p:
    java.lang.String obfuscate(java.lang.String,java.lang.String) -> a
    java.lang.String unobfuscate(java.lang.String,java.lang.String) -> b
com.google.android.vending.licensing.Policy -> com.google.android.a.a.q:
    void processServerResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    boolean allowAccess() -> a
com.google.android.vending.licensing.PreferenceObfuscator -> com.google.android.a.a.r:
    android.content.SharedPreferences mPreferences -> a
    com.google.android.vending.licensing.Obfuscator mObfuscator -> b
    android.content.SharedPreferences$Editor mEditor -> c
    46:51:void putString(java.lang.String,java.lang.String) -> a
    55:68:java.lang.String getString(java.lang.String,java.lang.String) -> b
    72:76:void commit() -> a
com.google.android.vending.licensing.ResponseData -> com.google.android.a.a.s:
    int responseCode -> a
    int nonce -> b
    java.lang.String packageName -> c
    java.lang.String versionCode -> d
    java.lang.String userId -> e
    long timestamp -> f
    java.lang.String extra -> g
    46:71:com.google.android.vending.licensing.ResponseData parse(java.lang.String) -> a
    76:76:java.lang.String toString() -> toString
com.google.android.vending.licensing.ServerManagedPolicy -> com.google.android.a.a.t:
    long mValidityTimestamp -> a
    long mRetryUntil -> b
    long mMaxRetries -> c
    long mRetryCount -> d
    long mLastResponseTime -> e
    int mLastResponse -> f
    com.google.android.vending.licensing.PreferenceObfuscator mPreferences -> g
    105:127:void processServerResponse(int,com.google.android.vending.licensing.ResponseData) -> a
    137:140:void setLastResponse(int) -> a
    149:151:void setRetryCount(long) -> a
    154:154:long getRetryCount() -> b
    167:177:void setValidityTimestamp(java.lang.String) -> a
    180:180:long getValidityTimestamp() -> c
    193:203:void setRetryUntil(java.lang.String) -> b
    206:206:long getRetryUntil() -> d
    219:229:void setMaxRetries(java.lang.String) -> c
    232:232:long getMaxRetries() -> e
    246:259:boolean allowAccess() -> a
    263:273:java.util.Map decodeExtras(java.lang.String) -> d
com.google.android.vending.licensing.ValidationException -> com.google.android.a.a.u:
com.google.android.vending.licensing.util.Base64 -> com.google.android.a.a.a.a:
    byte[] ALPHABET -> b
    byte[] WEBSAFE_ALPHABET -> c
    byte[] DECODABET -> d
    byte[] WEBSAFE_DECODABET -> e
    boolean $assertionsDisabled -> a
    210:234:byte[] encode3to4(byte[],int,int,byte[],int,byte[]) -> a
    247:247:java.lang.String encode(byte[]) -> a
    258:258:java.lang.String encodeWebSafe(byte[],boolean) -> a
    274:286:java.lang.String encode(byte[],int,int,byte[],boolean) -> a
    301:345:byte[] encode(byte[],int,int,byte[],int) -> a
    378:406:int decode4to3(byte[],int,byte[],int,byte[]) -> a
    419:420:byte[] decode(java.lang.String) -> a
    431:432:byte[] decodeWebSafe(java.lang.String) -> b
    445:445:byte[] decode(byte[]) -> b
    458:458:byte[] decodeWebSafe(byte[]) -> c
    474:474:byte[] decode(byte[],int,int) -> a
    489:489:byte[] decodeWebSafe(byte[],int,int) -> b
    504:568:byte[] decode(byte[],int,int,byte[]) -> a
com.google.android.vending.licensing.util.Base64DecoderException -> com.google.android.a.a.a.b:
com.google.inject.AbstractModule -> com.google.inject.AbstractModule:
    com.google.inject.Binder binder -> binder
    55:64:void configure(com.google.inject.Binder) -> configure
    void configure() -> configure
    75:75:com.google.inject.Binder binder() -> binder
    83:84:void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    90:90:com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    97:97:com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    104:104:com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    111:111:com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    118:119:void install(com.google.inject.Module) -> install
    125:126:void addError(java.lang.String,java.lang.Object[]) -> addError
    132:133:void addError(java.lang.Throwable) -> addError
    140:141:void addError(com.google.inject.spi.Message) -> addError
    148:149:void requestInjection(java.lang.Object) -> requestInjection
    155:156:void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    180:181:void requireBinding(com.google.inject.Key) -> requireBinding
    192:193:void requireBinding(java.lang.Class) -> requireBinding
    200:200:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    208:208:com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    217:218:void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    225:225:com.google.inject.Stage currentStage() -> currentStage
    233:233:com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    241:241:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    251:252:void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
com.google.inject.AbstractProcessor -> com.google.inject.AbstractProcessor:
    com.google.inject.internal.Errors errors -> errors
    com.google.inject.InjectorImpl injector -> injector
    53:56:void process(java.lang.Iterable) -> process
    59:74:void process(com.google.inject.InjectorImpl,java.util.List) -> process
    77:77:java.lang.Boolean visit(com.google.inject.spi.Message) -> visit
    88:88:java.lang.Boolean visit(com.google.inject.spi.ScopeBinding) -> visit
    92:92:java.lang.Boolean visit(com.google.inject.spi.InjectionRequest) -> visit
    96:96:java.lang.Boolean visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    100:100:java.lang.Boolean visit(com.google.inject.spi.TypeConverterBinding) -> visit
    104:104:java.lang.Boolean visit(com.google.inject.Binding) -> visit
    108:108:java.lang.Boolean visit(com.google.inject.spi.ProviderLookup) -> visit
    112:112:java.lang.Boolean visit(com.google.inject.spi.PrivateElements) -> visit
    116:116:java.lang.Boolean visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    120:120:java.lang.Boolean visit(com.google.inject.spi.TypeListenerBinding) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.TypeListenerBinding) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.Message) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.ProviderLookup) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.InjectionRequest) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.TypeConverterBinding) -> visit
    43:43:java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    43:43:java.lang.Object visit(com.google.inject.Binding) -> visit
com.google.inject.Binder -> com.google.inject.Binder:
    void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    void requestInjection(com.google.inject.TypeLiteral,java.lang.Object) -> requestInjection
    void requestInjection(java.lang.Object) -> requestInjection
    void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    void install(com.google.inject.Module) -> install
    com.google.inject.Stage currentStage() -> currentStage
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
    com.google.inject.Binder withSource(java.lang.Object) -> withSource
    com.google.inject.Binder skipSources(java.lang.Class[]) -> skipSources
    com.google.inject.PrivateBinder newPrivateBinder() -> newPrivateBinder
com.google.inject.Binding -> com.google.inject.Binding:
    com.google.inject.Key getKey() -> getKey
    com.google.inject.Provider getProvider() -> getProvider
    java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    java.lang.Object acceptScopingVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptScopingVisitor
com.google.inject.BindingAnnotation -> com.google.inject.BindingAnnotation:
com.google.inject.BindingProcessor -> com.google.inject.BindingProcessor:
    java.util.List creationListeners -> creationListeners
    com.google.inject.Initializer initializer -> initializer
    java.util.List uninitializedBindings -> uninitializedBindings
    java.util.Set FORBIDDEN_TYPES -> FORBIDDEN_TYPES
    67:197:java.lang.Boolean visit(com.google.inject.Binding) -> visit
    201:204:java.lang.Boolean visit(com.google.inject.spi.PrivateElements) -> visit
    208:212:void bindExposed(com.google.inject.spi.PrivateElements,com.google.inject.Key) -> bindExposed
    215:216:void validateKey(java.lang.Object,com.google.inject.Key) -> validateKey
    219:219:com.google.inject.internal.UntargettedBindingImpl invalidBinding(com.google.inject.InjectorImpl,com.google.inject.Key,java.lang.Object) -> invalidBinding
    223:226:void initializeBindings() -> initializeBindings
    229:232:void runCreationListeners() -> runCreationListeners
    235:252:void putBinding(com.google.inject.internal.BindingImpl) -> putBinding
    261:266:boolean isOkayDuplicate(com.google.inject.Binding,com.google.inject.internal.BindingImpl) -> isOkayDuplicate
    55:55:java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    55:55:java.lang.Object visit(com.google.inject.Binding) -> visit
    55:55:com.google.inject.Initializer access$000(com.google.inject.BindingProcessor) -> access$000
    55:55:void access$100(com.google.inject.BindingProcessor,com.google.inject.internal.BindingImpl) -> access$100
    55:55:java.util.List access$200(com.google.inject.BindingProcessor) -> access$200
    55:55:java.util.List access$300(com.google.inject.BindingProcessor) -> access$300
com.google.inject.BindingProcessor$1 -> com.google.inject.BindingProcessor$1:
    java.lang.Object val$source -> val$source
    com.google.inject.Key val$key -> val$key
    com.google.inject.internal.Scoping val$scoping -> val$scoping
    com.google.inject.BindingProcessor this$0 -> this$0
    95:103:java.lang.Void visit(com.google.inject.spi.InstanceBinding) -> visit
    107:115:java.lang.Void visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    119:127:java.lang.Void visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    131:141:java.lang.Void visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    149:177:java.lang.Void visit(com.google.inject.spi.UntargettedBinding) -> visit
    181:181:java.lang.Void visit(com.google.inject.spi.ExposedBinding) -> visit
    185:185:java.lang.Void visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    189:189:java.lang.Void visit(com.google.inject.spi.ConstructorBinding) -> visit
    193:193:java.lang.Void visit(com.google.inject.spi.ProviderBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.ProviderBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.ConstructorBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.UntargettedBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.ExposedBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    92:92:java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
com.google.inject.BindingProcessor$1$1 -> com.google.inject.BindingProcessor$1$1:
    com.google.inject.internal.BindingImpl val$binding -> val$binding
    com.google.inject.BindingProcessor$1 this$1 -> this$1
    169:174:void run() -> run
com.google.inject.BindingProcessor$CreationListener -> com.google.inject.BindingProcessor$CreationListener:
    void notify(com.google.inject.internal.Errors) -> notify
com.google.inject.BoundProviderFactory -> com.google.inject.BoundProviderFactory:
    com.google.inject.InjectorImpl injector -> injector
    com.google.inject.Key providerKey -> providerKey
    java.lang.Object source -> source
    com.google.inject.internal.InternalFactory providerFactory -> providerFactory
    47:51:void notify(com.google.inject.internal.Errors) -> notify
    55:60:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    65:65:java.lang.String toString() -> toString
com.google.inject.ConfigurationException -> com.google.inject.ConfigurationException:
    com.google.inject.internal.ImmutableSet messages -> messages
    java.lang.Object partialValue -> partialValue
    long serialVersionUID -> serialVersionUID
    45:49:com.google.inject.ConfigurationException withPartialValue(java.lang.Object) -> withPartialValue
    54:54:java.util.Collection getErrorMessages() -> getErrorMessages
    66:66:java.lang.Object getPartialValue() -> getPartialValue
    70:70:java.lang.String getMessage() -> getMessage
com.google.inject.ConstantFactory -> com.google.inject.ConstantFactory:
    com.google.inject.Initializable initializable -> initializable
    39:39:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    43:43:java.lang.String toString() -> toString
com.google.inject.ConstructionProxy -> com.google.inject.ConstructionProxy:
    java.lang.Object newInstance(java.lang.Object[]) -> newInstance
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    java.lang.reflect.Constructor getConstructor() -> getConstructor
com.google.inject.ConstructionProxyFactory -> com.google.inject.ConstructionProxyFactory:
    com.google.inject.ConstructionProxy create() -> create
com.google.inject.ConstructorBindingImpl -> com.google.inject.ConstructorBindingImpl:
    com.google.inject.ConstructorBindingImpl$Factory factory -> factory
    49:52:com.google.inject.ConstructorBindingImpl create(com.google.inject.InjectorImpl,com.google.inject.Key,java.lang.Object,com.google.inject.internal.Scoping) -> create
    57:58:void initialize(com.google.inject.InjectorImpl,com.google.inject.internal.Errors) -> initialize
    61:62:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    66:67:com.google.inject.spi.InjectionPoint getConstructor() -> getConstructor
    71:72:java.util.Set getInjectableMembers() -> getInjectableMembers
    83:83:java.util.Set getDependencies() -> getDependencies
    90:90:void applyTo(com.google.inject.Binder) -> applyTo
    94:94:java.lang.String toString() -> toString
com.google.inject.ConstructorBindingImpl$1 -> com.google.inject.ConstructorBindingImpl$1:
com.google.inject.ConstructorBindingImpl$Factory -> com.google.inject.ConstructorBindingImpl$Factory:
    com.google.inject.ConstructorInjector constructorInjector -> constructorInjector
    107:111:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    101:101:com.google.inject.ConstructorInjector access$102(com.google.inject.ConstructorBindingImpl$Factory,com.google.inject.ConstructorInjector) -> access$102
    101:101:com.google.inject.ConstructorInjector access$100(com.google.inject.ConstructorBindingImpl$Factory) -> access$100
com.google.inject.ConstructorInjector -> com.google.inject.ConstructorInjector:
    com.google.inject.internal.ImmutableSet injectableMembers -> injectableMembers
    com.google.inject.SingleParameterInjector[] parameterInjectors -> parameterInjectors
    com.google.inject.ConstructionProxy constructionProxy -> constructionProxy
    com.google.inject.MembersInjectorImpl membersInjector -> membersInjector
    52:52:com.google.inject.internal.ImmutableSet getInjectableMembers() -> getInjectableMembers
    56:56:com.google.inject.ConstructionProxy getConstructionProxy() -> getConstructionProxy
    65:105:java.lang.Object construct(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Class) -> construct
com.google.inject.ConstructorInjectorStore -> com.google.inject.ConstructorInjectorStore:
    com.google.inject.InjectorImpl injector -> injector
    com.google.inject.internal.FailableCache cache -> cache
    52:52:com.google.inject.ConstructorInjector get(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> get
    57:84:com.google.inject.ConstructorInjector createConstructor(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> createConstructor
    31:31:com.google.inject.ConstructorInjector access$000(com.google.inject.ConstructorInjectorStore,com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> access$000
com.google.inject.ConstructorInjectorStore$1 -> com.google.inject.ConstructorInjectorStore$1:
    com.google.inject.ConstructorInjectorStore this$0 -> this$0
    39:39:com.google.inject.ConstructorInjector create(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> create
    35:35:java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors) -> create
com.google.inject.ContextualCallable -> com.google.inject.ContextualCallable:
    java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.CreationException -> com.google.inject.CreationException:
    com.google.inject.internal.ImmutableSet messages -> messages
    long serialVersionUID -> serialVersionUID
    44:44:java.util.Collection getErrorMessages() -> getErrorMessages
    48:48:java.lang.String getMessage() -> getMessage
com.google.inject.DefaultConstructionProxyFactory -> com.google.inject.DefaultConstructionProxyFactory:
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    47:78:com.google.inject.ConstructionProxy create() -> create
    34:34:com.google.inject.spi.InjectionPoint access$000(com.google.inject.DefaultConstructionProxyFactory) -> access$000
com.google.inject.DefaultConstructionProxyFactory$1 -> com.google.inject.DefaultConstructionProxyFactory$1:
    java.lang.reflect.Constructor val$constructor -> val$constructor
    com.google.inject.DefaultConstructionProxyFactory this$0 -> this$0
    81:85:java.lang.Object newInstance(java.lang.Object[]) -> newInstance
    89:89:com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    92:92:java.lang.reflect.Constructor getConstructor() -> getConstructor
com.google.inject.DeferredLookups -> com.google.inject.DeferredLookups:
    com.google.inject.InjectorImpl injector -> injector
    java.util.List lookups -> lookups
    44:46:void initialize(com.google.inject.internal.Errors) -> initialize
    49:51:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    55:57:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
com.google.inject.EncounterImpl -> com.google.inject.EncounterImpl:
    com.google.inject.internal.Errors errors -> errors
    com.google.inject.Lookups lookups -> lookups
    java.util.List membersInjectors -> membersInjectors
    java.util.List injectionListeners -> injectionListeners
    boolean valid -> valid
    51:52:void invalidate() -> invalidate
    75:75:com.google.inject.internal.ImmutableList getMembersInjectors() -> getMembersInjectors
    81:81:com.google.inject.internal.ImmutableList getInjectionListeners() -> getInjectionListeners
    87:94:void register(com.google.inject.MembersInjector) -> register
    97:104:void register(com.google.inject.spi.InjectionListener) -> register
    107:109:void addError(java.lang.String,java.lang.Object[]) -> addError
    112:114:void addError(java.lang.Throwable) -> addError
    117:119:void addError(com.google.inject.spi.Message) -> addError
    122:123:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    127:127:com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    131:132:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    136:136:com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
com.google.inject.Exposed -> com.google.inject.Exposed:
com.google.inject.ExposedKeyFactory -> com.google.inject.ExposedKeyFactory:
    com.google.inject.Key key -> key
    com.google.inject.spi.PrivateElements privateElements -> privateElements
    com.google.inject.internal.BindingImpl delegate -> delegate
    42:54:void notify(com.google.inject.internal.Errors) -> notify
    58:58:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
com.google.inject.FactoryProxy -> com.google.inject.FactoryProxy:
    com.google.inject.InjectorImpl injector -> injector
    com.google.inject.Key key -> key
    com.google.inject.Key targetKey -> targetKey
    java.lang.Object source -> source
    com.google.inject.internal.InternalFactory targetFactory -> targetFactory
    48:52:void notify(com.google.inject.internal.Errors) -> notify
    56:56:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    60:60:java.lang.String toString() -> toString
com.google.inject.Guice -> com.google.inject.Guice:
    59:59:com.google.inject.Injector createInjector(com.google.inject.Module[]) -> createInjector
    69:69:com.google.inject.Injector createInjector(java.lang.Iterable) -> createInjector
    80:80:com.google.inject.Injector createInjector(com.google.inject.Stage,com.google.inject.Module[]) -> createInjector
    92:92:com.google.inject.Injector createInjector(com.google.inject.Stage,java.lang.Iterable) -> createInjector
com.google.inject.ImplementedBy -> com.google.inject.ImplementedBy:
    java.lang.Class value() -> value
com.google.inject.InheritingState -> com.google.inject.InheritingState:
    com.google.inject.State parent -> parent
    java.util.Map explicitBindingsMutable -> explicitBindingsMutable
    java.util.Map explicitBindings -> explicitBindings
    java.util.Map scopes -> scopes
    java.util.List converters -> converters
    java.util.List listenerBindings -> listenerBindings
    com.google.inject.WeakKeySet blacklistedKeys -> blacklistedKeys
    java.lang.Object lock -> lock
    59:59:com.google.inject.State parent() -> parent
    64:65:com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key) -> getExplicitBinding
    69:69:java.util.Map getExplicitBindingsThisLevel() -> getExplicitBindingsThisLevel
    73:74:void putBinding(com.google.inject.Key,com.google.inject.internal.BindingImpl) -> putBinding
    77:78:com.google.inject.Scope getScope(java.lang.Class) -> getScope
    82:83:void putAnnotation(java.lang.Class,com.google.inject.Scope) -> putAnnotation
    86:86:java.lang.Iterable getConvertersThisLevel() -> getConvertersThisLevel
    90:91:void addConverter(com.google.inject.internal.MatcherAndConverter) -> addConverter
    95:106:com.google.inject.internal.MatcherAndConverter getConverter(java.lang.String,com.google.inject.TypeLiteral,com.google.inject.internal.Errors,java.lang.Object) -> getConverter
    123:124:void addTypeListener(com.google.inject.spi.TypeListenerBinding) -> addTypeListener
    127:132:java.util.List getTypeListenerBindings() -> getTypeListenerBindings
    136:138:void blacklist(com.google.inject.Key) -> blacklist
    141:141:boolean isBlacklisted(com.google.inject.Key) -> isBlacklisted
    145:145:java.lang.Object lock() -> lock
com.google.inject.Initializable -> com.google.inject.Initializable:
    java.lang.Object get(com.google.inject.internal.Errors) -> get
com.google.inject.Initializables -> com.google.inject.Initializables:
    31:31:com.google.inject.Initializable of(java.lang.Object) -> of
com.google.inject.Initializables$1 -> com.google.inject.Initializables$1:
    java.lang.Object val$instance -> val$instance
    33:33:java.lang.Object get(com.google.inject.internal.Errors) -> get
    37:37:java.lang.String toString() -> toString
com.google.inject.Initializer -> com.google.inject.Initializer:
    java.lang.Thread creatingThread -> creatingThread
    java.util.concurrent.CountDownLatch ready -> ready
    java.util.Map pendingInjection -> pendingInjection
    55:65:com.google.inject.Initializable requestInjection(com.google.inject.InjectorImpl,java.lang.Object,java.lang.Object,java.util.Set) -> requestInjection
    73:80:void validateOustandingInjections(com.google.inject.internal.Errors) -> validateOustandingInjections
    90:103:void injectAll(com.google.inject.internal.Errors) -> injectAll
    36:36:java.util.concurrent.CountDownLatch access$000(com.google.inject.Initializer) -> access$000
    36:36:java.lang.Thread access$100(com.google.inject.Initializer) -> access$100
    36:36:java.util.Map access$200(com.google.inject.Initializer) -> access$200
com.google.inject.Initializer$InjectableReference -> com.google.inject.Initializer$InjectableReference:
    com.google.inject.InjectorImpl injector -> injector
    java.lang.Object instance -> instance
    java.lang.Object source -> source
    com.google.inject.MembersInjectorImpl membersInjector -> membersInjector
    com.google.inject.Initializer this$0 -> this$0
    119:121:void validate(com.google.inject.internal.Errors) -> validate
    128:148:java.lang.Object get(com.google.inject.internal.Errors) -> get
    152:152:java.lang.String toString() -> toString
com.google.inject.Inject -> com.google.inject.Inject:
    boolean optional() -> optional
com.google.inject.InjectionRequestProcessor -> com.google.inject.InjectionRequestProcessor:
    java.util.List staticInjections -> staticInjections
    com.google.inject.Initializer initializer -> initializer
    48:49:java.lang.Boolean visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    55:63:java.lang.Boolean visit(com.google.inject.spi.InjectionRequest) -> visit
    67:70:void validate() -> validate
    73:76:void injectMembers() -> injectMembers
    37:37:java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    37:37:java.lang.Object visit(com.google.inject.spi.InjectionRequest) -> visit
com.google.inject.InjectionRequestProcessor$StaticInjection -> com.google.inject.InjectionRequestProcessor$StaticInjection:
    com.google.inject.InjectorImpl injector -> injector
    java.lang.Object source -> source
    com.google.inject.spi.StaticInjectionRequest request -> request
    com.google.inject.internal.ImmutableList memberInjectors -> memberInjectors
    com.google.inject.InjectionRequestProcessor this$0 -> this$0
    92:102:void validate() -> validate
    106:117:void injectMembers() -> injectMembers
com.google.inject.InjectionRequestProcessor$StaticInjection$1 -> com.google.inject.InjectionRequestProcessor$StaticInjection$1:
    com.google.inject.InjectionRequestProcessor$StaticInjection this$1 -> this$1
    108:111:java.lang.Void call(com.google.inject.internal.InternalContext) -> call
    106:106:java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.Injector -> com.google.inject.Injector:
    void injectMembers(java.lang.Object) -> injectMembers
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    java.util.Map getBindings() -> getBindings
    com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
    com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    java.lang.Object getInstance(java.lang.Class) -> getInstance
    com.google.inject.Injector getParent() -> getParent
    com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
com.google.inject.InjectorBuilder -> com.google.inject.InjectorBuilder:
    com.google.inject.internal.Stopwatch stopwatch -> stopwatch
    com.google.inject.internal.Errors errors -> errors
    com.google.inject.Stage stage -> stage
    com.google.inject.Initializer initializer -> initializer
    com.google.inject.BindingProcessor bindingProcesor -> bindingProcesor
    com.google.inject.InjectionRequestProcessor injectionRequestProcessor -> injectionRequestProcessor
    com.google.inject.InjectorShell$Builder shellBuilder -> shellBuilder
    java.util.List shells -> shells
    75:77:com.google.inject.InjectorBuilder stage(com.google.inject.Stage) -> stage
    85:86:com.google.inject.InjectorBuilder parentInjector(com.google.inject.InjectorImpl) -> parentInjector
    90:91:com.google.inject.InjectorBuilder addModules(java.lang.Iterable) -> addModules
    95:115:com.google.inject.Injector build() -> build
    120:153:void initializeStatically() -> initializeStatically
    159:159:com.google.inject.Injector primaryInjector() -> primaryInjector
    168:180:void injectDynamically() -> injectDynamically
    188:215:void loadEagerSingletons(com.google.inject.InjectorImpl,com.google.inject.Stage,com.google.inject.internal.Errors) -> loadEagerSingletons
com.google.inject.InjectorBuilder$1 -> com.google.inject.InjectorBuilder$1:
    com.google.inject.spi.Dependency dependency -> dependency
    com.google.inject.internal.BindingImpl val$binding -> val$binding
    com.google.inject.internal.Errors val$errors -> val$errors
    com.google.inject.InjectorBuilder this$0 -> this$0
    197:207:java.lang.Void call(com.google.inject.internal.InternalContext) -> call
    194:194:java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.InjectorBuilder$ToolStageInjector -> com.google.inject.InjectorBuilder$ToolStageInjector:
    com.google.inject.Injector delegateInjector -> delegateInjector
    225:225:void injectMembers(java.lang.Object) -> injectMembers
    229:229:java.util.Map getBindings() -> getBindings
    232:232:com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
    235:235:com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    238:238:java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    241:241:com.google.inject.Injector getParent() -> getParent
    244:244:com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    247:247:com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
    250:250:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    254:254:com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    258:258:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    262:262:com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    266:266:java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    270:270:java.lang.Object getInstance(java.lang.Class) -> getInstance
com.google.inject.InjectorImpl -> com.google.inject.InjectorImpl:
    com.google.inject.State state -> state
    com.google.inject.InjectorImpl parent -> parent
    com.google.inject.InjectorImpl$BindingsMultimap bindingsMultimap -> bindingsMultimap
    com.google.inject.Initializer initializer -> initializer
    java.util.Map jitBindings -> jitBindings
    com.google.inject.Lookups lookups -> lookups
    com.google.inject.ConstructorInjectorStore constructors -> constructors
    com.google.inject.MembersInjectorStore membersInjectorStore -> membersInjectorStore
    java.lang.ThreadLocal localContext -> localContext
    92:95:void index() -> index
    98:99:void index(com.google.inject.Binding) -> index
    102:102:java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    107:113:com.google.inject.internal.BindingImpl getBinding(com.google.inject.Key) -> getBinding
    126:132:com.google.inject.internal.BindingImpl getBindingOrThrow(com.google.inject.Key,com.google.inject.internal.Errors) -> getBindingOrThrow
    136:136:com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    140:140:com.google.inject.Injector getParent() -> getParent
    144:144:com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    151:151:com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
    161:173:com.google.inject.internal.BindingImpl getJustInTimeBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> getJustInTimeBinding
    178:178:boolean isProvider(com.google.inject.Key) -> isProvider
    183:183:boolean isMembersInjector(com.google.inject.Key) -> isMembersInjector
    189:203:com.google.inject.internal.BindingImpl createMembersInjectorBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> createMembersInjectorBinding
    213:226:com.google.inject.internal.BindingImpl createProviderBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> createProviderBinding
    277:314:com.google.inject.internal.BindingImpl convertConstantStringBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> convertConstantStringBinding
    372:385:void initializeBinding(com.google.inject.internal.BindingImpl,com.google.inject.internal.Errors) -> initializeBinding
    393:442:com.google.inject.internal.BindingImpl createUnitializedBinding(com.google.inject.Key,com.google.inject.internal.Scoping,java.lang.Object,com.google.inject.internal.Errors) -> createUnitializedBinding
    451:471:com.google.inject.internal.BindingImpl createTypeLiteralBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> createTypeLiteralBinding
    478:513:com.google.inject.internal.BindingImpl createProvidedByBinding(com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.ProvidedBy,com.google.inject.internal.Errors) -> createProvidedByBinding
    526:554:com.google.inject.internal.BindingImpl createImplementedByBinding(com.google.inject.Key,com.google.inject.internal.Scoping,com.google.inject.ImplementedBy,com.google.inject.internal.Errors) -> createImplementedByBinding
    570:584:com.google.inject.internal.BindingImpl createJustInTimeBindingRecursive(com.google.inject.Key,com.google.inject.internal.Errors) -> createJustInTimeBindingRecursive
    601:646:com.google.inject.internal.BindingImpl createJustInTimeBinding(com.google.inject.Key,com.google.inject.internal.Errors) -> createJustInTimeBinding
    651:651:com.google.inject.internal.InternalFactory getInternalFactory(com.google.inject.Key,com.google.inject.internal.Errors) -> getInternalFactory
    656:656:java.util.Map getBindings() -> getBindings
    686:702:com.google.inject.SingleParameterInjector[] getParametersInjectors(java.util.List,com.google.inject.internal.Errors) -> getParametersInjectors
    707:708:com.google.inject.SingleParameterInjector createParameterInjector(com.google.inject.spi.Dependency,com.google.inject.internal.Errors) -> createParameterInjector
    725:727:void injectMembers(java.lang.Object) -> injectMembers
    730:734:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    739:739:com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    743:743:com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    747:750:com.google.inject.Provider getProviderOrThrow(com.google.inject.Key,com.google.inject.internal.Errors) -> getProviderOrThrow
    778:784:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    789:789:java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    793:793:java.lang.Object getInstance(java.lang.Class) -> getInstance
    800:811:java.lang.Object callInContext(com.google.inject.ContextualCallable) -> callInContext
    816:816:java.lang.String toString() -> toString
    63:63:com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
com.google.inject.InjectorImpl$1 -> com.google.inject.InjectorImpl$1:
    com.google.inject.InjectorImpl this$0 -> this$0
    84:84:java.lang.Object[] initialValue() -> initialValue
    82:82:java.lang.Object initialValue() -> initialValue
com.google.inject.InjectorImpl$2 -> com.google.inject.InjectorImpl$2:
    com.google.inject.Key val$providerKey -> val$providerKey
    com.google.inject.internal.BindingImpl val$providerBinding -> val$providerBinding
    java.lang.Class val$rawType -> val$rawType
    java.lang.Class val$providerType -> val$providerType
    com.google.inject.InjectorImpl this$0 -> this$0
    496:508:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
com.google.inject.InjectorImpl$3 -> com.google.inject.InjectorImpl$3:
    com.google.inject.internal.BindingImpl val$targetBinding -> val$targetBinding
    com.google.inject.Key val$targetKey -> val$targetKey
    com.google.inject.InjectorImpl this$0 -> this$0
    549:549:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
com.google.inject.InjectorImpl$4 -> com.google.inject.InjectorImpl$4:
    com.google.inject.spi.Dependency val$dependency -> val$dependency
    com.google.inject.internal.InternalFactory val$factory -> val$factory
    com.google.inject.InjectorImpl this$0 -> this$0
    752:767:java.lang.Object get() -> get
    772:772:java.lang.String toString() -> toString
com.google.inject.InjectorImpl$4$1 -> com.google.inject.InjectorImpl$4$1:
    com.google.inject.internal.Errors val$errors -> val$errors
    com.google.inject.InjectorImpl$4 this$1 -> this$1
    756:760:java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.InjectorImpl$BindingsMultimap -> com.google.inject.InjectorImpl$BindingsMultimap:
    java.util.Map multimap -> multimap
    663:669:void put(com.google.inject.TypeLiteral,com.google.inject.Binding) -> put
    674:675:java.util.List getAll(com.google.inject.TypeLiteral) -> getAll
com.google.inject.InjectorImpl$ConvertedConstantBindingImpl -> com.google.inject.InjectorImpl$ConvertedConstantBindingImpl:
    java.lang.Object value -> value
    com.google.inject.Provider provider -> provider
    com.google.inject.Binding originalBinding -> originalBinding
    335:335:com.google.inject.Provider getProvider() -> getProvider
    339:339:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    343:343:java.lang.Object getValue() -> getValue
    347:347:com.google.inject.Key getSourceKey() -> getSourceKey
    351:351:java.util.Set getDependencies() -> getDependencies
    355:355:void applyTo(com.google.inject.Binder) -> applyTo
    359:359:java.lang.String toString() -> toString
com.google.inject.InjectorImpl$MethodInvoker -> com.google.inject.InjectorImpl$MethodInvoker:
    java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.google.inject.InjectorImpl$ProviderBindingImpl -> com.google.inject.InjectorImpl$ProviderBindingImpl:
    com.google.inject.internal.BindingImpl providedBinding -> providedBinding
    240:241:com.google.inject.internal.InternalFactory createInternalFactory(com.google.inject.Binding) -> createInternalFactory
    249:249:com.google.inject.Key getProvidedKey() -> getProvidedKey
    253:253:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    257:257:void applyTo(com.google.inject.Binder) -> applyTo
    261:261:java.lang.String toString() -> toString
com.google.inject.InjectorImpl$ProviderBindingImpl$1 -> com.google.inject.InjectorImpl$ProviderBindingImpl$1:
    com.google.inject.Provider val$provider -> val$provider
    243:243:com.google.inject.Provider get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    241:241:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
com.google.inject.InjectorShell -> com.google.inject.InjectorShell:
    java.util.List elements -> elements
    com.google.inject.InjectorImpl injector -> injector
    com.google.inject.spi.PrivateElements privateElements -> privateElements
    61:61:com.google.inject.spi.PrivateElements getPrivateElements() -> getPrivateElements
    65:65:com.google.inject.InjectorImpl getInjector() -> getInjector
    69:69:java.util.List getElements() -> getElements
    189:195:void bindInjector(com.google.inject.InjectorImpl) -> bindInjector
    223:229:void bindLogger(com.google.inject.InjectorImpl) -> bindLogger
    48:48:void access$200(com.google.inject.InjectorImpl) -> access$200
    48:48:void access$300(com.google.inject.InjectorImpl) -> access$300
com.google.inject.InjectorShell$1 -> com.google.inject.InjectorShell$1:
com.google.inject.InjectorShell$Builder -> com.google.inject.InjectorShell$Builder:
    java.util.List elements -> elements
    java.util.List modules -> modules
    com.google.inject.State state -> state
    com.google.inject.InjectorImpl parent -> parent
    com.google.inject.Stage stage -> stage
    com.google.inject.internal.PrivateElementsImpl privateElements -> privateElements
    86:88:com.google.inject.InjectorShell$Builder parent(com.google.inject.InjectorImpl) -> parent
    92:93:com.google.inject.InjectorShell$Builder stage(com.google.inject.Stage) -> stage
    97:99:com.google.inject.InjectorShell$Builder privateElements(com.google.inject.spi.PrivateElements) -> privateElements
    103:106:void addModules(java.lang.Iterable) -> addModules
    110:110:java.lang.Object lock() -> lock
    120:173:java.util.List build(com.google.inject.Initializer,com.google.inject.BindingProcessor,com.google.inject.internal.Stopwatch,com.google.inject.internal.Errors) -> build
    177:180:com.google.inject.State getState() -> getState
    72:72:com.google.inject.internal.PrivateElementsImpl access$000(com.google.inject.InjectorShell$Builder) -> access$000
com.google.inject.InjectorShell$InjectorFactory -> com.google.inject.InjectorShell$InjectorFactory:
    com.google.inject.Injector injector -> injector
    206:206:com.google.inject.Injector get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    210:210:com.google.inject.Injector get() -> get
    214:214:java.lang.String toString() -> toString
    197:197:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    197:197:java.lang.Object get() -> get
com.google.inject.InjectorShell$LoggerFactory -> com.google.inject.InjectorShell$LoggerFactory:
    233:234:java.util.logging.Logger get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    240:240:java.util.logging.Logger get() -> get
    244:244:java.lang.String toString() -> toString
    231:231:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    231:231:java.lang.Object get() -> get
com.google.inject.InjectorShell$RootModule -> com.google.inject.InjectorShell$RootModule:
    com.google.inject.Stage stage -> stage
    256:259:void configure(com.google.inject.Binder) -> configure
com.google.inject.InternalFactoryToProviderAdapter -> com.google.inject.InternalFactoryToProviderAdapter:
    com.google.inject.Initializable initializable -> initializable
    java.lang.Object source -> source
    48:50:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
    55:55:java.lang.String toString() -> toString
com.google.inject.Key -> com.google.inject.Key:
    com.google.inject.Key$AnnotationStrategy annotationStrategy -> annotationStrategy
    com.google.inject.TypeLiteral typeLiteral -> typeLiteral
    int hashCode -> hashCode
    132:132:int computeHashCode() -> computeHashCode
    139:139:com.google.inject.TypeLiteral getTypeLiteral() -> getTypeLiteral
    146:146:java.lang.Class getAnnotationType() -> getAnnotationType
    153:153:java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    157:157:boolean hasAnnotationType() -> hasAnnotationType
    161:167:java.lang.String getAnnotationName() -> getAnnotationName
    171:171:java.lang.Class getRawType() -> getRawType
    178:178:com.google.inject.Key providerKey() -> providerKey
    182:189:boolean equals(java.lang.Object) -> equals
    194:194:int hashCode() -> hashCode
    198:198:java.lang.String toString() -> toString
    209:209:com.google.inject.Key get(java.lang.Class,com.google.inject.Key$AnnotationStrategy) -> get
    216:216:com.google.inject.Key get(java.lang.Class) -> get
    224:224:com.google.inject.Key get(java.lang.Class,java.lang.Class) -> get
    231:231:com.google.inject.Key get(java.lang.Class,java.lang.annotation.Annotation) -> get
    238:238:com.google.inject.Key get(java.lang.reflect.Type) -> get
    246:246:com.google.inject.Key get(java.lang.reflect.Type,java.lang.Class) -> get
    253:253:com.google.inject.Key get(java.lang.reflect.Type,java.lang.annotation.Annotation) -> get
    260:260:com.google.inject.Key get(com.google.inject.TypeLiteral) -> get
    268:268:com.google.inject.Key get(com.google.inject.TypeLiteral,java.lang.Class) -> get
    276:276:com.google.inject.Key get(com.google.inject.TypeLiteral,java.lang.annotation.Annotation) -> get
    284:284:com.google.inject.Key ofType(java.lang.Class) -> ofType
    292:292:com.google.inject.Key ofType(java.lang.reflect.Type) -> ofType
    300:300:com.google.inject.Key ofType(com.google.inject.TypeLiteral) -> ofType
    307:307:boolean hasAttributes() -> hasAttributes
    315:315:com.google.inject.Key withoutAttributes() -> withoutAttributes
    329:329:boolean isMarker(java.lang.Class) -> isMarker
    336:345:com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.annotation.Annotation) -> strategyFor
    352:355:com.google.inject.Key$AnnotationStrategy strategyFor(java.lang.Class) -> strategyFor
    360:363:void ensureRetainedAtRuntime(java.lang.Class) -> ensureRetainedAtRuntime
    367:370:void ensureIsBindingAnnotation(java.lang.Class) -> ensureIsBindingAnnotation
    487:487:boolean isBindingAnnotation(java.lang.annotation.Annotation) -> isBindingAnnotation
    492:492:boolean isBindingAnnotation(java.lang.Class) -> isBindingAnnotation
com.google.inject.Key$AnnotationInstanceStrategy -> com.google.inject.Key$AnnotationInstanceStrategy:
    java.lang.annotation.Annotation annotation -> annotation
    406:406:boolean hasAttributes() -> hasAttributes
    410:410:com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
    414:414:java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    418:418:java.lang.Class getAnnotationType() -> getAnnotationType
    422:427:boolean equals(java.lang.Object) -> equals
    431:431:int hashCode() -> hashCode
    435:435:java.lang.String toString() -> toString
com.google.inject.Key$AnnotationStrategy -> com.google.inject.Key$AnnotationStrategy:
    java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    java.lang.Class getAnnotationType() -> getAnnotationType
    boolean hasAttributes() -> hasAttributes
    com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
com.google.inject.Key$AnnotationTypeStrategy -> com.google.inject.Key$AnnotationTypeStrategy:
    java.lang.Class annotationType -> annotationType
    java.lang.annotation.Annotation annotation -> annotation
    453:453:boolean hasAttributes() -> hasAttributes
    457:457:com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
    461:461:java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    465:465:java.lang.Class getAnnotationType() -> getAnnotationType
    469:474:boolean equals(java.lang.Object) -> equals
    478:478:int hashCode() -> hashCode
    482:482:java.lang.String toString() -> toString
com.google.inject.Key$NullAnnotationStrategy -> com.google.inject.Key$NullAnnotationStrategy:
    com.google.inject.Key$NullAnnotationStrategy INSTANCE -> INSTANCE
    com.google.inject.Key$NullAnnotationStrategy[] $VALUES -> $VALUES
    372:372:com.google.inject.Key$NullAnnotationStrategy[] values() -> values
    372:372:com.google.inject.Key$NullAnnotationStrategy valueOf(java.lang.String) -> valueOf
    376:376:boolean hasAttributes() -> hasAttributes
    380:380:com.google.inject.Key$AnnotationStrategy withoutAttributes() -> withoutAttributes
    384:384:java.lang.annotation.Annotation getAnnotation() -> getAnnotation
    388:388:java.lang.Class getAnnotationType() -> getAnnotationType
    392:392:java.lang.String toString() -> toString
com.google.inject.LookupProcessor -> com.google.inject.LookupProcessor:
    38:45:java.lang.Boolean visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    51:57:java.lang.Boolean visit(com.google.inject.spi.ProviderLookup) -> visit
    30:30:java.lang.Object visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    30:30:java.lang.Object visit(com.google.inject.spi.ProviderLookup) -> visit
com.google.inject.Lookups -> com.google.inject.Lookups:
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
com.google.inject.MembersInjector -> com.google.inject.MembersInjector:
    void injectMembers(java.lang.Object) -> injectMembers
com.google.inject.MembersInjectorImpl -> com.google.inject.MembersInjectorImpl:
    com.google.inject.TypeLiteral typeLiteral -> typeLiteral
    com.google.inject.InjectorImpl injector -> injector
    com.google.inject.internal.ImmutableList memberInjectors -> memberInjectors
    com.google.inject.internal.ImmutableList userMembersInjectors -> userMembersInjectors
    com.google.inject.internal.ImmutableList injectionListeners -> injectionListeners
    55:55:com.google.inject.internal.ImmutableList getMemberInjectors() -> getMemberInjectors
    59:67:void injectMembers(java.lang.Object) -> injectMembers
    70:82:void injectAndNotify(java.lang.Object,com.google.inject.internal.Errors) -> injectAndNotify
    85:94:void notifyListeners(java.lang.Object,com.google.inject.internal.Errors) -> notifyListeners
    98:111:void injectMembers(java.lang.Object,com.google.inject.internal.Errors,com.google.inject.internal.InternalContext) -> injectMembers
    114:114:java.lang.String toString() -> toString
    118:122:com.google.inject.internal.ImmutableSet getInjectionPoints() -> getInjectionPoints
com.google.inject.MembersInjectorImpl$1 -> com.google.inject.MembersInjectorImpl$1:
    java.lang.Object val$instance -> val$instance
    com.google.inject.internal.Errors val$errors -> val$errors
    com.google.inject.MembersInjectorImpl this$0 -> this$0
    76:77:java.lang.Void call(com.google.inject.internal.InternalContext) -> call
    74:74:java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.MembersInjectorStore -> com.google.inject.MembersInjectorStore:
    com.google.inject.InjectorImpl injector -> injector
    com.google.inject.internal.ImmutableList typeListenerBindings -> typeListenerBindings
    com.google.inject.internal.FailableCache cache -> cache
    58:58:boolean hasTypeListeners() -> hasTypeListeners
    66:66:com.google.inject.MembersInjectorImpl get(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> get
    74:99:com.google.inject.MembersInjectorImpl createWithListeners(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> createWithListeners
    107:121:com.google.inject.internal.ImmutableList getInjectors(java.util.Set,com.google.inject.internal.Errors) -> getInjectors
    35:35:com.google.inject.MembersInjectorImpl access$000(com.google.inject.MembersInjectorStore,com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> access$000
com.google.inject.MembersInjectorStore$1 -> com.google.inject.MembersInjectorStore$1:
    com.google.inject.MembersInjectorStore this$0 -> this$0
    43:43:com.google.inject.MembersInjectorImpl create(com.google.inject.TypeLiteral,com.google.inject.internal.Errors) -> create
    40:40:java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors) -> create
com.google.inject.MessageProcessor -> com.google.inject.MessageProcessor:
    java.util.logging.Logger logger -> logger
    39:47:java.lang.Boolean visit(com.google.inject.spi.Message) -> visit
    51:52:java.lang.String getRootMessage(java.lang.Throwable) -> getRootMessage
    30:30:java.lang.Object visit(com.google.inject.spi.Message) -> visit
com.google.inject.Module -> com.google.inject.Module:
    void configure(com.google.inject.Binder) -> configure
com.google.inject.OutOfScopeException -> com.google.inject.OutOfScopeException:
com.google.inject.PrivateBinder -> com.google.inject.PrivateBinder:
    void expose(com.google.inject.Key) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(java.lang.Class) -> expose
    com.google.inject.binder.AnnotatedElementBuilder expose(com.google.inject.TypeLiteral) -> expose
    com.google.inject.PrivateBinder withSource(java.lang.Object) -> withSource
    com.google.inject.PrivateBinder skipSources(java.lang.Class[]) -> skipSources
com.google.inject.PrivateElementProcessor -> com.google.inject.PrivateElementProcessor:
    com.google.inject.Stage stage -> stage
    java.util.List injectorShellBuilders -> injectorShellBuilders
    40:45:java.lang.Boolean visit(com.google.inject.spi.PrivateElements) -> visit
    49:49:java.util.List getInjectorShellBuilders() -> getInjectorShellBuilders
    29:29:java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
com.google.inject.PrivateModule -> com.google.inject.PrivateModule:
    com.google.inject.PrivateBinder binder -> binder
    92:101:void configure(com.google.inject.Binder) -> configure
    void configure() -> configure
    111:112:void expose(com.google.inject.Key) -> expose
    120:120:com.google.inject.binder.AnnotatedElementBuilder expose(java.lang.Class) -> expose
    129:129:com.google.inject.binder.AnnotatedElementBuilder expose(com.google.inject.TypeLiteral) -> expose
    138:138:com.google.inject.PrivateBinder binder() -> binder
    145:146:void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    152:152:com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    159:159:com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    166:166:com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    173:173:com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    180:181:void install(com.google.inject.Module) -> install
    187:188:void addError(java.lang.String,java.lang.Object[]) -> addError
    194:195:void addError(java.lang.Throwable) -> addError
    201:202:void addError(com.google.inject.spi.Message) -> addError
    208:209:void requestInjection(java.lang.Object) -> requestInjection
    215:216:void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    233:234:void requireBinding(com.google.inject.Key) -> requireBinding
    240:241:void requireBinding(java.lang.Class) -> requireBinding
    247:247:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    254:254:com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    262:263:void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    269:269:com.google.inject.Stage currentStage() -> currentStage
    276:276:com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    283:283:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    291:292:void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
com.google.inject.ProvidedBy -> com.google.inject.ProvidedBy:
    java.lang.Class value() -> value
com.google.inject.Provider -> com.google.inject.Provider:
    java.lang.Object get() -> get
com.google.inject.ProviderToInternalFactoryAdapter -> com.google.inject.ProviderToInternalFactoryAdapter:
    com.google.inject.InjectorImpl injector -> injector
    com.google.inject.internal.InternalFactory internalFactory -> internalFactory
    40:51:java.lang.Object get() -> get
    56:56:java.lang.String toString() -> toString
    28:28:com.google.inject.internal.InternalFactory access$000(com.google.inject.ProviderToInternalFactoryAdapter) -> access$000
com.google.inject.ProviderToInternalFactoryAdapter$1 -> com.google.inject.ProviderToInternalFactoryAdapter$1:
    com.google.inject.internal.Errors val$errors -> val$errors
    com.google.inject.ProviderToInternalFactoryAdapter this$0 -> this$0
    44:45:java.lang.Object call(com.google.inject.internal.InternalContext) -> call
com.google.inject.Provides -> com.google.inject.Provides:
com.google.inject.ProvisionException -> com.google.inject.ProvisionException:
    com.google.inject.internal.ImmutableSet messages -> messages
    long serialVersionUID -> serialVersionUID
    55:55:java.util.Collection getErrorMessages() -> getErrorMessages
    59:59:java.lang.String getMessage() -> getMessage
com.google.inject.Reflection -> com.google.inject.Reflection:
    44:47:java.lang.reflect.Constructor invalidConstructor() -> invalidConstructor
com.google.inject.Reflection$InvalidConstructor -> com.google.inject.Reflection$InvalidConstructor:
com.google.inject.Scope -> com.google.inject.Scope:
    com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    java.lang.String toString() -> toString
com.google.inject.ScopeAnnotation -> com.google.inject.ScopeAnnotation:
com.google.inject.ScopeBindingProcessor -> com.google.inject.ScopeBindingProcessor:
    38:59:java.lang.Boolean visit(com.google.inject.spi.ScopeBinding) -> visit
    31:31:java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
com.google.inject.Scopes -> com.google.inject.Scopes:
    com.google.inject.Scope SINGLETON -> SINGLETON
    com.google.inject.Scope NO_SCOPE -> NO_SCOPE
    97:105:com.google.inject.internal.InternalFactory scope(com.google.inject.Key,com.google.inject.InjectorImpl,com.google.inject.internal.InternalFactory,com.google.inject.internal.Scoping) -> scope
    115:126:com.google.inject.internal.Scoping makeInjectable(com.google.inject.internal.Scoping,com.google.inject.InjectorImpl,com.google.inject.internal.Errors) -> makeInjectable
com.google.inject.Scopes$1 -> com.google.inject.Scopes$1:
    38:38:com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    68:68:java.lang.String toString() -> toString
com.google.inject.Scopes$1$1 -> com.google.inject.Scopes$1$1:
    java.lang.Object instance -> instance
    com.google.inject.Provider val$creator -> val$creator
    com.google.inject.Scopes$1 this$0 -> this$0
    45:58:java.lang.Object get() -> get
    62:62:java.lang.String toString() -> toString
com.google.inject.Scopes$2 -> com.google.inject.Scopes$2:
    86:86:com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    89:89:java.lang.String toString() -> toString
com.google.inject.SingleFieldInjector -> com.google.inject.SingleFieldInjector:
    java.lang.reflect.Field field -> field
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    com.google.inject.spi.Dependency dependency -> dependency
    com.google.inject.internal.InternalFactory factory -> factory
    48:48:com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    52:65:void inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Object) -> inject
com.google.inject.SingleMemberInjector -> com.google.inject.SingleMemberInjector:
    void inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Object) -> inject
    com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
com.google.inject.SingleMethodInjector -> com.google.inject.SingleMethodInjector:
    com.google.inject.InjectorImpl$MethodInvoker methodInvoker -> methodInvoker
    com.google.inject.SingleParameterInjector[] parameterInjectors -> parameterInjectors
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    49:69:com.google.inject.InjectorImpl$MethodInvoker createMethodInvoker(java.lang.reflect.Method) -> createMethodInvoker
    78:78:com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    84:100:void inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,java.lang.Object) -> inject
com.google.inject.SingleMethodInjector$1 -> com.google.inject.SingleMethodInjector$1:
    java.lang.reflect.Method val$method -> val$method
    com.google.inject.SingleMethodInjector this$0 -> this$0
    72:72:java.lang.Object invoke(java.lang.Object,java.lang.Object[]) -> invoke
com.google.inject.SingleParameterInjector -> com.google.inject.SingleParameterInjector:
    java.lang.Object[] NO_ARGUMENTS -> NO_ARGUMENTS
    com.google.inject.spi.Dependency dependency -> dependency
    com.google.inject.internal.InternalFactory factory -> factory
    40:44:java.lang.Object inject(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext) -> inject
    53:73:java.lang.Object[] getAll(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.SingleParameterInjector[]) -> getAll
com.google.inject.Singleton -> com.google.inject.Singleton:
com.google.inject.Stage -> com.google.inject.Stage:
    com.google.inject.Stage TOOL -> TOOL
    com.google.inject.Stage DEVELOPMENT -> DEVELOPMENT
    com.google.inject.Stage PRODUCTION -> PRODUCTION
    com.google.inject.Stage[] $VALUES -> $VALUES
    24:24:com.google.inject.Stage[] values() -> values
    24:24:com.google.inject.Stage valueOf(java.lang.String) -> valueOf
com.google.inject.State -> com.google.inject.State:
    com.google.inject.State NONE -> NONE
    com.google.inject.State parent() -> parent
    com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key) -> getExplicitBinding
    java.util.Map getExplicitBindingsThisLevel() -> getExplicitBindingsThisLevel
    void putBinding(com.google.inject.Key,com.google.inject.internal.BindingImpl) -> putBinding
    com.google.inject.Scope getScope(java.lang.Class) -> getScope
    void putAnnotation(java.lang.Class,com.google.inject.Scope) -> putAnnotation
    void addConverter(com.google.inject.internal.MatcherAndConverter) -> addConverter
    com.google.inject.internal.MatcherAndConverter getConverter(java.lang.String,com.google.inject.TypeLiteral,com.google.inject.internal.Errors,java.lang.Object) -> getConverter
    java.lang.Iterable getConvertersThisLevel() -> getConvertersThisLevel
    void addTypeListener(com.google.inject.spi.TypeListenerBinding) -> addTypeListener
    java.util.List getTypeListenerBindings() -> getTypeListenerBindings
    void blacklist(com.google.inject.Key) -> blacklist
    boolean isBlacklisted(com.google.inject.Key) -> isBlacklisted
    java.lang.Object lock() -> lock
com.google.inject.State$1 -> com.google.inject.State$1:
    39:39:com.google.inject.State parent() -> parent
    43:43:com.google.inject.internal.BindingImpl getExplicitBinding(com.google.inject.Key) -> getExplicitBinding
    47:47:java.util.Map getExplicitBindingsThisLevel() -> getExplicitBindingsThisLevel
    51:51:void putBinding(com.google.inject.Key,com.google.inject.internal.BindingImpl) -> putBinding
    55:55:com.google.inject.Scope getScope(java.lang.Class) -> getScope
    59:59:void putAnnotation(java.lang.Class,com.google.inject.Scope) -> putAnnotation
    63:63:void addConverter(com.google.inject.internal.MatcherAndConverter) -> addConverter
    68:68:com.google.inject.internal.MatcherAndConverter getConverter(java.lang.String,com.google.inject.TypeLiteral,com.google.inject.internal.Errors,java.lang.Object) -> getConverter
    72:72:java.lang.Iterable getConvertersThisLevel() -> getConvertersThisLevel
    86:86:void addTypeListener(com.google.inject.spi.TypeListenerBinding) -> addTypeListener
    90:90:java.util.List getTypeListenerBindings() -> getTypeListenerBindings
    94:94:void blacklist(com.google.inject.Key) -> blacklist
    97:97:boolean isBlacklisted(com.google.inject.Key) -> isBlacklisted
    101:101:java.lang.Object lock() -> lock
com.google.inject.TypeConverterBindingProcessor -> com.google.inject.TypeConverterBindingProcessor:
    47:111:void prepareBuiltInConverters(com.google.inject.InjectorImpl) -> prepareBuiltInConverters
    115:139:void convertToPrimitiveType(java.lang.Class,java.lang.Class) -> convertToPrimitiveType
    142:143:void convertToClass(java.lang.Class,com.google.inject.spi.TypeConverter) -> convertToClass
    147:161:void convertToClasses(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToClasses
    165:167:void internalConvertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> internalConvertToTypes
    170:172:java.lang.Boolean visit(com.google.inject.spi.TypeConverterBinding) -> visit
    39:39:java.lang.Object visit(com.google.inject.spi.TypeConverterBinding) -> visit
com.google.inject.TypeConverterBindingProcessor$1 -> com.google.inject.TypeConverterBindingProcessor$1:
    com.google.inject.TypeConverterBindingProcessor this$0 -> this$0
    60:64:java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    68:68:java.lang.String toString() -> toString
com.google.inject.TypeConverterBindingProcessor$2 -> com.google.inject.TypeConverterBindingProcessor$2:
    com.google.inject.TypeConverterBindingProcessor this$0 -> this$0
    75:75:java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    79:79:java.lang.String toString() -> toString
com.google.inject.TypeConverterBindingProcessor$3 -> com.google.inject.TypeConverterBindingProcessor$3:
    com.google.inject.TypeConverterBindingProcessor this$0 -> this$0
    86:86:boolean matches(com.google.inject.TypeLiteral) -> matches
    90:90:java.lang.String toString() -> toString
    84:84:boolean matches(java.lang.Object) -> matches
com.google.inject.TypeConverterBindingProcessor$4 -> com.google.inject.TypeConverterBindingProcessor$4:
    com.google.inject.TypeConverterBindingProcessor this$0 -> this$0
    97:99:java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    104:104:java.lang.String toString() -> toString
com.google.inject.TypeConverterBindingProcessor$5 -> com.google.inject.TypeConverterBindingProcessor$5:
    java.lang.reflect.Method val$parser -> val$parser
    java.lang.Class val$wrapperType -> val$wrapperType
    com.google.inject.TypeConverterBindingProcessor this$0 -> this$0
    122:126:java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
    131:131:java.lang.String toString() -> toString
com.google.inject.TypeConverterBindingProcessor$6 -> com.google.inject.TypeConverterBindingProcessor$6:
    com.google.inject.matcher.Matcher val$typeMatcher -> val$typeMatcher
    com.google.inject.TypeConverterBindingProcessor this$0 -> this$0
    149:154:boolean matches(com.google.inject.TypeLiteral) -> matches
    158:158:java.lang.String toString() -> toString
    147:147:boolean matches(java.lang.Object) -> matches
com.google.inject.TypeListenerBindingProcessor -> com.google.inject.TypeListenerBindingProcessor:
    34:35:java.lang.Boolean visit(com.google.inject.spi.TypeListenerBinding) -> visit
    27:27:java.lang.Object visit(com.google.inject.spi.TypeListenerBinding) -> visit
com.google.inject.TypeLiteral -> com.google.inject.TypeLiteral:
    java.lang.Class rawType -> rawType
    java.lang.reflect.Type type -> type
    int hashCode -> hashCode
    103:108:java.lang.reflect.Type getSuperclassTypeParameter(java.lang.Class) -> getSuperclassTypeParameter
    115:115:com.google.inject.TypeLiteral fromSuperclassTypeParameter(java.lang.Class) -> fromSuperclassTypeParameter
    124:124:java.lang.Class getRawType() -> getRawType
    131:131:java.lang.reflect.Type getType() -> getType
    141:141:com.google.inject.TypeLiteral providerType() -> providerType
    145:145:int hashCode() -> hashCode
    149:149:boolean equals(java.lang.Object) -> equals
    154:154:java.lang.String toString() -> toString
    161:161:com.google.inject.TypeLiteral get(java.lang.reflect.Type) -> get
    168:168:com.google.inject.TypeLiteral get(java.lang.Class) -> get
    174:178:java.util.List resolveAll(java.lang.reflect.Type[]) -> resolveAll
    185:185:com.google.inject.TypeLiteral resolve(java.lang.reflect.Type) -> resolve
    191:247:java.lang.reflect.Type resolveType(java.lang.reflect.Type) -> resolveType
    261:263:com.google.inject.TypeLiteral getSupertype(java.lang.Class) -> getSupertype
    273:275:com.google.inject.TypeLiteral getFieldType(java.lang.reflect.Field) -> getFieldType
    287:303:java.util.List getParameterTypes(java.lang.reflect.Member) -> getParameterTypes
    315:331:java.util.List getExceptionTypes(java.lang.reflect.Member) -> getExceptionTypes
    341:343:com.google.inject.TypeLiteral getReturnType(java.lang.reflect.Method) -> getReturnType
com.google.inject.WeakKeySet -> com.google.inject.WeakKeySet:
    java.util.Set backingSet -> backingSet
    39:39:boolean add(com.google.inject.Key) -> add
    43:43:boolean contains(java.lang.Object) -> contains
com.google.inject.binder.AnnotatedBindingBuilder -> com.google.inject.binder.AnnotatedBindingBuilder:
    com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.binder.AnnotatedConstantBindingBuilder -> com.google.inject.binder.AnnotatedConstantBindingBuilder:
    com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.binder.AnnotatedElementBuilder -> com.google.inject.binder.AnnotatedElementBuilder:
    void annotatedWith(java.lang.Class) -> annotatedWith
    void annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.binder.ConstantBindingBuilder -> com.google.inject.binder.ConstantBindingBuilder:
    void to(java.lang.String) -> to
    void to(int) -> to
    void to(long) -> to
    void to(boolean) -> to
    void to(double) -> to
    void to(float) -> to
    void to(short) -> to
    void to(char) -> to
    void to(java.lang.Class) -> to
    void to(java.lang.Enum) -> to
com.google.inject.binder.LinkedBindingBuilder -> com.google.inject.binder.LinkedBindingBuilder:
    com.google.inject.binder.ScopedBindingBuilder to(java.lang.Class) -> to
    com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.TypeLiteral) -> to
    com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.Key) -> to
    void toInstance(java.lang.Object) -> toInstance
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class) -> toProvider
    com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Key) -> toProvider
com.google.inject.binder.ScopedBindingBuilder -> com.google.inject.binder.ScopedBindingBuilder:
    void in(java.lang.Class) -> in
    void in(com.google.inject.Scope) -> in
    void asEagerSingleton() -> asEagerSingleton
com.google.inject.internal.AbstractBindingBuilder -> com.google.inject.internal.AbstractBindingBuilder:
    java.lang.String IMPLEMENTATION_ALREADY_SET -> IMPLEMENTATION_ALREADY_SET
    java.lang.String SINGLE_INSTANCE_AND_SCOPE -> SINGLE_INSTANCE_AND_SCOPE
    java.lang.String SCOPE_ALREADY_SET -> SCOPE_ALREADY_SET
    java.lang.String BINDING_TO_NULL -> BINDING_TO_NULL
    java.lang.String CONSTANT_VALUE_ALREADY_SET -> CONSTANT_VALUE_ALREADY_SET
    java.lang.String ANNOTATION_ALREADY_SPECIFIED -> ANNOTATION_ALREADY_SPECIFIED
    com.google.inject.Key NULL_KEY -> NULL_KEY
    java.util.List elements -> elements
    int position -> position
    com.google.inject.Binder binder -> binder
    com.google.inject.internal.BindingImpl binding -> binding
    61:61:com.google.inject.internal.BindingImpl getBinding() -> getBinding
    65:67:com.google.inject.internal.BindingImpl setBinding(com.google.inject.internal.BindingImpl) -> setBinding
    72:74:com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.Class) -> annotatedWithInternal
    80:82:com.google.inject.internal.BindingImpl annotatedWithInternal(java.lang.annotation.Annotation) -> annotatedWithInternal
    87:90:void in(java.lang.Class) -> in
    93:96:void in(com.google.inject.Scope) -> in
    99:101:void asEagerSingleton() -> asEagerSingleton
    104:104:boolean keyTypeIsSet() -> keyTypeIsSet
    108:111:void checkNotTargetted() -> checkNotTargetted
    114:117:void checkNotAnnotated() -> checkNotAnnotated
    121:129:void checkNotScoped() -> checkNotScoped
com.google.inject.internal.AbstractIterator -> com.google.inject.internal.AbstractIterator:
    com.google.inject.internal.AbstractIterator$State state -> state
    java.lang.Object next -> next
    java.lang.Object computeNext() -> computeNext
    112:113:java.lang.Object endOfData() -> endOfData
    117:125:boolean hasNext() -> hasNext
    129:135:boolean tryToComputeNext() -> tryToComputeNext
    139:143:java.lang.Object next() -> next
    150:150:void remove() -> remove
com.google.inject.internal.AbstractIterator$1 -> com.google.inject.internal.AbstractIterator$1:
    int[] $SwitchMap$com$google$inject$internal$AbstractIterator$State -> $SwitchMap$com$google$inject$internal$AbstractIterator$State
com.google.inject.internal.AbstractIterator$State -> com.google.inject.internal.AbstractIterator$State:
    com.google.inject.internal.AbstractIterator$State READY -> READY
    com.google.inject.internal.AbstractIterator$State NOT_READY -> NOT_READY
    com.google.inject.internal.AbstractIterator$State DONE -> DONE
    com.google.inject.internal.AbstractIterator$State FAILED -> FAILED
    com.google.inject.internal.AbstractIterator$State[] $VALUES -> $VALUES
    62:62:com.google.inject.internal.AbstractIterator$State[] values() -> values
    62:62:com.google.inject.internal.AbstractIterator$State valueOf(java.lang.String) -> valueOf
com.google.inject.internal.AbstractMapEntry -> com.google.inject.internal.AbstractMapEntry:
    java.lang.Object getKey() -> getKey
    java.lang.Object getValue() -> getValue
    40:40:java.lang.Object setValue(java.lang.Object) -> setValue
    48:53:boolean equals(java.lang.Object) -> equals
    61:63:int hashCode() -> hashCode
    70:70:java.lang.String toString() -> toString
com.google.inject.internal.Annotations -> com.google.inject.internal.Annotations:
    39:40:boolean isRetainedAtRuntime(java.lang.Class) -> isRetainedAtRuntime
    46:46:java.lang.Class findScopeAnnotation(com.google.inject.internal.Errors,java.lang.Class) -> findScopeAnnotation
    51:63:java.lang.Class findScopeAnnotation(com.google.inject.internal.Errors,java.lang.annotation.Annotation[]) -> findScopeAnnotation
    67:67:boolean isScopeAnnotation(java.lang.Class) -> isScopeAnnotation
    76:84:void checkForMisplacedScopeAnnotations(java.lang.Class,java.lang.Object,com.google.inject.internal.Errors) -> checkForMisplacedScopeAnnotations
    89:92:com.google.inject.Key getKey(com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.annotation.Annotation[],com.google.inject.internal.Errors) -> getKey
    100:113:java.lang.annotation.Annotation findBindingAnnotation(com.google.inject.internal.Errors,java.lang.reflect.Member,java.lang.annotation.Annotation[]) -> findBindingAnnotation
com.google.inject.internal.AsynchronousComputationException -> com.google.inject.internal.AsynchronousComputationException:
com.google.inject.internal.BindingBuilder -> com.google.inject.internal.BindingBuilder:
    46:47:com.google.inject.internal.BindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    51:52:com.google.inject.internal.BindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    56:56:com.google.inject.internal.BindingBuilder to(java.lang.Class) -> to
    60:60:com.google.inject.internal.BindingBuilder to(com.google.inject.TypeLiteral) -> to
    64:69:com.google.inject.internal.BindingBuilder to(com.google.inject.Key) -> to
    73:94:void toInstance(java.lang.Object) -> toInstance
    97:114:com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Provider) -> toProvider
    118:118:com.google.inject.internal.BindingBuilder toProvider(java.lang.Class) -> toProvider
    122:128:com.google.inject.internal.BindingBuilder toProvider(com.google.inject.Key) -> toProvider
    132:132:java.lang.String toString() -> toString
    38:38:com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    38:38:com.google.inject.binder.LinkedBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    38:38:com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Key) -> toProvider
    38:38:com.google.inject.binder.ScopedBindingBuilder toProvider(java.lang.Class) -> toProvider
    38:38:com.google.inject.binder.ScopedBindingBuilder toProvider(com.google.inject.Provider) -> toProvider
    38:38:com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.Key) -> to
    38:38:com.google.inject.binder.ScopedBindingBuilder to(com.google.inject.TypeLiteral) -> to
    38:38:com.google.inject.binder.ScopedBindingBuilder to(java.lang.Class) -> to
com.google.inject.internal.BindingImpl -> com.google.inject.internal.BindingImpl:
    com.google.inject.Injector injector -> injector
    com.google.inject.Key key -> key
    java.lang.Object source -> source
    com.google.inject.internal.Scoping scoping -> scoping
    com.google.inject.internal.InternalFactory internalFactory -> internalFactory
    com.google.inject.Provider provider -> provider
    56:56:com.google.inject.Key getKey() -> getKey
    60:60:java.lang.Object getSource() -> getSource
    66:73:com.google.inject.Provider getProvider() -> getProvider
    77:77:com.google.inject.internal.InternalFactory getInternalFactory() -> getInternalFactory
    81:81:com.google.inject.internal.Scoping getScoping() -> getScoping
    89:89:boolean isConstant() -> isConstant
    93:93:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    97:97:java.lang.Object acceptScopingVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptScopingVisitor
    101:101:com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    105:105:com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    109:109:java.lang.String toString() -> toString
    117:117:com.google.inject.Injector getInjector() -> getInjector
com.google.inject.internal.BytecodeGen -> com.google.inject.internal.BytecodeGen:
    java.util.logging.Logger logger -> logger
    java.lang.ClassLoader GUICE_CLASS_LOADER -> GUICE_CLASS_LOADER
    java.lang.String GUICE_INTERNAL_PACKAGE -> GUICE_INTERNAL_PACKAGE
    java.lang.String CGLIB_PACKAGE -> CGLIB_PACKAGE
    boolean HOOK_ENABLED -> HOOK_ENABLED
    java.util.Map CLASS_LOADER_CACHE -> CLASS_LOADER_CACHE
    111:111:java.lang.ClassLoader canonicalize(java.lang.ClassLoader) -> canonicalize
    122:124:java.lang.ClassLoader getSystemClassLoaderOrNull() -> getSystemClassLoaderOrNull
    132:132:java.lang.ClassLoader getClassLoader(java.lang.Class) -> getClassLoader
    136:152:java.lang.ClassLoader getClassLoader(java.lang.Class,java.lang.ClassLoader) -> getClassLoader
    58:58:java.util.logging.Logger access$000() -> access$000
    58:58:java.lang.String access$200() -> access$200
com.google.inject.internal.BytecodeGen$1 -> com.google.inject.internal.BytecodeGen$1:
    96:97:java.lang.ClassLoader apply(java.lang.ClassLoader) -> apply
    94:94:java.lang.Object apply(java.lang.Object) -> apply
com.google.inject.internal.BytecodeGen$1$1 -> com.google.inject.internal.BytecodeGen$1$1:
    java.lang.ClassLoader val$typeClassLoader -> val$typeClassLoader
    com.google.inject.internal.BytecodeGen$1 this$0 -> this$0
    99:99:java.lang.ClassLoader run() -> run
    97:97:java.lang.Object run() -> run
com.google.inject.internal.BytecodeGen$BridgeClassLoader -> com.google.inject.internal.BytecodeGen$BridgeClassLoader:
    253:265:java.lang.Class loadClass(java.lang.String,boolean) -> loadClass
com.google.inject.internal.BytecodeGen$Visibility -> com.google.inject.internal.BytecodeGen$Visibility:
    com.google.inject.internal.BytecodeGen$Visibility PUBLIC -> PUBLIC
    com.google.inject.internal.BytecodeGen$Visibility SAME_PACKAGE -> SAME_PACKAGE
    com.google.inject.internal.BytecodeGen$Visibility[] $VALUES -> $VALUES
    189:189:com.google.inject.internal.BytecodeGen$Visibility[] values() -> values
    189:189:com.google.inject.internal.BytecodeGen$Visibility valueOf(java.lang.String) -> valueOf
    214:227:com.google.inject.internal.BytecodeGen$Visibility forMember(java.lang.reflect.Member) -> forMember
    231:231:com.google.inject.internal.BytecodeGen$Visibility forType(java.lang.Class) -> forType
    com.google.inject.internal.BytecodeGen$Visibility and(com.google.inject.internal.BytecodeGen$Visibility) -> and
com.google.inject.internal.BytecodeGen$Visibility$1 -> com.google.inject.internal.BytecodeGen$Visibility$1:
    197:197:com.google.inject.internal.BytecodeGen$Visibility and(com.google.inject.internal.BytecodeGen$Visibility) -> and
com.google.inject.internal.BytecodeGen$Visibility$2 -> com.google.inject.internal.BytecodeGen$Visibility$2:
    209:209:com.google.inject.internal.BytecodeGen$Visibility and(com.google.inject.internal.BytecodeGen$Visibility) -> and
com.google.inject.internal.Classes -> com.google.inject.internal.Classes:
    27:27:boolean isInnerClass(java.lang.Class) -> isInnerClass
    32:33:boolean isConcrete(java.lang.Class) -> isConcrete
com.google.inject.internal.Collections2 -> com.google.inject.internal.Collections2:
    38:38:java.util.Collection toCollection(java.lang.Iterable) -> toCollection
    43:51:boolean setEquals(java.util.Set,java.lang.Object) -> setEquals
com.google.inject.internal.ComputationException -> com.google.inject.internal.ComputationException:
com.google.inject.internal.ConstantBindingBuilderImpl -> com.google.inject.internal.ConstantBindingBuilderImpl:
    43:44:com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.Class) -> annotatedWith
    48:49:com.google.inject.binder.ConstantBindingBuilder annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    53:54:void to(java.lang.String) -> to
    57:58:void to(int) -> to
    61:62:void to(long) -> to
    65:66:void to(boolean) -> to
    69:70:void to(double) -> to
    73:74:void to(float) -> to
    77:78:void to(short) -> to
    81:82:void to(char) -> to
    85:86:void to(java.lang.Class) -> to
    89:90:void to(java.lang.Enum) -> to
    95:120:void toConstant(java.lang.Class,java.lang.Object) -> toConstant
    123:123:java.lang.String toString() -> toString
com.google.inject.internal.ConstructionContext -> com.google.inject.internal.ConstructionContext:
    java.lang.Object currentReference -> currentReference
    boolean constructing -> constructing
    java.util.List invocationHandlers -> invocationHandlers
    39:39:java.lang.Object getCurrentReference() -> getCurrentReference
    43:44:void removeCurrentReference() -> removeCurrentReference
    47:48:void setCurrentReference(java.lang.Object) -> setCurrentReference
    51:51:boolean isConstructing() -> isConstructing
    55:56:void startConstruction() -> startConstruction
    59:61:void finishConstruction() -> finishConstruction
    68:81:java.lang.Object createProxy(com.google.inject.internal.Errors,java.lang.Class) -> createProxy
    86:91:void setProxyDelegates(java.lang.Object) -> setProxyDelegates
com.google.inject.internal.ConstructionContext$DelegatingInvocationHandler -> com.google.inject.internal.ConstructionContext$DelegatingInvocationHandler:
    java.lang.Object delegate -> delegate
    99:117:java.lang.Object invoke(java.lang.Object,java.lang.reflect.Method,java.lang.Object[]) -> invoke
    122:123:void setDelegate(java.lang.Object) -> setDelegate
com.google.inject.internal.CustomConcurrentHashMap -> com.google.inject.internal.CustomConcurrentHashMap:
    512:517:int rehash(int) -> rehash
    125:125:int access$000(int) -> access$000
com.google.inject.internal.CustomConcurrentHashMap$Builder -> com.google.inject.internal.CustomConcurrentHashMap$Builder:
    float loadFactor -> loadFactor
    int initialCapacity -> initialCapacity
    int concurrencyLevel -> concurrencyLevel
    145:149:com.google.inject.internal.CustomConcurrentHashMap$Builder loadFactor(float) -> loadFactor
    161:165:com.google.inject.internal.CustomConcurrentHashMap$Builder initialCapacity(int) -> initialCapacity
    185:189:com.google.inject.internal.CustomConcurrentHashMap$Builder concurrencyLevel(int) -> concurrencyLevel
    204:207:java.util.concurrent.ConcurrentMap buildMap(com.google.inject.internal.CustomConcurrentHashMap$Strategy) -> buildMap
    250:257:java.util.concurrent.ConcurrentMap buildComputingMap(com.google.inject.internal.CustomConcurrentHashMap$ComputingStrategy,com.google.inject.internal.Function) -> buildComputingMap
com.google.inject.internal.CustomConcurrentHashMap$ComputingImpl -> com.google.inject.internal.CustomConcurrentHashMap$ComputingImpl:
    long serialVersionUID -> serialVersionUID
    com.google.inject.internal.CustomConcurrentHashMap$ComputingStrategy computingStrategy -> computingStrategy
    com.google.inject.internal.Function computer -> computer
    2002:2074:java.lang.Object get(java.lang.Object) -> get
com.google.inject.internal.CustomConcurrentHashMap$ComputingStrategy -> com.google.inject.internal.CustomConcurrentHashMap$ComputingStrategy:
    java.lang.Object compute(java.lang.Object,java.lang.Object,com.google.inject.internal.Function) -> compute
    java.lang.Object waitForValue(java.lang.Object) -> waitForValue
com.google.inject.internal.CustomConcurrentHashMap$Impl -> com.google.inject.internal.CustomConcurrentHashMap$Impl:
    int MAXIMUM_CAPACITY -> MAXIMUM_CAPACITY
    int MAX_SEGMENTS -> MAX_SEGMENTS
    int RETRIES_BEFORE_LOCK -> RETRIES_BEFORE_LOCK
    com.google.inject.internal.CustomConcurrentHashMap$Strategy strategy -> strategy
    int segmentMask -> segmentMask
    int segmentShift -> segmentShift
    com.google.inject.internal.CustomConcurrentHashMap$Impl$Segment[] segments -> segments
    float loadFactor -> loadFactor
    java.util.Set keySet -> keySet
    java.util.Collection values -> values
    java.util.Set entrySet -> entrySet
    long serialVersionUID -> serialVersionUID
    628:629:int hash(java.lang.Object) -> hash
    668:668:com.google.inject.internal.CustomConcurrentHashMap$Impl$Segment[] newSegmentArray(int) -> newSegmentArray
    680:680:com.google.inject.internal.CustomConcurrentHashMap$Impl$Segment segmentFor(int) -> segmentFor
    1219:1249:boolean isEmpty() -> isEmpty
    1260:1302:int size() -> size
    1318:1322:java.lang.Object get(java.lang.Object) -> get
    1335:1339:boolean containsKey(java.lang.Object) -> containsKey
    1353:1405:boolean containsValue(java.lang.Object) -> containsValue
    1422:1429:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    1440:1447:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    1458:1461:void putAll(java.util.Map) -> putAll
    1473:1477:java.lang.Object remove(java.lang.Object) -> remove
    1486:1490:boolean remove(java.lang.Object,java.lang.Object) -> remove
    1499:1509:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    1520:1527:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    1534:1537:void clear() -> clear
    1557:1558:java.util.Set keySet() -> keySet
    1579:1580:java.util.Collection values() -> values
    1601:1602:java.util.Set entrySet() -> entrySet
    1879:1888:void writeObject(java.io.ObjectOutputStream) -> writeObject
    1918:1970:void readObject(java.io.ObjectInputStream) -> readObject
com.google.inject.internal.CustomConcurrentHashMap$Impl$EntryIterator -> com.google.inject.internal.CustomConcurrentHashMap$Impl$EntryIterator:
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1777:1777:java.util.Map$Entry next() -> next
    1773:1773:java.lang.Object next() -> next
com.google.inject.internal.CustomConcurrentHashMap$Impl$EntrySet -> com.google.inject.internal.CustomConcurrentHashMap$Impl$EntrySet:
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1834:1834:java.util.Iterator iterator() -> iterator
    1838:1848:boolean contains(java.lang.Object) -> contains
    1852:1857:boolean remove(java.lang.Object) -> remove
    1861:1861:int size() -> size
    1865:1865:boolean isEmpty() -> isEmpty
    1869:1870:void clear() -> clear
com.google.inject.internal.CustomConcurrentHashMap$Impl$Fields -> com.google.inject.internal.CustomConcurrentHashMap$Impl$Fields:
    java.lang.reflect.Field loadFactor -> loadFactor
    java.lang.reflect.Field segmentShift -> segmentShift
    java.lang.reflect.Field segmentMask -> segmentMask
    java.lang.reflect.Field segments -> segments
    java.lang.reflect.Field strategy -> strategy
    1905:1909:java.lang.reflect.Field findField(java.lang.String) -> findField
com.google.inject.internal.CustomConcurrentHashMap$Impl$HashIterator -> com.google.inject.internal.CustomConcurrentHashMap$Impl$HashIterator:
    int nextSegmentIndex -> nextSegmentIndex
    int nextTableIndex -> nextTableIndex
    java.util.concurrent.atomic.AtomicReferenceArray currentTable -> currentTable
    java.lang.Object nextEntry -> nextEntry
    com.google.inject.internal.CustomConcurrentHashMap$Impl$WriteThroughEntry nextExternal -> nextExternal
    com.google.inject.internal.CustomConcurrentHashMap$Impl$WriteThroughEntry lastReturned -> lastReturned
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1623:1623:boolean hasMoreElements() -> hasMoreElements
    1627:1647:void advance() -> advance
    1654:1663:boolean nextInChain() -> nextInChain
    1671:1678:boolean nextInTable() -> nextInTable
    1686:1694:boolean advanceTo(java.lang.Object) -> advanceTo
    1699:1699:boolean hasNext() -> hasNext
    1703:1708:com.google.inject.internal.CustomConcurrentHashMap$Impl$WriteThroughEntry nextEntry() -> nextEntry
    1712:1717:void remove() -> remove
com.google.inject.internal.CustomConcurrentHashMap$Impl$InternalsImpl -> com.google.inject.internal.CustomConcurrentHashMap$Impl$InternalsImpl:
    long serialVersionUID -> serialVersionUID
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    637:641:java.lang.Object getEntry(java.lang.Object) -> getEntry
    645:649:boolean removeEntry(java.lang.Object,java.lang.Object) -> removeEntry
    653:657:boolean removeEntry(java.lang.Object) -> removeEntry
com.google.inject.internal.CustomConcurrentHashMap$Impl$KeyIterator -> com.google.inject.internal.CustomConcurrentHashMap$Impl$KeyIterator:
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1723:1723:java.lang.Object next() -> next
com.google.inject.internal.CustomConcurrentHashMap$Impl$KeySet -> com.google.inject.internal.CustomConcurrentHashMap$Impl$KeySet:
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1784:1784:java.util.Iterator iterator() -> iterator
    1788:1788:int size() -> size
    1792:1792:boolean isEmpty() -> isEmpty
    1796:1796:boolean contains(java.lang.Object) -> contains
    1800:1800:boolean remove(java.lang.Object) -> remove
    1804:1805:void clear() -> clear
com.google.inject.internal.CustomConcurrentHashMap$Impl$Segment -> com.google.inject.internal.CustomConcurrentHashMap$Impl$Segment:
    int count -> count
    int modCount -> modCount
    int threshold -> threshold
    java.util.concurrent.atomic.AtomicReferenceArray table -> table
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    760:760:java.util.concurrent.atomic.AtomicReferenceArray newEntryArray(int) -> newEntryArray
    768:770:void setTable(java.util.concurrent.atomic.AtomicReferenceArray) -> setTable
    776:777:java.lang.Object getFirst(int) -> getFirst
    783:801:java.lang.Object getEntry(java.lang.Object,int) -> getEntry
    805:810:java.lang.Object get(java.lang.Object,int) -> get
    814:833:boolean containsKey(java.lang.Object,int) -> containsKey
    837:858:boolean containsValue(java.lang.Object) -> containsValue
    862:885:boolean replace(java.lang.Object,int,java.lang.Object,java.lang.Object) -> replace
    890:911:java.lang.Object replace(java.lang.Object,int,java.lang.Object) -> replace
    916:956:java.lang.Object put(java.lang.Object,int,java.lang.Object,boolean) -> put
    964:1031:void expand() -> expand
    1034:1068:java.lang.Object remove(java.lang.Object,int) -> remove
    1073:1112:boolean remove(java.lang.Object,int,java.lang.Object) -> remove
    1117:1154:boolean removeEntry(java.lang.Object,int,java.lang.Object) -> removeEntry
    1159:1190:boolean removeEntry(java.lang.Object,int) -> removeEntry
    1195:1208:void clear() -> clear
com.google.inject.internal.CustomConcurrentHashMap$Impl$ValueIterator -> com.google.inject.internal.CustomConcurrentHashMap$Impl$ValueIterator:
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1730:1730:java.lang.Object next() -> next
com.google.inject.internal.CustomConcurrentHashMap$Impl$Values -> com.google.inject.internal.CustomConcurrentHashMap$Impl$Values:
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1811:1811:java.util.Iterator iterator() -> iterator
    1815:1815:int size() -> size
    1819:1819:boolean isEmpty() -> isEmpty
    1823:1823:boolean contains(java.lang.Object) -> contains
    1827:1828:void clear() -> clear
com.google.inject.internal.CustomConcurrentHashMap$Impl$WriteThroughEntry -> com.google.inject.internal.CustomConcurrentHashMap$Impl$WriteThroughEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    com.google.inject.internal.CustomConcurrentHashMap$Impl this$0 -> this$0
    1748:1748:java.lang.Object getKey() -> getKey
    1752:1752:java.lang.Object getValue() -> getValue
    1764:1769:java.lang.Object setValue(java.lang.Object) -> setValue
com.google.inject.internal.CustomConcurrentHashMap$Internals -> com.google.inject.internal.CustomConcurrentHashMap$Internals:
    java.lang.Object getEntry(java.lang.Object) -> getEntry
    boolean removeEntry(java.lang.Object,java.lang.Object) -> removeEntry
    boolean removeEntry(java.lang.Object) -> removeEntry
com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry -> com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry:
    java.lang.Object key -> key
    int hash -> hash
    com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry next -> next
    java.lang.Object value -> value
com.google.inject.internal.CustomConcurrentHashMap$SimpleStrategy -> com.google.inject.internal.CustomConcurrentHashMap$SimpleStrategy:
    2104:2104:com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry newEntry(java.lang.Object,int,com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry) -> newEntry
    2108:2108:com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry copyEntry(java.lang.Object,com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry,com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry) -> copyEntry
    2112:2113:void setValue(com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry,java.lang.Object) -> setValue
    2115:2115:java.lang.Object getValue(com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry) -> getValue
    2118:2118:boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    2121:2121:boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    2124:2124:int hashKey(java.lang.Object) -> hashKey
    2127:2127:java.lang.Object getKey(com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry) -> getKey
    2130:2130:com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry getNext(com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry) -> getNext
    2133:2133:int getHash(com.google.inject.internal.CustomConcurrentHashMap$SimpleInternalEntry) -> getHash
    2138:2138:void setInternals(com.google.inject.internal.CustomConcurrentHashMap$Internals) -> setInternals
    2100:2100:int getHash(java.lang.Object) -> getHash
    2100:2100:java.lang.Object getNext(java.lang.Object) -> getNext
    2100:2100:java.lang.Object getKey(java.lang.Object) -> getKey
    2100:2100:java.lang.Object getValue(java.lang.Object) -> getValue
    2100:2100:void setValue(java.lang.Object,java.lang.Object) -> setValue
    2100:2100:java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    2100:2100:java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
com.google.inject.internal.CustomConcurrentHashMap$Strategy -> com.google.inject.internal.CustomConcurrentHashMap$Strategy:
    java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
    java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    void setValue(java.lang.Object,java.lang.Object) -> setValue
    java.lang.Object getValue(java.lang.Object) -> getValue
    boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    int hashKey(java.lang.Object) -> hashKey
    java.lang.Object getKey(java.lang.Object) -> getKey
    java.lang.Object getNext(java.lang.Object) -> getNext
    int getHash(java.lang.Object) -> getHash
    void setInternals(com.google.inject.internal.CustomConcurrentHashMap$Internals) -> setInternals
com.google.inject.internal.ErrorHandler -> com.google.inject.internal.ErrorHandler:
    void handle(java.lang.Object,com.google.inject.internal.Errors) -> handle
    void handle(com.google.inject.spi.Message) -> handle
com.google.inject.internal.Errors -> com.google.inject.internal.Errors:
    com.google.inject.internal.Errors root -> root
    com.google.inject.internal.Errors parent -> parent
    java.lang.Object source -> source
    java.util.List errors -> errors
    java.lang.String CONSTRUCTOR_RULES -> CONSTRUCTOR_RULES
    java.util.Collection converters -> converters
    105:105:com.google.inject.internal.Errors withSource(java.lang.Object) -> withSource
    124:124:com.google.inject.internal.Errors missingImplementation(com.google.inject.Key) -> missingImplementation
    129:129:com.google.inject.internal.Errors converterReturnedNull(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.internal.MatcherAndConverter) -> converterReturnedNull
    136:136:com.google.inject.internal.Errors conversionTypeError(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.internal.MatcherAndConverter,java.lang.Object) -> conversionTypeError
    144:144:com.google.inject.internal.Errors conversionError(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.internal.MatcherAndConverter,java.lang.RuntimeException) -> conversionError
    152:152:com.google.inject.internal.Errors ambiguousTypeConversion(java.lang.String,java.lang.Object,com.google.inject.TypeLiteral,com.google.inject.internal.MatcherAndConverter,com.google.inject.internal.MatcherAndConverter) -> ambiguousTypeConversion
    160:160:com.google.inject.internal.Errors bindingToProvider() -> bindingToProvider
    165:165:com.google.inject.internal.Errors subtypeNotProvided(java.lang.Class,java.lang.Class) -> subtypeNotProvided
    169:169:com.google.inject.internal.Errors notASubtype(java.lang.Class,java.lang.Class) -> notASubtype
    173:173:com.google.inject.internal.Errors recursiveImplementationType() -> recursiveImplementationType
    177:177:com.google.inject.internal.Errors recursiveProviderType() -> recursiveProviderType
    181:181:com.google.inject.internal.Errors missingRuntimeRetention(java.lang.Object) -> missingRuntimeRetention
    186:186:com.google.inject.internal.Errors missingScopeAnnotation() -> missingScopeAnnotation
    190:190:com.google.inject.internal.Errors optionalConstructor(java.lang.reflect.Constructor) -> optionalConstructor
    195:195:com.google.inject.internal.Errors cannotBindToGuiceType(java.lang.String) -> cannotBindToGuiceType
    199:199:com.google.inject.internal.Errors scopeNotFound(java.lang.Class) -> scopeNotFound
    204:204:com.google.inject.internal.Errors scopeAnnotationOnAbstractType(java.lang.Class,java.lang.Class,java.lang.Object) -> scopeAnnotationOnAbstractType
    209:209:com.google.inject.internal.Errors misplacedBindingAnnotation(java.lang.reflect.Member,java.lang.annotation.Annotation) -> misplacedBindingAnnotation
    218:218:com.google.inject.internal.Errors missingConstructor(java.lang.Class) -> missingConstructor
    223:223:com.google.inject.internal.Errors tooManyConstructors(java.lang.Class) -> tooManyConstructors
    229:229:com.google.inject.internal.Errors duplicateScopes(com.google.inject.Scope,java.lang.Class,com.google.inject.Scope) -> duplicateScopes
    234:234:com.google.inject.internal.Errors voidProviderMethod() -> voidProviderMethod
    238:238:com.google.inject.internal.Errors missingConstantValues() -> missingConstantValues
    242:242:com.google.inject.internal.Errors cannotInjectInnerClass(java.lang.Class) -> cannotInjectInnerClass
    248:248:com.google.inject.internal.Errors duplicateBindingAnnotations(java.lang.reflect.Member,java.lang.Class,java.lang.Class) -> duplicateBindingAnnotations
    254:254:com.google.inject.internal.Errors duplicateScopeAnnotations(java.lang.Class,java.lang.Class) -> duplicateScopeAnnotations
    258:258:com.google.inject.internal.Errors recursiveBinding() -> recursiveBinding
    262:262:com.google.inject.internal.Errors bindingAlreadySet(com.google.inject.Key,java.lang.Object) -> bindingAlreadySet
    266:266:com.google.inject.internal.Errors childBindingAlreadySet(com.google.inject.Key) -> childBindingAlreadySet
    270:270:com.google.inject.internal.Errors errorInjectingMethod(java.lang.Throwable) -> errorInjectingMethod
    275:275:com.google.inject.internal.Errors errorNotifyingTypeListener(com.google.inject.spi.TypeListenerBinding,com.google.inject.TypeLiteral,java.lang.Throwable) -> errorNotifyingTypeListener
    282:282:com.google.inject.internal.Errors errorInjectingConstructor(java.lang.Throwable) -> errorInjectingConstructor
    286:286:com.google.inject.internal.Errors errorInProvider(java.lang.RuntimeException) -> errorInProvider
    291:291:com.google.inject.internal.Errors errorInUserInjector(com.google.inject.MembersInjector,com.google.inject.TypeLiteral,java.lang.RuntimeException) -> errorInUserInjector
    297:297:com.google.inject.internal.Errors errorNotifyingInjectionListener(com.google.inject.spi.InjectionListener,com.google.inject.TypeLiteral,java.lang.RuntimeException) -> errorNotifyingInjectionListener
    302:303:void exposedButNotBound(com.google.inject.Key) -> exposedButNotBound
    306:313:java.util.Collection getMessagesFromThrowable(java.lang.Throwable) -> getMessagesFromThrowable
    318:323:com.google.inject.internal.Errors errorInUserCode(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> errorInUserCode
    328:328:com.google.inject.internal.Errors cannotInjectRawProvider() -> cannotInjectRawProvider
    332:332:com.google.inject.internal.Errors cannotInjectRawMembersInjector() -> cannotInjectRawMembersInjector
    336:336:com.google.inject.internal.Errors cannotInjectTypeLiteralOf(java.lang.reflect.Type) -> cannotInjectTypeLiteralOf
    340:340:com.google.inject.internal.Errors cannotInjectRawTypeLiteral() -> cannotInjectRawTypeLiteral
    344:344:com.google.inject.internal.Errors cannotSatisfyCircularDependency(java.lang.Class) -> cannotSatisfyCircularDependency
    350:354:void throwCreationExceptionIfErrorsExist() -> throwCreationExceptionIfErrorsExist
    358:362:void throwConfigurationExceptionIfErrorsExist() -> throwConfigurationExceptionIfErrorsExist
    366:370:void throwProvisionExceptionIfErrorsExist() -> throwProvisionExceptionIfErrorsExist
    374:377:com.google.inject.spi.Message merge(com.google.inject.spi.Message) -> merge
    381:384:com.google.inject.internal.Errors merge(java.util.Collection) -> merge
    388:393:com.google.inject.internal.Errors merge(com.google.inject.internal.Errors) -> merge
    397:403:java.util.List getSources() -> getSources
    407:411:void throwIfNewErrors(int) -> throwIfNewErrors
    415:415:com.google.inject.internal.ErrorsException toException() -> toException
    419:419:boolean hasErrors() -> hasErrors
    423:423:com.google.inject.internal.Errors addMessage(java.lang.String,java.lang.Object[]) -> addMessage
    427:429:com.google.inject.internal.Errors addMessage(java.lang.Throwable,java.lang.String,java.lang.Object[]) -> addMessage
    433:437:com.google.inject.internal.Errors addMessage(com.google.inject.spi.Message) -> addMessage
    441:444:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
    448:459:java.util.List getMessages() -> getMessages
    464:493:java.lang.String format(java.lang.String,java.util.Collection) -> format
    502:513:java.lang.Object checkForNull(java.lang.Object,java.lang.Object,com.google.inject.spi.Dependency) -> checkForNull
    521:535:java.lang.Throwable getOnlyCause(java.util.Collection) -> getOnlyCause
    539:539:int size() -> size
    584:589:java.lang.Object convert(java.lang.Object) -> convert
    593:621:void formatSource(java.util.Formatter,java.lang.Object) -> formatSource
    625:641:void formatInjectionPoint(java.util.Formatter,com.google.inject.spi.Dependency,com.google.inject.spi.InjectionPoint) -> formatInjectionPoint
com.google.inject.internal.Errors$1 -> com.google.inject.internal.Errors$1:
    com.google.inject.internal.Errors this$0 -> this$0
    455:455:int compare(com.google.inject.spi.Message,com.google.inject.spi.Message) -> compare
    453:453:int compare(java.lang.Object,java.lang.Object) -> compare
com.google.inject.internal.Errors$2 -> com.google.inject.internal.Errors$2:
    564:564:java.lang.String toString(java.lang.Class) -> toString
    562:562:java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.Errors$3 -> com.google.inject.internal.Errors$3:
    569:569:java.lang.String toString(java.lang.reflect.Member) -> toString
    567:567:java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.Errors$4 -> com.google.inject.internal.Errors$4:
    574:578:java.lang.String toString(com.google.inject.Key) -> toString
    572:572:java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.Errors$Converter -> com.google.inject.internal.Errors$Converter:
    java.lang.Class type -> type
    551:551:boolean appliesTo(java.lang.Object) -> appliesTo
    555:555:java.lang.String convert(java.lang.Object) -> convert
    java.lang.String toString(java.lang.Object) -> toString
com.google.inject.internal.ErrorsException -> com.google.inject.internal.ErrorsException:
    com.google.inject.internal.Errors errors -> errors
    36:36:com.google.inject.internal.Errors getErrors() -> getErrors
com.google.inject.internal.ExpirationTimer -> com.google.inject.internal.ExpirationTimer:
    java.util.Timer instance -> instance
com.google.inject.internal.ExposedBindingImpl -> com.google.inject.internal.ExposedBindingImpl:
    com.google.inject.spi.PrivateElements privateElements -> privateElements
    45:45:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    49:49:java.util.Set getDependencies() -> getDependencies
    53:53:com.google.inject.spi.PrivateElements getPrivateElements() -> getPrivateElements
    57:57:com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    61:61:com.google.inject.internal.ExposedBindingImpl withKey(com.google.inject.Key) -> withKey
    65:65:java.lang.String toString() -> toString
    73:73:void applyTo(com.google.inject.Binder) -> applyTo
    28:28:com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
com.google.inject.internal.ExposureBuilder -> com.google.inject.internal.ExposureBuilder:
    com.google.inject.Binder binder -> binder
    java.lang.Object source -> source
    com.google.inject.Key key -> key
    39:42:void checkNotAnnotated() -> checkNotAnnotated
    45:48:void annotatedWith(java.lang.Class) -> annotatedWith
    51:54:void annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    57:57:com.google.inject.Key getKey() -> getKey
    61:61:java.lang.Object getSource() -> getSource
    65:65:java.lang.String toString() -> toString
com.google.inject.internal.FailableCache -> com.google.inject.internal.FailableCache:
    java.util.Map delegate -> delegate
    java.lang.Object create(java.lang.Object,com.google.inject.internal.Errors) -> create
    46:53:java.lang.Object get(java.lang.Object,com.google.inject.internal.Errors) -> get
com.google.inject.internal.FailableCache$1 -> com.google.inject.internal.FailableCache$1:
    com.google.inject.internal.FailableCache this$0 -> this$0
    32:39:java.lang.Object apply(java.lang.Object) -> apply
com.google.inject.internal.FinalizablePhantomReference -> com.google.inject.internal.FinalizablePhantomReference:
com.google.inject.internal.FinalizableReference -> com.google.inject.internal.FinalizableReference:
    void finalizeReferent() -> finalizeReferent
com.google.inject.internal.FinalizableReferenceQueue -> com.google.inject.internal.FinalizableReferenceQueue:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZER_CLASS_NAME -> FINALIZER_CLASS_NAME
    java.lang.reflect.Method startFinalizer -> startFinalizer
    java.lang.ref.ReferenceQueue queue -> queue
    boolean threadStarted -> threadStarted
    148:165:void cleanUp() -> cleanUp
    174:181:java.lang.Class loadFinalizer(com.google.inject.internal.FinalizableReferenceQueue$FinalizerLoader[]) -> loadFinalizer
    308:310:java.lang.reflect.Method getStartFinalizer(java.lang.Class) -> getStartFinalizer
    41:41:java.util.logging.Logger access$000() -> access$000
com.google.inject.internal.FinalizableReferenceQueue$DecoupledLoader -> com.google.inject.internal.FinalizableReferenceQueue$DecoupledLoader:
    java.lang.String LOADING_ERROR -> LOADING_ERROR
    253:257:java.lang.Class loadFinalizer() -> loadFinalizer
    266:279:java.net.URL getBaseUrl() -> getBaseUrl
    284:284:java.net.URLClassLoader newLoader(java.net.URL) -> newLoader
com.google.inject.internal.FinalizableReferenceQueue$DirectLoader -> com.google.inject.internal.FinalizableReferenceQueue$DirectLoader:
    296:298:java.lang.Class loadFinalizer() -> loadFinalizer
com.google.inject.internal.FinalizableReferenceQueue$FinalizerLoader -> com.google.inject.internal.FinalizableReferenceQueue$FinalizerLoader:
    java.lang.Class loadFinalizer() -> loadFinalizer
com.google.inject.internal.FinalizableReferenceQueue$SystemLoader -> com.google.inject.internal.FinalizableReferenceQueue$SystemLoader:
    206:219:java.lang.Class loadFinalizer() -> loadFinalizer
com.google.inject.internal.FinalizableSoftReference -> com.google.inject.internal.FinalizableSoftReference:
com.google.inject.internal.FinalizableWeakReference -> com.google.inject.internal.FinalizableWeakReference:
com.google.inject.internal.Finalizer -> com.google.inject.internal.Finalizer:
    java.util.logging.Logger logger -> logger
    java.lang.String FINALIZABLE_REFERENCE -> FINALIZABLE_REFERENCE
    java.lang.ref.WeakReference finalizableReferenceClassReference -> finalizableReferenceClassReference
    java.lang.ref.PhantomReference frqReference -> frqReference
    java.lang.ref.ReferenceQueue queue -> queue
    76:83:java.lang.ref.ReferenceQueue startFinalizer(java.lang.Class,java.lang.Object) -> startFinalizer
    114:118:void run() -> run
    124:151:void cleanUp(java.lang.ref.Reference) -> cleanUp
    157:173:java.lang.reflect.Method getFinalizeReferentMethod() -> getFinalizeReferentMethod
com.google.inject.internal.Finalizer$1 -> com.google.inject.internal.Finalizer$1:
com.google.inject.internal.Finalizer$ShutDown -> com.google.inject.internal.Finalizer$ShutDown:
com.google.inject.internal.Function -> com.google.inject.internal.Function:
    java.lang.Object apply(java.lang.Object) -> apply
    boolean equals(java.lang.Object) -> equals
com.google.inject.internal.Hashing -> com.google.inject.internal.Hashing:
    int MAX_TABLE_SIZE -> MAX_TABLE_SIZE
    int CUTOFF -> CUTOFF
    34:35:int smear(int) -> smear
    46:52:int chooseTableSize(int) -> chooseTableSize
com.google.inject.internal.ImmutableCollection -> com.google.inject.internal.ImmutableCollection:
    com.google.inject.internal.ImmutableCollection EMPTY_IMMUTABLE_COLLECTION -> EMPTY_IMMUTABLE_COLLECTION
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    com.google.inject.internal.UnmodifiableIterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    59:60:java.lang.Object[] toArray() -> toArray
    64:81:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    85:93:boolean contains(java.lang.Object) -> contains
    97:102:boolean containsAll(java.util.Collection) -> containsAll
    106:106:boolean isEmpty() -> isEmpty
    110:120:java.lang.String toString() -> toString
    129:129:boolean add(java.lang.Object) -> add
    138:138:boolean remove(java.lang.Object) -> remove
    147:147:boolean addAll(java.util.Collection) -> addAll
    156:156:boolean removeAll(java.util.Collection) -> removeAll
    165:165:boolean retainAll(java.util.Collection) -> retainAll
    174:174:void clear() -> clear
    257:257:java.lang.Object writeReplace() -> writeReplace
    33:33:java.util.Iterator iterator() -> iterator
    34:34:com.google.inject.internal.UnmodifiableIterator access$100() -> access$100
    34:34:java.lang.Object[] access$200() -> access$200
com.google.inject.internal.ImmutableCollection$1 -> com.google.inject.internal.ImmutableCollection$1:
    44:44:boolean hasNext() -> hasNext
    47:47:java.lang.Object next() -> next
com.google.inject.internal.ImmutableCollection$ArrayImmutableCollection -> com.google.inject.internal.ImmutableCollection$ArrayImmutableCollection:
    java.lang.Object[] elements -> elements
    216:216:int size() -> size
    220:220:boolean isEmpty() -> isEmpty
    224:224:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    207:207:java.util.Iterator iterator() -> iterator
    207:207:java.lang.Object[] access$300(com.google.inject.internal.ImmutableCollection$ArrayImmutableCollection) -> access$300
com.google.inject.internal.ImmutableCollection$ArrayImmutableCollection$1 -> com.google.inject.internal.ImmutableCollection$ArrayImmutableCollection$1:
    int i -> i
    com.google.inject.internal.ImmutableCollection$ArrayImmutableCollection this$0 -> this$0
    227:227:boolean hasNext() -> hasNext
    230:233:java.lang.Object next() -> next
com.google.inject.internal.ImmutableCollection$EmptyImmutableCollection -> com.google.inject.internal.ImmutableCollection$EmptyImmutableCollection:
    180:180:int size() -> size
    184:184:boolean isEmpty() -> isEmpty
    188:188:boolean contains(java.lang.Object) -> contains
    192:192:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    196:196:java.lang.Object[] toArray() -> toArray
    200:203:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    177:177:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableCollection$SerializedForm -> com.google.inject.internal.ImmutableCollection$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    249:249:java.lang.Object readResolve() -> readResolve
com.google.inject.internal.ImmutableEntry -> com.google.inject.internal.ImmutableEntry:
    java.lang.Object key -> key
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    35:35:java.lang.Object getKey() -> getKey
    39:39:java.lang.Object getValue() -> getValue
com.google.inject.internal.ImmutableList -> com.google.inject.internal.ImmutableList:
    com.google.inject.internal.ImmutableList EMPTY_IMMUTABLE_LIST -> EMPTY_IMMUTABLE_LIST
    64:64:com.google.inject.internal.ImmutableList of() -> of
    77:77:com.google.inject.internal.ImmutableList of(java.lang.Object) -> of
    88:88:com.google.inject.internal.ImmutableList of(java.lang.Object,java.lang.Object) -> of
    97:97:com.google.inject.internal.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object) -> of
    106:106:com.google.inject.internal.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    115:115:com.google.inject.internal.ImmutableList of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    124:124:com.google.inject.internal.ImmutableList of(java.lang.Object[]) -> of
    145:158:com.google.inject.internal.ImmutableList copyOf(java.lang.Iterable) -> copyOf
    168:168:com.google.inject.internal.ImmutableList copyOf(java.util.Iterator) -> copyOf
    173:173:com.google.inject.internal.ImmutableList copyOfInternal(java.util.ArrayList) -> copyOfInternal
    185:190:java.lang.Object[] nullChecked(java.lang.Object[]) -> nullChecked
    195:196:com.google.inject.internal.ImmutableList copyOfInternal(java.util.Collection) -> copyOfInternal
    com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    int indexOf(java.lang.Object) -> indexOf
    int lastIndexOf(java.lang.Object) -> lastIndexOf
    com.google.inject.internal.ImmutableList subList(int,int) -> subList
    229:229:boolean addAll(int,java.util.Collection) -> addAll
    238:238:java.lang.Object set(int,java.lang.Object) -> set
    247:247:void add(int,java.lang.Object) -> add
    256:256:java.lang.Object remove(int) -> remove
    533:541:java.lang.Object[] copyIntoArray(java.lang.Object[]) -> copyIntoArray
    546:569:com.google.inject.internal.ImmutableList createFromIterable(java.lang.Iterable,int) -> createFromIterable
    574:577:java.lang.Object[] copyOf(java.lang.Object[],int) -> copyOf
    597:597:void readObject(java.io.ObjectInputStream) -> readObject
    601:601:java.lang.Object writeReplace() -> writeReplace
    609:609:com.google.inject.internal.ImmutableList$Builder builder() -> builder
    50:50:java.util.Iterator iterator() -> iterator
    50:50:java.util.List subList(int,int) -> subList
com.google.inject.internal.ImmutableList$1 -> com.google.inject.internal.ImmutableList$1:
com.google.inject.internal.ImmutableList$Builder -> com.google.inject.internal.ImmutableList$Builder:
    java.util.ArrayList contents -> contents
    645:647:com.google.inject.internal.ImmutableList$Builder add(java.lang.Object) -> add
    658:667:com.google.inject.internal.ImmutableList$Builder addAll(java.lang.Iterable) -> addAll
    675:675:com.google.inject.internal.ImmutableList build() -> build
com.google.inject.internal.ImmutableList$EmptyImmutableList -> com.google.inject.internal.ImmutableList$EmptyImmutableList:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    261:261:int size() -> size
    265:265:boolean isEmpty() -> isEmpty
    269:269:boolean contains(java.lang.Object) -> contains
    273:273:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    279:279:java.lang.Object[] toArray() -> toArray
    283:286:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    291:292:java.lang.Object get(int) -> get
    296:296:int indexOf(java.lang.Object) -> indexOf
    300:300:int lastIndexOf(java.lang.Object) -> lastIndexOf
    304:305:com.google.inject.internal.ImmutableList subList(int,int) -> subList
    309:309:java.util.ListIterator listIterator() -> listIterator
    313:314:java.util.ListIterator listIterator(int) -> listIterator
    318:318:boolean containsAll(java.util.Collection) -> containsAll
    322:326:boolean equals(java.lang.Object) -> equals
    330:330:int hashCode() -> hashCode
    334:334:java.lang.String toString() -> toString
    259:259:java.util.List subList(int,int) -> subList
    259:259:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableList$RegularImmutableList -> com.google.inject.internal.ImmutableList$RegularImmutableList:
    int offset -> offset
    int size -> size
    java.lang.Object[] array -> array
    354:354:int size() -> size
    358:358:boolean isEmpty() -> isEmpty
    362:362:boolean contains(java.lang.Object) -> contains
    368:368:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    372:374:java.lang.Object[] toArray() -> toArray
    378:384:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    390:391:java.lang.Object get(int) -> get
    395:402:int indexOf(java.lang.Object) -> indexOf
    406:413:int lastIndexOf(java.lang.Object) -> lastIndexOf
    417:418:com.google.inject.internal.ImmutableList subList(int,int) -> subList
    425:425:java.util.ListIterator listIterator() -> listIterator
    429:431:java.util.ListIterator listIterator(int) -> listIterator
    482:509:boolean equals(java.lang.Object) -> equals
    515:519:int hashCode() -> hashCode
    523:528:java.lang.String toString() -> toString
    338:338:java.util.List subList(int,int) -> subList
    338:338:java.util.Iterator iterator() -> iterator
    338:338:int access$300(com.google.inject.internal.ImmutableList$RegularImmutableList) -> access$300
com.google.inject.internal.ImmutableList$RegularImmutableList$1 -> com.google.inject.internal.ImmutableList$RegularImmutableList$1:
    int index -> index
    int val$start -> val$start
    com.google.inject.internal.ImmutableList$RegularImmutableList this$0 -> this$0
    435:435:boolean hasNext() -> hasNext
    438:438:boolean hasPrevious() -> hasPrevious
    442:442:int nextIndex() -> nextIndex
    445:445:int previousIndex() -> previousIndex
    451:456:java.lang.Object next() -> next
    461:466:java.lang.Object previous() -> previous
    470:470:void set(java.lang.Object) -> set
    473:473:void add(java.lang.Object) -> add
    476:476:void remove() -> remove
com.google.inject.internal.ImmutableList$SerializedForm -> com.google.inject.internal.ImmutableList$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    590:590:java.lang.Object readResolve() -> readResolve
com.google.inject.internal.ImmutableMap -> com.google.inject.internal.ImmutableMap:
    com.google.inject.internal.ImmutableMap EMPTY_IMMUTABLE_MAP -> EMPTY_IMMUTABLE_MAP
    62:62:com.google.inject.internal.ImmutableMap of() -> of
    72:72:com.google.inject.internal.ImmutableMap of(java.lang.Object,java.lang.Object) -> of
    82:82:com.google.inject.internal.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    92:92:com.google.inject.internal.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    103:103:com.google.inject.internal.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    114:114:com.google.inject.internal.ImmutableMap of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object) -> of
    125:125:com.google.inject.internal.ImmutableMap$Builder builder() -> builder
    133:133:java.util.Map$Entry entryOf(java.lang.Object,java.lang.Object) -> entryOf
    227:256:com.google.inject.internal.ImmutableMap copyOf(java.util.Map) -> copyOf
    268:268:java.lang.Object put(java.lang.Object,java.lang.Object) -> put
    277:277:java.lang.Object remove(java.lang.Object) -> remove
    286:286:java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object) -> putIfAbsent
    295:295:boolean remove(java.lang.Object,java.lang.Object) -> remove
    304:304:boolean replace(java.lang.Object,java.lang.Object,java.lang.Object) -> replace
    313:313:java.lang.Object replace(java.lang.Object,java.lang.Object) -> replace
    322:322:void putAll(java.util.Map) -> putAll
    331:331:void clear() -> clear
    boolean containsKey(java.lang.Object) -> containsKey
    boolean containsValue(java.lang.Object) -> containsValue
    java.lang.Object get(java.lang.Object) -> get
    com.google.inject.internal.ImmutableSet entrySet() -> entrySet
    com.google.inject.internal.ImmutableSet keySet() -> keySet
    com.google.inject.internal.ImmutableCollection values() -> values
    362:369:boolean equals(java.lang.Object) -> equals
    375:375:int hashCode() -> hashCode
    379:385:java.lang.String toString() -> toString
    777:777:java.lang.Object writeReplace() -> writeReplace
    46:46:java.util.Set entrySet() -> entrySet
    46:46:java.util.Collection values() -> values
    46:46:java.util.Set keySet() -> keySet
    47:47:java.util.Map$Entry access$300(java.lang.Object,java.lang.Object) -> access$300
com.google.inject.internal.ImmutableMap$1 -> com.google.inject.internal.ImmutableMap$1:
com.google.inject.internal.ImmutableMap$Builder -> com.google.inject.internal.ImmutableMap$Builder:
    java.util.List entries -> entries
    168:169:com.google.inject.internal.ImmutableMap$Builder put(java.lang.Object,java.lang.Object) -> put
    179:182:com.google.inject.internal.ImmutableMap$Builder putAll(java.util.Map) -> putAll
    194:194:com.google.inject.internal.ImmutableMap build() -> build
    199:208:com.google.inject.internal.ImmutableMap fromEntryList(java.util.List) -> fromEntryList
com.google.inject.internal.ImmutableMap$EmptyImmutableMap -> com.google.inject.internal.ImmutableMap$EmptyImmutableMap:
    392:392:java.lang.Object get(java.lang.Object) -> get
    396:396:int size() -> size
    400:400:boolean isEmpty() -> isEmpty
    404:404:boolean containsKey(java.lang.Object) -> containsKey
    408:408:boolean containsValue(java.lang.Object) -> containsValue
    412:412:com.google.inject.internal.ImmutableSet entrySet() -> entrySet
    416:416:com.google.inject.internal.ImmutableSet keySet() -> keySet
    420:420:com.google.inject.internal.ImmutableCollection values() -> values
    424:428:boolean equals(java.lang.Object) -> equals
    432:432:int hashCode() -> hashCode
    436:436:java.lang.String toString() -> toString
    388:388:java.util.Set entrySet() -> entrySet
    388:388:java.util.Collection values() -> values
    388:388:java.util.Set keySet() -> keySet
com.google.inject.internal.ImmutableMap$RegularImmutableMap -> com.google.inject.internal.ImmutableMap$RegularImmutableMap:
    java.util.Map$Entry[] entries -> entries
    java.lang.Object[] table -> table
    int mask -> mask
    int keySetHashCode -> keySetHashCode
    com.google.inject.internal.ImmutableSet entrySet -> entrySet
    com.google.inject.internal.ImmutableSet keySet -> keySet
    com.google.inject.internal.ImmutableCollection values -> values
    599:602:java.lang.Object get(java.lang.Object) -> get
    618:618:int size() -> size
    622:622:boolean isEmpty() -> isEmpty
    626:626:boolean containsKey(java.lang.Object) -> containsKey
    630:638:boolean containsValue(java.lang.Object) -> containsValue
    649:650:com.google.inject.internal.ImmutableSet entrySet() -> entrySet
    674:675:com.google.inject.internal.ImmutableSet keySet() -> keySet
    699:700:com.google.inject.internal.ImmutableCollection values() -> values
    738:744:java.lang.String toString() -> toString
    559:559:java.util.Set entrySet() -> entrySet
    559:559:java.util.Collection values() -> values
    559:559:java.util.Set keySet() -> keySet
    559:559:java.util.Map$Entry[] access$500(com.google.inject.internal.ImmutableMap$RegularImmutableMap) -> access$500
    559:559:int access$600(com.google.inject.internal.ImmutableMap$RegularImmutableMap) -> access$600
com.google.inject.internal.ImmutableMap$RegularImmutableMap$EntrySet -> com.google.inject.internal.ImmutableMap$RegularImmutableMap$EntrySet:
    com.google.inject.internal.ImmutableMap$RegularImmutableMap map -> map
    662:667:boolean contains(java.lang.Object) -> contains
com.google.inject.internal.ImmutableMap$RegularImmutableMap$KeySet -> com.google.inject.internal.ImmutableMap$RegularImmutableMap$KeySet:
    com.google.inject.internal.ImmutableMap$RegularImmutableMap map -> map
    688:688:java.lang.Object transform(java.util.Map$Entry) -> transform
    692:692:boolean contains(java.lang.Object) -> contains
    678:678:java.lang.Object transform(java.lang.Object) -> transform
com.google.inject.internal.ImmutableMap$RegularImmutableMap$Values -> com.google.inject.internal.ImmutableMap$RegularImmutableMap$Values:
    com.google.inject.internal.ImmutableMap$RegularImmutableMap map -> map
    711:711:int size() -> size
    715:715:boolean isEmpty() -> isEmpty
    719:729:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    733:733:boolean contains(java.lang.Object) -> contains
    703:703:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableMap$RegularImmutableMap$Values$1 -> com.google.inject.internal.ImmutableMap$RegularImmutableMap$Values$1:
    int index -> index
    com.google.inject.internal.ImmutableMap$RegularImmutableMap$Values this$0 -> this$0
    722:722:java.lang.Object computeNext() -> computeNext
com.google.inject.internal.ImmutableMap$SerializedForm -> com.google.inject.internal.ImmutableMap$SerializedForm:
    java.lang.Object[] keys -> keys
    java.lang.Object[] values -> values
    long serialVersionUID -> serialVersionUID
    767:771:java.lang.Object readResolve() -> readResolve
com.google.inject.internal.ImmutableMap$SingletonImmutableMap -> com.google.inject.internal.ImmutableMap$SingletonImmutableMap:
    java.lang.Object singleKey -> singleKey
    java.lang.Object singleValue -> singleValue
    java.util.Map$Entry entry -> entry
    com.google.inject.internal.ImmutableSet entrySet -> entrySet
    com.google.inject.internal.ImmutableSet keySet -> keySet
    com.google.inject.internal.ImmutableCollection values -> values
    458:459:java.util.Map$Entry entry() -> entry
    464:464:java.lang.Object get(java.lang.Object) -> get
    468:468:int size() -> size
    472:472:boolean isEmpty() -> isEmpty
    476:476:boolean containsKey(java.lang.Object) -> containsKey
    480:480:boolean containsValue(java.lang.Object) -> containsValue
    486:487:com.google.inject.internal.ImmutableSet entrySet() -> entrySet
    493:494:com.google.inject.internal.ImmutableSet keySet() -> keySet
    500:501:com.google.inject.internal.ImmutableCollection values() -> values
    529:541:boolean equals(java.lang.Object) -> equals
    545:545:int hashCode() -> hashCode
    549:549:java.lang.String toString() -> toString
    440:440:java.util.Set entrySet() -> entrySet
    440:440:java.util.Collection values() -> values
    440:440:java.util.Set keySet() -> keySet
com.google.inject.internal.ImmutableMap$SingletonImmutableMap$Values -> com.google.inject.internal.ImmutableMap$SingletonImmutableMap$Values:
    java.lang.Object singleValue -> singleValue
    512:512:boolean contains(java.lang.Object) -> contains
    516:516:boolean isEmpty() -> isEmpty
    520:520:int size() -> size
    524:524:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    504:504:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableSet -> com.google.inject.internal.ImmutableSet:
    com.google.inject.internal.ImmutableSet EMPTY_IMMUTABLE_SET -> EMPTY_IMMUTABLE_SET
    73:73:com.google.inject.internal.ImmutableSet of() -> of
    83:83:com.google.inject.internal.ImmutableSet of(java.lang.Object) -> of
    95:101:com.google.inject.internal.ImmutableSet of(java.lang.Object[]) -> of
    125:130:com.google.inject.internal.ImmutableSet copyOf(java.lang.Iterable) -> copyOf
    141:142:com.google.inject.internal.ImmutableSet copyOf(java.util.Iterator) -> copyOf
    149:156:com.google.inject.internal.ImmutableSet copyOfInternal(java.util.Collection) -> copyOfInternal
    164:164:boolean isHashCodeFast() -> isHashCodeFast
    168:177:boolean equals(java.lang.Object) -> equals
    181:185:int hashCode() -> hashCode
    com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    193:202:java.lang.String toString() -> toString
    332:357:com.google.inject.internal.ImmutableSet create(java.lang.Iterable,int) -> create
    541:541:java.lang.Object writeReplace() -> writeReplace
    549:549:com.google.inject.internal.ImmutableSet$Builder builder() -> builder
    59:59:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableSet$1 -> com.google.inject.internal.ImmutableSet$1:
com.google.inject.internal.ImmutableSet$ArrayImmutableSet -> com.google.inject.internal.ImmutableSet$ArrayImmutableSet:
    java.lang.Object[] elements -> elements
    370:370:int size() -> size
    374:374:boolean isEmpty() -> isEmpty
    383:383:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    387:389:java.lang.Object[] toArray() -> toArray
    393:400:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    404:418:boolean containsAll(java.util.Collection) -> containsAll
    362:362:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableSet$Builder -> com.google.inject.internal.ImmutableSet$Builder:
    java.util.ArrayList contents -> contents
    588:590:com.google.inject.internal.ImmutableSet$Builder add(java.lang.Object) -> add
    602:607:com.google.inject.internal.ImmutableSet$Builder add(java.lang.Object[]) -> add
    619:628:com.google.inject.internal.ImmutableSet$Builder addAll(java.lang.Iterable) -> addAll
    640:645:com.google.inject.internal.ImmutableSet$Builder addAll(java.util.Iterator) -> addAll
    653:653:com.google.inject.internal.ImmutableSet build() -> build
com.google.inject.internal.ImmutableSet$EmptyImmutableSet -> com.google.inject.internal.ImmutableSet$EmptyImmutableSet:
    java.lang.Object[] EMPTY_ARRAY -> EMPTY_ARRAY
    207:207:int size() -> size
    211:211:boolean isEmpty() -> isEmpty
    215:215:boolean contains(java.lang.Object) -> contains
    219:219:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    225:225:java.lang.Object[] toArray() -> toArray
    229:232:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    236:236:boolean containsAll(java.util.Collection) -> containsAll
    240:244:boolean equals(java.lang.Object) -> equals
    248:248:int hashCode() -> hashCode
    252:252:boolean isHashCodeFast() -> isHashCodeFast
    256:256:java.lang.String toString() -> toString
    205:205:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableSet$RegularImmutableSet -> com.google.inject.internal.ImmutableSet$RegularImmutableSet:
    java.lang.Object[] table -> table
    int mask -> mask
    int hashCode -> hashCode
    437:440:boolean contains(java.lang.Object) -> contains
    452:452:int hashCode() -> hashCode
    456:456:boolean isHashCodeFast() -> isHashCodeFast
com.google.inject.internal.ImmutableSet$SerializedForm -> com.google.inject.internal.ImmutableSet$SerializedForm:
    java.lang.Object[] elements -> elements
    long serialVersionUID -> serialVersionUID
    535:535:java.lang.Object readResolve() -> readResolve
com.google.inject.internal.ImmutableSet$SingletonImmutableSet -> com.google.inject.internal.ImmutableSet$SingletonImmutableSet:
    java.lang.Object element -> element
    int hashCode -> hashCode
    270:270:int size() -> size
    274:274:boolean isEmpty() -> isEmpty
    278:278:boolean contains(java.lang.Object) -> contains
    282:282:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    286:286:java.lang.Object[] toArray() -> toArray
    291:297:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    301:308:boolean equals(java.lang.Object) -> equals
    312:312:int hashCode() -> hashCode
    316:316:boolean isHashCodeFast() -> isHashCodeFast
    320:321:java.lang.String toString() -> toString
    260:260:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableSet$TransformedImmutableSet -> com.google.inject.internal.ImmutableSet$TransformedImmutableSet:
    java.lang.Object[] source -> source
    int hashCode -> hashCode
    java.lang.Object transform(java.lang.Object) -> transform
    473:473:int size() -> size
    477:477:boolean isEmpty() -> isEmpty
    481:491:com.google.inject.internal.UnmodifiableIterator iterator() -> iterator
    495:495:java.lang.Object[] toArray() -> toArray
    500:510:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    514:514:int hashCode() -> hashCode
    518:518:boolean isHashCodeFast() -> isHashCodeFast
    461:461:java.util.Iterator iterator() -> iterator
com.google.inject.internal.ImmutableSet$TransformedImmutableSet$1 -> com.google.inject.internal.ImmutableSet$TransformedImmutableSet$1:
    int index -> index
    com.google.inject.internal.ImmutableSet$TransformedImmutableSet this$0 -> this$0
    484:484:java.lang.Object computeNext() -> computeNext
com.google.inject.internal.InstanceBindingImpl -> com.google.inject.internal.InstanceBindingImpl:
    java.lang.Object instance -> instance
    com.google.inject.Provider provider -> provider
    com.google.inject.internal.ImmutableSet injectionPoints -> injectionPoints
    55:55:com.google.inject.Provider getProvider() -> getProvider
    59:59:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    63:63:java.lang.Object getInstance() -> getInstance
    67:67:java.util.Set getInjectionPoints() -> getInjectionPoints
    71:71:java.util.Set getDependencies() -> getDependencies
    77:77:com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    81:81:com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    86:87:void applyTo(com.google.inject.Binder) -> applyTo
    90:90:java.lang.String toString() -> toString
com.google.inject.internal.InternalContext -> com.google.inject.internal.InternalContext:
    java.util.Map constructionContexts -> constructionContexts
    com.google.inject.spi.Dependency dependency -> dependency
    35:41:com.google.inject.internal.ConstructionContext getConstructionContext(java.lang.Object) -> getConstructionContext
    45:45:com.google.inject.spi.Dependency getDependency() -> getDependency
    49:50:void setDependency(com.google.inject.spi.Dependency) -> setDependency
com.google.inject.internal.InternalFactory -> com.google.inject.internal.InternalFactory:
    java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
com.google.inject.internal.Iterables -> com.google.inject.internal.Iterables:
    39:39:java.lang.String toString(java.lang.Iterable) -> toString
    50:50:java.lang.Object getOnlyElement(java.lang.Iterable) -> getOnlyElement
    64:66:java.lang.Iterable concat(java.lang.Iterable,java.lang.Iterable) -> concat
    94:102:java.lang.Iterable concat(java.lang.Iterable) -> concat
    119:121:java.lang.Iterable transform(java.lang.Iterable,com.google.inject.internal.Function) -> transform
com.google.inject.internal.Iterables$1 -> com.google.inject.internal.Iterables$1:
    97:97:java.util.Iterator apply(java.lang.Iterable) -> apply
    95:95:java.lang.Object apply(java.lang.Object) -> apply
com.google.inject.internal.Iterables$2 -> com.google.inject.internal.Iterables$2:
    java.lang.Iterable val$iterators -> val$iterators
    104:104:java.util.Iterator iterator() -> iterator
com.google.inject.internal.Iterables$3 -> com.google.inject.internal.Iterables$3:
    java.lang.Iterable val$fromIterable -> val$fromIterable
    com.google.inject.internal.Function val$function -> val$function
    123:123:java.util.Iterator iterator() -> iterator
com.google.inject.internal.Iterables$IterableWithToString -> com.google.inject.internal.Iterables$IterableWithToString:
    132:132:java.lang.String toString() -> toString
com.google.inject.internal.Iterators -> com.google.inject.internal.Iterators:
    java.util.Iterator EMPTY_ITERATOR -> EMPTY_ITERATOR
    java.util.ListIterator EMPTY_LIST_ITERATOR -> EMPTY_LIST_ITERATOR
    53:53:com.google.inject.internal.UnmodifiableIterator emptyIterator() -> emptyIterator
    91:91:java.util.ListIterator emptyListIterator() -> emptyListIterator
    97:98:com.google.inject.internal.UnmodifiableIterator unmodifiableIterator(java.util.Iterator) -> unmodifiableIterator
    115:123:java.lang.String toString(java.util.Iterator) -> toString
    134:149:java.lang.Object getOnlyElement(java.util.Iterator) -> getOnlyElement
    163:164:java.util.Iterator concat(java.util.Iterator) -> concat
    201:203:java.util.Iterator transform(java.util.Iterator,com.google.inject.internal.Function) -> transform
    230:230:com.google.inject.internal.UnmodifiableIterator forArray(java.lang.Object[]) -> forArray
    263:271:com.google.inject.internal.UnmodifiableIterator forArray(java.lang.Object[],int,int) -> forArray
    290:290:com.google.inject.internal.UnmodifiableIterator singletonIterator(java.lang.Object) -> singletonIterator
    311:312:java.util.Enumeration asEnumeration(java.util.Iterator) -> asEnumeration
com.google.inject.internal.Iterators$1 -> com.google.inject.internal.Iterators$1:
    41:41:boolean hasNext() -> hasNext
    44:44:java.lang.Object next() -> next
com.google.inject.internal.Iterators$2 -> com.google.inject.internal.Iterators$2:
    59:59:boolean hasNext() -> hasNext
    62:62:boolean hasPrevious() -> hasPrevious
    65:65:int nextIndex() -> nextIndex
    68:68:int previousIndex() -> previousIndex
    71:71:java.lang.Object next() -> next
    74:74:java.lang.Object previous() -> previous
    77:77:void set(java.lang.Object) -> set
    80:80:void add(java.lang.Object) -> add
    83:83:void remove() -> remove
com.google.inject.internal.Iterators$3 -> com.google.inject.internal.Iterators$3:
    java.util.Iterator val$iterator -> val$iterator
    100:100:boolean hasNext() -> hasNext
    103:103:java.lang.Object next() -> next
com.google.inject.internal.Iterators$4 -> com.google.inject.internal.Iterators$4:
    java.util.Iterator current -> current
    java.util.Iterator removeFrom -> removeFrom
    java.util.Iterator val$inputs -> val$inputs
    169:172:boolean hasNext() -> hasNext
    175:179:java.lang.Object next() -> next
    182:186:void remove() -> remove
com.google.inject.internal.Iterators$5 -> com.google.inject.internal.Iterators$5:
    java.util.Iterator val$fromIterator -> val$fromIterator
    com.google.inject.internal.Function val$function -> val$function
    205:205:boolean hasNext() -> hasNext
    208:209:java.lang.Object next() -> next
    212:213:void remove() -> remove
com.google.inject.internal.Iterators$6 -> com.google.inject.internal.Iterators$6:
    int length -> length
    int i -> i
    java.lang.Object[] val$array -> val$array
    234:234:boolean hasNext() -> hasNext
    239:243:java.lang.Object next() -> next
com.google.inject.internal.Iterators$7 -> com.google.inject.internal.Iterators$7:
    int i -> i
    int val$offset -> val$offset
    int val$end -> val$end
    java.lang.Object[] val$array -> val$array
    274:274:boolean hasNext() -> hasNext
    277:280:java.lang.Object next() -> next
com.google.inject.internal.Iterators$8 -> com.google.inject.internal.Iterators$8:
    boolean done -> done
    java.lang.Object val$value -> val$value
    293:293:boolean hasNext() -> hasNext
    296:300:java.lang.Object next() -> next
com.google.inject.internal.Iterators$9 -> com.google.inject.internal.Iterators$9:
    java.util.Iterator val$iterator -> val$iterator
    314:314:boolean hasMoreElements() -> hasMoreElements
    317:317:java.lang.Object nextElement() -> nextElement
com.google.inject.internal.Join -> com.google.inject.internal.Join:
    57:57:java.lang.String join(java.lang.String,java.lang.Iterable) -> join
    76:76:java.lang.String join(java.lang.String,java.lang.Object[]) -> join
    96:97:java.lang.String join(java.lang.String,java.lang.Object,java.lang.Object[]) -> join
    116:118:java.lang.String join(java.lang.String,java.util.Iterator) -> join
    141:141:java.lang.String join(java.lang.String,java.lang.String,java.util.Map) -> join
    163:163:java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Iterable) -> join
    184:184:java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Object[]) -> join
    206:207:java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.Object,java.lang.Object[]) -> join
    231:244:java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.util.Iterator) -> join
    267:282:java.lang.Appendable join(java.lang.Appendable,java.lang.String,java.lang.String,java.util.Map) -> join
    288:291:void appendOneEntry(java.lang.Appendable,java.lang.String,java.util.Map$Entry) -> appendOneEntry
    295:296:void appendOneToken(java.lang.Appendable,java.lang.Object) -> appendOneToken
    299:299:java.lang.CharSequence toCharSequence(java.lang.Object) -> toCharSequence
com.google.inject.internal.Join$1 -> com.google.inject.internal.Join$1:
com.google.inject.internal.Join$JoinException -> com.google.inject.internal.Join$JoinException:
    long serialVersionUID -> serialVersionUID
com.google.inject.internal.LinkedBindingImpl -> com.google.inject.internal.LinkedBindingImpl:
    com.google.inject.Key targetKey -> targetKey
    42:42:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    46:46:com.google.inject.Key getLinkedKey() -> getLinkedKey
    50:50:com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    54:54:com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    58:59:void applyTo(com.google.inject.Binder) -> applyTo
    62:62:java.lang.String toString() -> toString
com.google.inject.internal.LinkedProviderBindingImpl -> com.google.inject.internal.LinkedProviderBindingImpl:
    com.google.inject.Key providerKey -> providerKey
    45:45:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    49:49:com.google.inject.Key getProviderKey() -> getProviderKey
    53:53:com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    57:57:com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    61:63:void applyTo(com.google.inject.Binder) -> applyTo
    66:66:java.lang.String toString() -> toString
com.google.inject.internal.Lists -> com.google.inject.internal.Lists:
    46:46:java.util.ArrayList newArrayList() -> newArrayList
    70:73:java.util.ArrayList newArrayList(java.lang.Object[]) -> newArrayList
    77:80:int computeArrayListCapacity(int) -> computeArrayListCapacity
    91:96:java.util.ArrayList newArrayList(java.lang.Iterable) -> newArrayList
    107:111:java.util.ArrayList newArrayList(java.util.Iterator) -> newArrayList
    120:125:java.util.ArrayList newArrayList(java.lang.Object,java.lang.Object[]) -> newArrayList
com.google.inject.internal.MapMaker -> com.google.inject.internal.MapMaker:
    com.google.inject.internal.MapMaker$Strength keyStrength -> keyStrength
    com.google.inject.internal.MapMaker$Strength valueStrength -> valueStrength
    long expirationNanos -> expirationNanos
    boolean useCustomMap -> useCustomMap
    com.google.inject.internal.CustomConcurrentHashMap$Builder builder -> builder
    com.google.inject.internal.MapMaker$ValueReference COMPUTING -> COMPUTING
    115:116:com.google.inject.internal.MapMaker initialCapacity(int) -> initialCapacity
    128:129:com.google.inject.internal.MapMaker loadFactor(float) -> loadFactor
    152:153:com.google.inject.internal.MapMaker concurrencyLevel(int) -> concurrencyLevel
    164:164:com.google.inject.internal.MapMaker weakKeys() -> weakKeys
    175:175:com.google.inject.internal.MapMaker softKeys() -> softKeys
    179:185:com.google.inject.internal.MapMaker setKeyStrength(com.google.inject.internal.MapMaker$Strength) -> setKeyStrength
    196:196:com.google.inject.internal.MapMaker weakValues() -> weakValues
    207:207:com.google.inject.internal.MapMaker softValues() -> softValues
    211:217:com.google.inject.internal.MapMaker setValueStrength(com.google.inject.internal.MapMaker$Strength) -> setValueStrength
    231:240:com.google.inject.internal.MapMaker expiration(long,java.util.concurrent.TimeUnit) -> expiration
    251:251:java.util.concurrent.ConcurrentMap makeMap() -> makeMap
    292:292:java.util.concurrent.ConcurrentMap makeComputingMap(com.google.inject.internal.Function) -> makeComputingMap
    744:744:com.google.inject.internal.MapMaker$ValueReference computing() -> computing
    89:89:com.google.inject.internal.MapMaker$Strength access$100(com.google.inject.internal.MapMaker) -> access$100
    89:89:com.google.inject.internal.MapMaker$Strength access$200(com.google.inject.internal.MapMaker) -> access$200
    89:89:long access$300(com.google.inject.internal.MapMaker) -> access$300
    89:89:com.google.inject.internal.CustomConcurrentHashMap$Builder access$400(com.google.inject.internal.MapMaker) -> access$400
    89:89:com.google.inject.internal.MapMaker$ValueReference access$500() -> access$500
    89:89:com.google.inject.internal.MapMaker$ValueReference access$600() -> access$600
com.google.inject.internal.MapMaker$1 -> com.google.inject.internal.MapMaker$1:
    727:727:java.lang.Object get() -> get
    731:731:com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    734:734:java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.MapMaker$ComputationExceptionReference -> com.google.inject.internal.MapMaker$ComputationExceptionReference:
    java.lang.Throwable t -> t
    774:774:java.lang.Object get() -> get
    778:778:com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    781:781:java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.MapMaker$LinkedSoftEntry -> com.google.inject.internal.MapMaker$LinkedSoftEntry:
    com.google.inject.internal.MapMaker$ReferenceEntry next -> next
    935:935:com.google.inject.internal.MapMaker$ReferenceEntry getNext() -> getNext
com.google.inject.internal.MapMaker$LinkedStrongEntry -> com.google.inject.internal.MapMaker$LinkedStrongEntry:
    com.google.inject.internal.MapMaker$ReferenceEntry next -> next
    877:877:com.google.inject.internal.MapMaker$ReferenceEntry getNext() -> getNext
com.google.inject.internal.MapMaker$LinkedWeakEntry -> com.google.inject.internal.MapMaker$LinkedWeakEntry:
    com.google.inject.internal.MapMaker$ReferenceEntry next -> next
    993:993:com.google.inject.internal.MapMaker$ReferenceEntry getNext() -> getNext
com.google.inject.internal.MapMaker$NullOutputExceptionReference -> com.google.inject.internal.MapMaker$NullOutputExceptionReference:
    java.lang.String message -> message
    755:755:java.lang.Object get() -> get
    759:759:com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    762:762:java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.MapMaker$QueueHolder -> com.google.inject.internal.MapMaker$QueueHolder:
    com.google.inject.internal.FinalizableReferenceQueue queue -> queue
com.google.inject.internal.MapMaker$ReferenceEntry -> com.google.inject.internal.MapMaker$ReferenceEntry:
    com.google.inject.internal.MapMaker$ValueReference getValueReference() -> getValueReference
    void setValueReference(com.google.inject.internal.MapMaker$ValueReference) -> setValueReference
    void valueReclaimed() -> valueReclaimed
    com.google.inject.internal.MapMaker$ReferenceEntry getNext() -> getNext
    int getHash() -> getHash
    java.lang.Object getKey() -> getKey
com.google.inject.internal.MapMaker$SoftEntry -> com.google.inject.internal.MapMaker$SoftEntry:
    com.google.inject.internal.CustomConcurrentHashMap$Internals internals -> internals
    int hash -> hash
    com.google.inject.internal.MapMaker$ValueReference valueReference -> valueReference
    894:894:java.lang.Object getKey() -> getKey
    898:899:void finalizeReferent() -> finalizeReferent
    908:908:com.google.inject.internal.MapMaker$ValueReference getValueReference() -> getValueReference
    912:913:void setValueReference(com.google.inject.internal.MapMaker$ValueReference) -> setValueReference
    915:916:void valueReclaimed() -> valueReclaimed
    918:918:com.google.inject.internal.MapMaker$ReferenceEntry getNext() -> getNext
    921:921:int getHash() -> getHash
com.google.inject.internal.MapMaker$SoftValueReference -> com.google.inject.internal.MapMaker$SoftValueReference:
    com.google.inject.internal.MapMaker$ReferenceEntry entry -> entry
    1034:1035:void finalizeReferent() -> finalizeReferent
    1039:1039:com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    1043:1043:java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.MapMaker$StrategyImpl -> com.google.inject.internal.MapMaker$StrategyImpl:
    com.google.inject.internal.MapMaker$Strength keyStrength -> keyStrength
    com.google.inject.internal.MapMaker$Strength valueStrength -> valueStrength
    java.util.concurrent.ConcurrentMap map -> map
    long expirationNanos -> expirationNanos
    com.google.inject.internal.CustomConcurrentHashMap$Internals internals -> internals
    long serialVersionUID -> serialVersionUID
    445:450:void setValue(com.google.inject.internal.MapMaker$ReferenceEntry,java.lang.Object) -> setValue
    462:474:void scheduleRemoval(java.lang.Object,java.lang.Object) -> scheduleRemoval
    477:477:boolean equalKeys(java.lang.Object,java.lang.Object) -> equalKeys
    481:481:boolean equalValues(java.lang.Object,java.lang.Object) -> equalValues
    485:485:int hashKey(java.lang.Object) -> hashKey
    489:489:java.lang.Object getKey(com.google.inject.internal.MapMaker$ReferenceEntry) -> getKey
    493:493:int getHash(com.google.inject.internal.MapMaker$ReferenceEntry) -> getHash
    498:498:com.google.inject.internal.MapMaker$ReferenceEntry newEntry(java.lang.Object,int,com.google.inject.internal.MapMaker$ReferenceEntry) -> newEntry
    503:514:com.google.inject.internal.MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.MapMaker$ReferenceEntry,com.google.inject.internal.MapMaker$ReferenceEntry) -> copyEntry
    524:533:java.lang.Object waitForValue(com.google.inject.internal.MapMaker$ReferenceEntry) -> waitForValue
    541:542:java.lang.Object getValue(com.google.inject.internal.MapMaker$ReferenceEntry) -> getValue
    549:565:java.lang.Object compute(java.lang.Object,com.google.inject.internal.MapMaker$ReferenceEntry,com.google.inject.internal.Function) -> compute
    574:581:void setValueReference(com.google.inject.internal.MapMaker$ReferenceEntry,com.google.inject.internal.MapMaker$ValueReference) -> setValueReference
    642:642:com.google.inject.internal.MapMaker$ReferenceEntry getNext(com.google.inject.internal.MapMaker$ReferenceEntry) -> getNext
    647:648:void setInternals(com.google.inject.internal.CustomConcurrentHashMap$Internals) -> setInternals
    657:667:void writeObject(java.io.ObjectOutputStream) -> writeObject
    695:703:void readObject(java.io.ObjectInputStream) -> readObject
    419:419:java.lang.Object waitForValue(java.lang.Object) -> waitForValue
    419:419:java.lang.Object compute(java.lang.Object,java.lang.Object,com.google.inject.internal.Function) -> compute
    419:419:int getHash(java.lang.Object) -> getHash
    419:419:java.lang.Object getNext(java.lang.Object) -> getNext
    419:419:java.lang.Object getKey(java.lang.Object) -> getKey
    419:419:java.lang.Object getValue(java.lang.Object) -> getValue
    419:419:void setValue(java.lang.Object,java.lang.Object) -> setValue
    419:419:java.lang.Object copyEntry(java.lang.Object,java.lang.Object,java.lang.Object) -> copyEntry
    419:419:java.lang.Object newEntry(java.lang.Object,int,java.lang.Object) -> newEntry
com.google.inject.internal.MapMaker$StrategyImpl$1 -> com.google.inject.internal.MapMaker$StrategyImpl$1:
    java.lang.ref.WeakReference val$keyReference -> val$keyReference
    java.lang.ref.WeakReference val$valueReference -> val$valueReference
    com.google.inject.internal.MapMaker$StrategyImpl this$0 -> this$0
    467:472:void run() -> run
com.google.inject.internal.MapMaker$StrategyImpl$Fields -> com.google.inject.internal.MapMaker$StrategyImpl$Fields:
    java.lang.reflect.Field keyStrength -> keyStrength
    java.lang.reflect.Field valueStrength -> valueStrength
    java.lang.reflect.Field expirationNanos -> expirationNanos
    java.lang.reflect.Field internals -> internals
    java.lang.reflect.Field map -> map
    683:687:java.lang.reflect.Field findField(java.lang.String) -> findField
com.google.inject.internal.MapMaker$StrategyImpl$FutureValueReference -> com.google.inject.internal.MapMaker$StrategyImpl$FutureValueReference:
    com.google.inject.internal.MapMaker$ReferenceEntry original -> original
    com.google.inject.internal.MapMaker$ReferenceEntry newEntry -> newEntry
    com.google.inject.internal.MapMaker$StrategyImpl this$0 -> this$0
    599:606:java.lang.Object get() -> get
    612:612:com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    616:624:java.lang.Object waitForValue() -> waitForValue
    636:637:void removeEntry() -> removeEntry
com.google.inject.internal.MapMaker$Strength -> com.google.inject.internal.MapMaker$Strength:
    com.google.inject.internal.MapMaker$Strength WEAK -> WEAK
    com.google.inject.internal.MapMaker$Strength SOFT -> SOFT
    com.google.inject.internal.MapMaker$Strength STRONG -> STRONG
    com.google.inject.internal.MapMaker$Strength[] $VALUES -> $VALUES
    297:297:com.google.inject.internal.MapMaker$Strength[] values() -> values
    297:297:com.google.inject.internal.MapMaker$Strength valueOf(java.lang.String) -> valueOf
    boolean equal(java.lang.Object,java.lang.Object) -> equal
    int hash(java.lang.Object) -> hash
    com.google.inject.internal.MapMaker$ValueReference referenceValue(com.google.inject.internal.MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    com.google.inject.internal.MapMaker$ReferenceEntry newEntry(com.google.inject.internal.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.MapMaker$ReferenceEntry) -> newEntry
    com.google.inject.internal.MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.MapMaker$ReferenceEntry,com.google.inject.internal.MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.MapMaker$Strength$1 -> com.google.inject.internal.MapMaker$Strength$1:
    300:300:boolean equal(java.lang.Object,java.lang.Object) -> equal
    303:303:int hash(java.lang.Object) -> hash
    307:307:com.google.inject.internal.MapMaker$ValueReference referenceValue(com.google.inject.internal.MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    312:312:com.google.inject.internal.MapMaker$ReferenceEntry newEntry(com.google.inject.internal.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.MapMaker$ReferenceEntry) -> newEntry
    319:320:com.google.inject.internal.MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.MapMaker$ReferenceEntry,com.google.inject.internal.MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.MapMaker$Strength$2 -> com.google.inject.internal.MapMaker$Strength$2:
    329:329:boolean equal(java.lang.Object,java.lang.Object) -> equal
    332:332:int hash(java.lang.Object) -> hash
    336:336:com.google.inject.internal.MapMaker$ValueReference referenceValue(com.google.inject.internal.MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    341:341:com.google.inject.internal.MapMaker$ReferenceEntry newEntry(com.google.inject.internal.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.MapMaker$ReferenceEntry) -> newEntry
    348:349:com.google.inject.internal.MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.MapMaker$ReferenceEntry,com.google.inject.internal.MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.MapMaker$Strength$3 -> com.google.inject.internal.MapMaker$Strength$3:
    358:358:boolean equal(java.lang.Object,java.lang.Object) -> equal
    361:361:int hash(java.lang.Object) -> hash
    365:365:com.google.inject.internal.MapMaker$ValueReference referenceValue(com.google.inject.internal.MapMaker$ReferenceEntry,java.lang.Object) -> referenceValue
    370:370:com.google.inject.internal.MapMaker$ReferenceEntry newEntry(com.google.inject.internal.CustomConcurrentHashMap$Internals,java.lang.Object,int,com.google.inject.internal.MapMaker$ReferenceEntry) -> newEntry
    378:379:com.google.inject.internal.MapMaker$ReferenceEntry copyEntry(java.lang.Object,com.google.inject.internal.MapMaker$ReferenceEntry,com.google.inject.internal.MapMaker$ReferenceEntry) -> copyEntry
com.google.inject.internal.MapMaker$StrongEntry -> com.google.inject.internal.MapMaker$StrongEntry:
    java.lang.Object key -> key
    com.google.inject.internal.CustomConcurrentHashMap$Internals internals -> internals
    int hash -> hash
    com.google.inject.internal.MapMaker$ValueReference valueReference -> valueReference
    839:839:java.lang.Object getKey() -> getKey
    849:849:com.google.inject.internal.MapMaker$ValueReference getValueReference() -> getValueReference
    853:854:void setValueReference(com.google.inject.internal.MapMaker$ValueReference) -> setValueReference
    856:857:void valueReclaimed() -> valueReclaimed
    859:859:com.google.inject.internal.MapMaker$ReferenceEntry getNext() -> getNext
    862:862:int getHash() -> getHash
com.google.inject.internal.MapMaker$StrongValueReference -> com.google.inject.internal.MapMaker$StrongValueReference:
    java.lang.Object referent -> referent
    1057:1057:java.lang.Object get() -> get
    1062:1062:com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    1066:1066:java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.MapMaker$ValueReference -> com.google.inject.internal.MapMaker$ValueReference:
    java.lang.Object get() -> get
    com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.MapMaker$WeakEntry -> com.google.inject.internal.MapMaker$WeakEntry:
    com.google.inject.internal.CustomConcurrentHashMap$Internals internals -> internals
    int hash -> hash
    com.google.inject.internal.MapMaker$ValueReference valueReference -> valueReference
    952:952:java.lang.Object getKey() -> getKey
    956:957:void finalizeReferent() -> finalizeReferent
    966:966:com.google.inject.internal.MapMaker$ValueReference getValueReference() -> getValueReference
    970:971:void setValueReference(com.google.inject.internal.MapMaker$ValueReference) -> setValueReference
    973:974:void valueReclaimed() -> valueReclaimed
    976:976:com.google.inject.internal.MapMaker$ReferenceEntry getNext() -> getNext
    979:979:int getHash() -> getHash
com.google.inject.internal.MapMaker$WeakValueReference -> com.google.inject.internal.MapMaker$WeakValueReference:
    com.google.inject.internal.MapMaker$ReferenceEntry entry -> entry
    1009:1010:void finalizeReferent() -> finalizeReferent
    1014:1014:com.google.inject.internal.MapMaker$ValueReference copyFor(com.google.inject.internal.MapMaker$ReferenceEntry) -> copyFor
    1018:1018:java.lang.Object waitForValue() -> waitForValue
com.google.inject.internal.Maps -> com.google.inject.internal.Maps:
    47:47:java.util.HashMap newHashMap() -> newHashMap
    56:56:java.util.LinkedHashMap newLinkedHashMap() -> newLinkedHashMap
    67:67:java.util.TreeMap newTreeMap() -> newTreeMap
    76:76:java.util.IdentityHashMap newIdentityHashMap() -> newIdentityHashMap
    90:90:java.util.Map$Entry immutableEntry(java.lang.Object,java.lang.Object) -> immutableEntry
com.google.inject.internal.MatcherAndConverter -> com.google.inject.internal.MatcherAndConverter:
    com.google.inject.matcher.Matcher typeMatcher -> typeMatcher
    com.google.inject.spi.TypeConverter typeConverter -> typeConverter
    java.lang.Object source -> source
    41:41:com.google.inject.spi.TypeConverter getTypeConverter() -> getTypeConverter
    45:45:com.google.inject.matcher.Matcher getTypeMatcher() -> getTypeMatcher
    49:49:java.lang.Object getSource() -> getSource
    53:53:java.lang.String toString() -> toString
com.google.inject.internal.MoreTypes -> com.google.inject.internal.MoreTypes:
    java.lang.reflect.Type[] EMPTY_TYPE_ARRAY -> EMPTY_TYPE_ARRAY
    java.util.Map PRIMITIVE_TO_WRAPPER -> PRIMITIVE_TO_WRAPPER
    72:79:com.google.inject.TypeLiteral makeKeySafe(com.google.inject.TypeLiteral) -> makeKeySafe
    88:98:boolean isFullySpecified(java.lang.reflect.Type) -> isFullySpecified
    108:132:java.lang.reflect.Type canonicalize(java.lang.reflect.Type) -> canonicalize
    142:142:java.lang.reflect.Member serializableCopy(java.lang.reflect.Member) -> serializableCopy
    148:173:java.lang.Class getRawType(java.lang.reflect.Type) -> getRawType
    182:232:boolean equals(java.lang.reflect.Type,java.lang.reflect.Type) -> equals
    240:259:int hashCode(java.lang.reflect.Type) -> hashCode
    264:264:int hashCodeOrZero(java.lang.Object) -> hashCodeOrZero
    268:314:java.lang.String toString(java.lang.reflect.Type) -> toString
    322:337:java.lang.Class memberType(java.lang.reflect.Member) -> memberType
    347:356:java.lang.String toString(java.lang.reflect.Member) -> toString
    361:386:java.lang.String memberKey(java.lang.reflect.Member) -> memberKey
    396:426:java.lang.reflect.Type getGenericSupertype(java.lang.reflect.Type,java.lang.Class,java.lang.Class) -> getGenericSupertype
    430:443:java.lang.reflect.Type resolveTypeVariable(java.lang.reflect.Type,java.lang.Class,java.lang.reflect.TypeVariable) -> resolveTypeVariable
    447:452:int indexOf(java.lang.Object[],java.lang.Object) -> indexOf
    460:461:java.lang.Class declaringClassOf(java.lang.reflect.TypeVariable) -> declaringClassOf
    628:630:void checkNotPrimitive(java.lang.reflect.Type,java.lang.String) -> checkNotPrimitive
    46:46:void access$200(java.lang.reflect.Type,java.lang.String) -> access$200
    46:46:boolean access$300(java.lang.reflect.Type) -> access$300
com.google.inject.internal.MoreTypes$1 -> com.google.inject.internal.MoreTypes$1:
com.google.inject.internal.MoreTypes$CompositeType -> com.google.inject.internal.MoreTypes$CompositeType:
    boolean isFullySpecified() -> isFullySpecified
com.google.inject.internal.MoreTypes$GenericArrayTypeImpl -> com.google.inject.internal.MoreTypes$GenericArrayTypeImpl:
    java.lang.reflect.Type componentType -> componentType
    long serialVersionUID -> serialVersionUID
    547:547:java.lang.reflect.Type getGenericComponentType() -> getGenericComponentType
    551:551:boolean isFullySpecified() -> isFullySpecified
    555:555:boolean equals(java.lang.Object) -> equals
    560:560:int hashCode() -> hashCode
    564:564:java.lang.String toString() -> toString
com.google.inject.internal.MoreTypes$MemberImpl -> com.google.inject.internal.MoreTypes$MemberImpl:
    java.lang.Class declaringClass -> declaringClass
    java.lang.String name -> name
    int modifiers -> modifiers
    boolean synthetic -> synthetic
    java.lang.Class memberType -> memberType
    java.lang.String memberKey -> memberKey
    655:655:java.lang.Class getDeclaringClass() -> getDeclaringClass
    659:659:java.lang.String getName() -> getName
    663:663:int getModifiers() -> getModifiers
    667:667:boolean isSynthetic() -> isSynthetic
    671:671:java.lang.String toString() -> toString
    637:637:java.lang.Class access$100(com.google.inject.internal.MoreTypes$MemberImpl) -> access$100
com.google.inject.internal.MoreTypes$ParameterizedTypeImpl -> com.google.inject.internal.MoreTypes$ParameterizedTypeImpl:
    java.lang.reflect.Type ownerType -> ownerType
    java.lang.reflect.Type rawType -> rawType
    java.lang.reflect.Type[] typeArguments -> typeArguments
    long serialVersionUID -> serialVersionUID
    493:493:java.lang.reflect.Type[] getActualTypeArguments() -> getActualTypeArguments
    497:497:java.lang.reflect.Type getRawType() -> getRawType
    501:501:java.lang.reflect.Type getOwnerType() -> getOwnerType
    505:519:boolean isFullySpecified() -> isFullySpecified
    523:523:boolean equals(java.lang.Object) -> equals
    528:528:int hashCode() -> hashCode
    532:532:java.lang.String toString() -> toString
com.google.inject.internal.MoreTypes$WildcardTypeImpl -> com.google.inject.internal.MoreTypes$WildcardTypeImpl:
    java.lang.reflect.Type upperBound -> upperBound
    java.lang.reflect.Type lowerBound -> lowerBound
    long serialVersionUID -> serialVersionUID
    599:599:java.lang.reflect.Type[] getUpperBounds() -> getUpperBounds
    603:603:java.lang.reflect.Type[] getLowerBounds() -> getLowerBounds
    607:607:boolean isFullySpecified() -> isFullySpecified
    612:612:boolean equals(java.lang.Object) -> equals
    617:617:int hashCode() -> hashCode
    621:621:java.lang.String toString() -> toString
com.google.inject.internal.NullOutputException -> com.google.inject.internal.NullOutputException:
com.google.inject.internal.Nullability -> com.google.inject.internal.Nullability:
    24:29:boolean allowsNull(java.lang.annotation.Annotation[]) -> allowsNull
com.google.inject.internal.Nullable -> com.google.inject.internal.Nullable:
com.google.inject.internal.ObjectArrays -> com.google.inject.internal.ObjectArrays:
    37:42:java.lang.Object[] newArray(java.lang.Object[],int) -> newArray
com.google.inject.internal.Objects -> com.google.inject.internal.Objects:
    43:43:boolean equal(java.lang.Object,java.lang.Object) -> equal
    62:62:int hashCode(java.lang.Object[]) -> hashCode
com.google.inject.internal.Preconditions -> com.google.inject.internal.Preconditions:
    71:74:void checkArgument(boolean) -> checkArgument
    86:89:void checkArgument(boolean,java.lang.Object) -> checkArgument
    112:116:void checkArgument(boolean,java.lang.String,java.lang.Object[]) -> checkArgument
    126:129:void checkState(boolean) -> checkState
    141:144:void checkState(boolean,java.lang.Object) -> checkState
    167:171:void checkState(boolean,java.lang.String,java.lang.Object[]) -> checkState
    182:185:java.lang.Object checkNotNull(java.lang.Object) -> checkNotNull
    199:202:java.lang.Object checkNotNull(java.lang.Object,java.lang.Object) -> checkNotNull
    224:229:java.lang.Object checkNotNull(java.lang.Object,java.lang.String,java.lang.Object[]) -> checkNotNull
    242:245:java.lang.Iterable checkContentsNotNull(java.lang.Iterable) -> checkContentsNotNull
    261:264:java.lang.Iterable checkContentsNotNull(java.lang.Iterable,java.lang.Object) -> checkContentsNotNull
    287:291:java.lang.Iterable checkContentsNotNull(java.lang.Iterable,java.lang.String,java.lang.Object[]) -> checkContentsNotNull
    295:313:boolean containsOrIsNull(java.lang.Iterable) -> containsOrIsNull
    330:331:void checkElementIndex(int,int) -> checkElementIndex
    347:356:void checkElementIndex(int,int,java.lang.String) -> checkElementIndex
    371:372:void checkPositionIndex(int,int) -> checkPositionIndex
    388:397:void checkPositionIndex(int,int,java.lang.String) -> checkPositionIndex
    414:420:void checkPositionIndexes(int,int,int) -> checkPositionIndexes
    437:463:java.lang.String format(java.lang.String,java.lang.Object[]) -> format
com.google.inject.internal.PrivateElementsImpl -> com.google.inject.internal.PrivateElementsImpl:
    java.lang.Object source -> source
    java.util.List elementsMutable -> elementsMutable
    java.util.List exposureBuilders -> exposureBuilders
    com.google.inject.internal.ImmutableList elements -> elements
    com.google.inject.internal.ImmutableMap exposedKeysToSources -> exposedKeysToSources
    com.google.inject.Injector injector -> injector
    61:61:java.lang.Object getSource() -> getSource
    65:70:java.util.List getElements() -> getElements
    74:74:com.google.inject.Injector getInjector() -> getInjector
    78:80:void initInjector(com.google.inject.Injector) -> initInjector
    83:92:java.util.Set getExposedKeys() -> getExposedKeys
    96:96:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    100:100:java.util.List getElementsMutable() -> getElementsMutable
    104:105:void addExposureBuilder(com.google.inject.internal.ExposureBuilder) -> addExposureBuilder
    108:118:void applyTo(com.google.inject.Binder) -> applyTo
    121:124:java.lang.Object getExposedSource(com.google.inject.Key) -> getExposedSource
    128:128:java.lang.String toString() -> toString
com.google.inject.internal.ProviderInstanceBindingImpl -> com.google.inject.internal.ProviderInstanceBindingImpl:
    com.google.inject.Provider providerInstance -> providerInstance
    com.google.inject.internal.ImmutableSet injectionPoints -> injectionPoints
    53:53:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    57:57:com.google.inject.Provider getProviderInstance() -> getProviderInstance
    61:61:java.util.Set getInjectionPoints() -> getInjectionPoints
    65:65:java.util.Set getDependencies() -> getDependencies
    71:71:com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    76:76:com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    81:83:void applyTo(com.google.inject.Binder) -> applyTo
    87:87:java.lang.String toString() -> toString
com.google.inject.internal.ProviderMethod -> com.google.inject.internal.ProviderMethod:
    com.google.inject.Key key -> key
    java.lang.Class scopeAnnotation -> scopeAnnotation
    java.lang.Object instance -> instance
    java.lang.reflect.Method method -> method
    com.google.inject.internal.ImmutableSet dependencies -> dependencies
    java.util.List parameterProviders -> parameterProviders
    boolean exposed -> exposed
    64:64:com.google.inject.Key getKey() -> getKey
    68:68:java.lang.reflect.Method getMethod() -> getMethod
    73:73:java.lang.Object getInstance() -> getInstance
    77:90:void configure(com.google.inject.Binder) -> configure
    93:106:java.lang.Object get() -> get
    111:111:java.util.Set getDependencies() -> getDependencies
com.google.inject.internal.ProviderMethodsModule -> com.google.inject.internal.ProviderMethodsModule:
    java.lang.Object delegate -> delegate
    com.google.inject.TypeLiteral typeLiteral -> typeLiteral
    54:54:com.google.inject.Module forModule(com.google.inject.Module) -> forModule
    63:67:com.google.inject.Module forObject(java.lang.Object) -> forObject
    70:73:void configure(com.google.inject.Binder) -> configure
    76:84:java.util.List getProviderMethods(com.google.inject.Binder) -> getProviderMethods
    88:113:com.google.inject.internal.ProviderMethod createProviderMethod(com.google.inject.Binder,java.lang.reflect.Method) -> createProviderMethod
    118:119:com.google.inject.Key getKey(com.google.inject.internal.Errors,com.google.inject.TypeLiteral,java.lang.reflect.Member,java.lang.annotation.Annotation[]) -> getKey
    123:123:boolean equals(java.lang.Object) -> equals
    128:128:int hashCode() -> hashCode
com.google.inject.internal.Scoping -> com.google.inject.internal.Scoping:
    com.google.inject.internal.Scoping UNSCOPED -> UNSCOPED
    com.google.inject.internal.Scoping SINGLETON_ANNOTATION -> SINGLETON_ANNOTATION
    com.google.inject.internal.Scoping SINGLETON_INSTANCE -> SINGLETON_INSTANCE
    com.google.inject.internal.Scoping EAGER_SINGLETON -> EAGER_SINGLETON
    112:116:com.google.inject.internal.Scoping forAnnotation(java.lang.Class) -> forAnnotation
    136:140:com.google.inject.internal.Scoping forInstance(com.google.inject.Scope) -> forInstance
    164:164:boolean isExplicitlyScoped() -> isExplicitlyScoped
    172:172:boolean isNoScope() -> isNoScope
    179:187:boolean isEagerSingleton(com.google.inject.Stage) -> isEagerSingleton
    194:194:com.google.inject.Scope getScopeInstance() -> getScopeInstance
    201:201:java.lang.Class getScopeAnnotation() -> getScopeAnnotation
    java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$1 -> com.google.inject.internal.Scoping$1:
    41:41:java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    45:45:com.google.inject.Scope getScopeInstance() -> getScopeInstance
    49:49:java.lang.String toString() -> toString
    54:54:void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$2 -> com.google.inject.internal.Scoping$2:
    59:59:java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    63:63:java.lang.Class getScopeAnnotation() -> getScopeAnnotation
    67:67:java.lang.String toString() -> toString
    71:72:void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$3 -> com.google.inject.internal.Scoping$3:
    77:77:java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    81:81:com.google.inject.Scope getScopeInstance() -> getScopeInstance
    85:85:java.lang.String toString() -> toString
    89:90:void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$4 -> com.google.inject.internal.Scoping$4:
    95:95:java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    99:99:com.google.inject.Scope getScopeInstance() -> getScopeInstance
    103:103:java.lang.String toString() -> toString
    107:108:void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$5 -> com.google.inject.internal.Scoping$5:
    java.lang.Class val$scopingAnnotation -> val$scopingAnnotation
    118:118:java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    122:122:java.lang.Class getScopeAnnotation() -> getScopeAnnotation
    126:126:java.lang.String toString() -> toString
    130:131:void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Scoping$6 -> com.google.inject.internal.Scoping$6:
    com.google.inject.Scope val$scope -> val$scope
    142:142:java.lang.Object acceptVisitor(com.google.inject.spi.BindingScopingVisitor) -> acceptVisitor
    146:146:com.google.inject.Scope getScopeInstance() -> getScopeInstance
    150:150:java.lang.String toString() -> toString
    154:155:void applyTo(com.google.inject.binder.ScopedBindingBuilder) -> applyTo
com.google.inject.internal.Sets -> com.google.inject.internal.Sets:
    58:58:java.util.HashSet newHashSet() -> newHashSet
    72:72:java.util.LinkedHashSet newLinkedHashSet() -> newLinkedHashSet
    115:115:java.util.Set newSetFromMap(java.util.Map) -> newSetFromMap
    190:194:int hashCodeImpl(java.util.Set) -> hashCodeImpl
com.google.inject.internal.Sets$SetFromMap -> com.google.inject.internal.Sets$SetFromMap:
    java.util.Map m -> m
    java.util.Set s -> s
    long serialVersionUID -> serialVersionUID
    130:131:void clear() -> clear
    133:133:int size() -> size
    136:136:boolean isEmpty() -> isEmpty
    139:139:boolean contains(java.lang.Object) -> contains
    142:142:boolean remove(java.lang.Object) -> remove
    145:145:boolean add(java.lang.Object) -> add
    148:148:java.util.Iterator iterator() -> iterator
    151:151:java.lang.Object[] toArray() -> toArray
    154:154:java.lang.Object[] toArray(java.lang.Object[]) -> toArray
    157:157:java.lang.String toString() -> toString
    160:160:int hashCode() -> hashCode
    163:163:boolean equals(java.lang.Object) -> equals
    166:166:boolean containsAll(java.util.Collection) -> containsAll
    169:169:boolean removeAll(java.util.Collection) -> removeAll
    172:172:boolean retainAll(java.util.Collection) -> retainAll
    181:183:void readObject(java.io.ObjectInputStream) -> readObject
com.google.inject.internal.SourceProvider -> com.google.inject.internal.SourceProvider:
    java.lang.Object UNKNOWN_SOURCE -> UNKNOWN_SOURCE
    com.google.inject.internal.ImmutableSet classNamesToSkip -> classNamesToSkip
    com.google.inject.internal.SourceProvider DEFAULT_INSTANCE -> DEFAULT_INSTANCE
    47:47:com.google.inject.internal.SourceProvider plusSkippedClasses(java.lang.Class[]) -> plusSkippedClasses
    52:56:java.util.List asStrings(java.lang.Class[]) -> asStrings
    64:70:java.lang.StackTraceElement get() -> get
com.google.inject.internal.StackTraceElements -> com.google.inject.internal.StackTraceElements:
    46:65:java.lang.Object forMember(java.lang.reflect.Member) -> forMember
    75:79:java.lang.Object forType(java.lang.Class) -> forType
com.google.inject.internal.Stopwatch -> com.google.inject.internal.Stopwatch:
    java.util.logging.Logger logger -> logger
    long start -> start
    35:39:long reset() -> reset
    47:48:void resetAndLog(java.lang.String) -> resetAndLog
com.google.inject.internal.Strings -> com.google.inject.internal.Strings:
    48:53:java.lang.String capitalize(java.lang.String) -> capitalize
com.google.inject.internal.ToStringBuilder -> com.google.inject.internal.ToStringBuilder:
    java.util.Map map -> map
    java.lang.String name -> name
    43:46:com.google.inject.internal.ToStringBuilder add(java.lang.String,java.lang.Object) -> add
    50:50:java.lang.String toString() -> toString
com.google.inject.internal.UniqueAnnotations -> com.google.inject.internal.UniqueAnnotations:
    java.util.concurrent.atomic.AtomicInteger nextUniqueValue -> nextUniqueValue
    38:38:java.lang.annotation.Annotation create() -> create
    42:42:java.lang.annotation.Annotation create(int) -> create
com.google.inject.internal.UniqueAnnotations$1 -> com.google.inject.internal.UniqueAnnotations$1:
    int val$value -> val$value
    44:44:int value() -> value
    48:48:java.lang.Class annotationType() -> annotationType
    52:52:java.lang.String toString() -> toString
    56:56:boolean equals(java.lang.Object) -> equals
    61:61:int hashCode() -> hashCode
com.google.inject.internal.UniqueAnnotations$Internal -> com.google.inject.internal.UniqueAnnotations$Internal:
    int value() -> value
com.google.inject.internal.UnmodifiableIterator -> com.google.inject.internal.UnmodifiableIterator:
    34:34:void remove() -> remove
com.google.inject.internal.UntargettedBindingImpl -> com.google.inject.internal.UntargettedBindingImpl:
    41:41:java.lang.Object acceptTargetVisitor(com.google.inject.spi.BindingTargetVisitor) -> acceptTargetVisitor
    45:45:com.google.inject.internal.BindingImpl withScoping(com.google.inject.internal.Scoping) -> withScoping
    49:49:com.google.inject.internal.BindingImpl withKey(com.google.inject.Key) -> withKey
    53:54:void applyTo(com.google.inject.Binder) -> applyTo
    57:57:java.lang.String toString() -> toString
com.google.inject.internal.UntargettedBindingImpl$1 -> com.google.inject.internal.UntargettedBindingImpl$1:
    31:31:java.lang.Object get(com.google.inject.internal.Errors,com.google.inject.internal.InternalContext,com.google.inject.spi.Dependency) -> get
com.google.inject.matcher.AbstractMatcher -> com.google.inject.matcher.AbstractMatcher:
    29:29:com.google.inject.matcher.Matcher and(com.google.inject.matcher.Matcher) -> and
    33:33:com.google.inject.matcher.Matcher or(com.google.inject.matcher.Matcher) -> or
com.google.inject.matcher.AbstractMatcher$AndMatcher -> com.google.inject.matcher.AbstractMatcher$AndMatcher:
    com.google.inject.matcher.Matcher a -> a
    com.google.inject.matcher.Matcher b -> b
    long serialVersionUID -> serialVersionUID
    45:45:boolean matches(java.lang.Object) -> matches
    49:49:boolean equals(java.lang.Object) -> equals
    55:55:int hashCode() -> hashCode
    59:59:java.lang.String toString() -> toString
com.google.inject.matcher.AbstractMatcher$OrMatcher -> com.google.inject.matcher.AbstractMatcher$OrMatcher:
    com.google.inject.matcher.Matcher a -> a
    com.google.inject.matcher.Matcher b -> b
    long serialVersionUID -> serialVersionUID
    74:74:boolean matches(java.lang.Object) -> matches
    78:78:boolean equals(java.lang.Object) -> equals
    84:84:int hashCode() -> hashCode
    88:88:java.lang.String toString() -> toString
com.google.inject.matcher.Matcher -> com.google.inject.matcher.Matcher:
    boolean matches(java.lang.Object) -> matches
    com.google.inject.matcher.Matcher and(com.google.inject.matcher.Matcher) -> and
    com.google.inject.matcher.Matcher or(com.google.inject.matcher.Matcher) -> or
com.google.inject.matcher.Matchers -> com.google.inject.matcher.Matchers:
    com.google.inject.matcher.Matcher ANY -> ANY
    40:40:com.google.inject.matcher.Matcher any() -> any
    65:65:com.google.inject.matcher.Matcher not(com.google.inject.matcher.Matcher) -> not
    97:100:void checkForRuntimeRetention(java.lang.Class) -> checkForRuntimeRetention
    108:108:com.google.inject.matcher.Matcher annotatedWith(java.lang.Class) -> annotatedWith
    146:146:com.google.inject.matcher.Matcher annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
    184:184:com.google.inject.matcher.Matcher subclassesOf(java.lang.Class) -> subclassesOf
    219:219:com.google.inject.matcher.Matcher only(java.lang.Object) -> only
    254:254:com.google.inject.matcher.Matcher identicalTo(java.lang.Object) -> identicalTo
    290:290:com.google.inject.matcher.Matcher inPackage(java.lang.Package) -> inPackage
    333:333:com.google.inject.matcher.Matcher inSubpackage(java.lang.String) -> inSubpackage
    370:370:com.google.inject.matcher.Matcher returns(com.google.inject.matcher.Matcher) -> returns
    33:33:void access$200(java.lang.Class) -> access$200
com.google.inject.matcher.Matchers$1 -> com.google.inject.matcher.Matchers$1:
com.google.inject.matcher.Matchers$AnnotatedWith -> com.google.inject.matcher.Matchers$AnnotatedWith:
    java.lang.annotation.Annotation annotation -> annotation
    long serialVersionUID -> serialVersionUID
    159:160:boolean matches(java.lang.reflect.AnnotatedElement) -> matches
    164:164:boolean equals(java.lang.Object) -> equals
    169:169:int hashCode() -> hashCode
    173:173:java.lang.String toString() -> toString
    149:149:boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$AnnotatedWithType -> com.google.inject.matcher.Matchers$AnnotatedWithType:
    java.lang.Class annotationType -> annotationType
    long serialVersionUID -> serialVersionUID
    121:121:boolean matches(java.lang.reflect.AnnotatedElement) -> matches
    125:125:boolean equals(java.lang.Object) -> equals
    130:130:int hashCode() -> hashCode
    134:134:java.lang.String toString() -> toString
    111:111:boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$Any -> com.google.inject.matcher.Matchers$Any:
    long serialVersionUID -> serialVersionUID
    47:47:boolean matches(java.lang.Object) -> matches
    51:51:java.lang.String toString() -> toString
    55:55:java.lang.Object readResolve() -> readResolve
com.google.inject.matcher.Matchers$IdenticalTo -> com.google.inject.matcher.Matchers$IdenticalTo:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    266:266:boolean matches(java.lang.Object) -> matches
    270:270:boolean equals(java.lang.Object) -> equals
    275:275:int hashCode() -> hashCode
    279:279:java.lang.String toString() -> toString
com.google.inject.matcher.Matchers$InPackage -> com.google.inject.matcher.Matchers$InPackage:
    java.lang.Package targetPackage -> targetPackage
    java.lang.String packageName -> packageName
    long serialVersionUID -> serialVersionUID
    303:303:boolean matches(java.lang.Class) -> matches
    307:307:boolean equals(java.lang.Object) -> equals
    312:312:int hashCode() -> hashCode
    316:316:java.lang.String toString() -> toString
    320:320:java.lang.Object readResolve() -> readResolve
    293:293:boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$InSubpackage -> com.google.inject.matcher.Matchers$InSubpackage:
    java.lang.String targetPackageName -> targetPackageName
    long serialVersionUID -> serialVersionUID
    344:345:boolean matches(java.lang.Class) -> matches
    350:350:boolean equals(java.lang.Object) -> equals
    355:355:int hashCode() -> hashCode
    359:359:java.lang.String toString() -> toString
    336:336:boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$Not -> com.google.inject.matcher.Matchers$Not:
    com.google.inject.matcher.Matcher delegate -> delegate
    long serialVersionUID -> serialVersionUID
    76:76:boolean matches(java.lang.Object) -> matches
    80:80:boolean equals(java.lang.Object) -> equals
    85:85:int hashCode() -> hashCode
    89:89:java.lang.String toString() -> toString
com.google.inject.matcher.Matchers$Only -> com.google.inject.matcher.Matchers$Only:
    java.lang.Object value -> value
    long serialVersionUID -> serialVersionUID
    231:231:boolean matches(java.lang.Object) -> matches
    235:235:boolean equals(java.lang.Object) -> equals
    240:240:int hashCode() -> hashCode
    244:244:java.lang.String toString() -> toString
com.google.inject.matcher.Matchers$Returns -> com.google.inject.matcher.Matchers$Returns:
    com.google.inject.matcher.Matcher returnType -> returnType
    long serialVersionUID -> serialVersionUID
    381:381:boolean matches(java.lang.reflect.Method) -> matches
    385:385:boolean equals(java.lang.Object) -> equals
    390:390:int hashCode() -> hashCode
    394:394:java.lang.String toString() -> toString
    373:373:boolean matches(java.lang.Object) -> matches
com.google.inject.matcher.Matchers$SubclassesOf -> com.google.inject.matcher.Matchers$SubclassesOf:
    java.lang.Class superclass -> superclass
    long serialVersionUID -> serialVersionUID
    196:196:boolean matches(java.lang.Class) -> matches
    200:200:boolean equals(java.lang.Object) -> equals
    205:205:int hashCode() -> hashCode
    209:209:java.lang.String toString() -> toString
    187:187:boolean matches(java.lang.Object) -> matches
com.google.inject.name.Named -> com.google.inject.name.Named:
    java.lang.String value() -> value
com.google.inject.name.NamedImpl -> com.google.inject.name.NamedImpl:
    java.lang.String value -> value
    long serialVersionUID -> serialVersionUID
    32:32:java.lang.String value() -> value
    37:37:int hashCode() -> hashCode
    41:46:boolean equals(java.lang.Object) -> equals
    50:50:java.lang.String toString() -> toString
    54:54:java.lang.Class annotationType() -> annotationType
com.google.inject.name.Names -> com.google.inject.name.Names:
    38:38:com.google.inject.name.Named named(java.lang.String) -> named
    46:52:void bindProperties(com.google.inject.Binder,java.util.Map) -> bindProperties
    60:68:void bindProperties(com.google.inject.Binder,java.util.Properties) -> bindProperties
com.google.inject.spi.BindingScopingVisitor -> com.google.inject.spi.BindingScopingVisitor:
    java.lang.Object visitEagerSingleton() -> visitEagerSingleton
    java.lang.Object visitScope(com.google.inject.Scope) -> visitScope
    java.lang.Object visitScopeAnnotation(java.lang.Class) -> visitScopeAnnotation
    java.lang.Object visitNoScoping() -> visitNoScoping
com.google.inject.spi.BindingTargetVisitor -> com.google.inject.spi.BindingTargetVisitor:
    java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ExposedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.UntargettedBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConstructorBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderBinding) -> visit
com.google.inject.spi.ConstructorBinding -> com.google.inject.spi.ConstructorBinding:
    com.google.inject.spi.InjectionPoint getConstructor() -> getConstructor
    java.util.Set getInjectableMembers() -> getInjectableMembers
com.google.inject.spi.ConvertedConstantBinding -> com.google.inject.spi.ConvertedConstantBinding:
    java.lang.Object getValue() -> getValue
    com.google.inject.Key getSourceKey() -> getSourceKey
    java.util.Set getDependencies() -> getDependencies
com.google.inject.spi.DefaultBindingScopingVisitor -> com.google.inject.spi.DefaultBindingScopingVisitor:
    38:38:java.lang.Object visitOther() -> visitOther
    42:42:java.lang.Object visitEagerSingleton() -> visitEagerSingleton
    46:46:java.lang.Object visitScope(com.google.inject.Scope) -> visitScope
    50:50:java.lang.Object visitScopeAnnotation(java.lang.Class) -> visitScopeAnnotation
    54:54:java.lang.Object visitNoScoping() -> visitNoScoping
com.google.inject.spi.DefaultBindingTargetVisitor -> com.google.inject.spi.DefaultBindingTargetVisitor:
    37:37:java.lang.Object visitOther(com.google.inject.Binding) -> visitOther
    41:41:java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
    45:45:java.lang.Object visit(com.google.inject.spi.ProviderInstanceBinding) -> visit
    49:49:java.lang.Object visit(com.google.inject.spi.ProviderKeyBinding) -> visit
    53:53:java.lang.Object visit(com.google.inject.spi.LinkedKeyBinding) -> visit
    57:57:java.lang.Object visit(com.google.inject.spi.ExposedBinding) -> visit
    61:61:java.lang.Object visit(com.google.inject.spi.UntargettedBinding) -> visit
    65:65:java.lang.Object visit(com.google.inject.spi.ConstructorBinding) -> visit
    69:69:java.lang.Object visit(com.google.inject.spi.ConvertedConstantBinding) -> visit
    75:75:java.lang.Object visit(com.google.inject.spi.ProviderBinding) -> visit
com.google.inject.spi.DefaultElementVisitor -> com.google.inject.spi.DefaultElementVisitor:
    37:37:java.lang.Object visitOther(com.google.inject.spi.Element) -> visitOther
    41:41:java.lang.Object visit(com.google.inject.spi.Message) -> visit
    45:45:java.lang.Object visit(com.google.inject.Binding) -> visit
    55:55:java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    59:59:java.lang.Object visit(com.google.inject.spi.TypeConverterBinding) -> visit
    63:63:java.lang.Object visit(com.google.inject.spi.ProviderLookup) -> visit
    67:67:java.lang.Object visit(com.google.inject.spi.InjectionRequest) -> visit
    71:71:java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    75:75:java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    79:79:java.lang.Object visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    83:83:java.lang.Object visit(com.google.inject.spi.TypeListenerBinding) -> visit
com.google.inject.spi.Dependency -> com.google.inject.spi.Dependency:
    com.google.inject.spi.InjectionPoint injectionPoint -> injectionPoint
    com.google.inject.Key key -> key
    boolean nullable -> nullable
    int parameterIndex -> parameterIndex
    55:55:com.google.inject.spi.Dependency get(com.google.inject.Key) -> get
    62:66:java.util.Set forInjectionPoints(java.util.Set) -> forInjectionPoints
    73:73:com.google.inject.Key getKey() -> getKey
    80:80:boolean isNullable() -> isNullable
    88:88:com.google.inject.spi.InjectionPoint getInjectionPoint() -> getInjectionPoint
    97:97:int getParameterIndex() -> getParameterIndex
    101:101:int hashCode() -> hashCode
    105:111:boolean equals(java.lang.Object) -> equals
    116:124:java.lang.String toString() -> toString
com.google.inject.spi.Element -> com.google.inject.spi.Element:
    java.lang.Object getSource() -> getSource
    java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.ElementVisitor -> com.google.inject.spi.ElementVisitor:
    java.lang.Object visit(com.google.inject.Binding) -> visit
    java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeConverterBinding) -> visit
    java.lang.Object visit(com.google.inject.spi.InjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    java.lang.Object visit(com.google.inject.spi.ProviderLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.MembersInjectorLookup) -> visit
    java.lang.Object visit(com.google.inject.spi.Message) -> visit
    java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    java.lang.Object visit(com.google.inject.spi.TypeListenerBinding) -> visit
com.google.inject.spi.Elements -> com.google.inject.spi.Elements:
    com.google.inject.spi.BindingTargetVisitor GET_INSTANCE_VISITOR -> GET_INSTANCE_VISITOR
    78:78:java.util.List getElements(com.google.inject.Module[]) -> getElements
    85:85:java.util.List getElements(com.google.inject.Stage,com.google.inject.Module[]) -> getElements
    92:92:java.util.List getElements(java.lang.Iterable) -> getElements
    99:103:java.util.List getElements(com.google.inject.Stage,java.lang.Iterable) -> getElements
    110:110:com.google.inject.Module getModule(java.lang.Iterable) -> getModule
    121:121:com.google.inject.spi.BindingTargetVisitor getInstanceVisitor() -> getInstanceVisitor
com.google.inject.spi.Elements$1 -> com.google.inject.spi.Elements$1:
    66:66:java.lang.Object visit(com.google.inject.spi.InstanceBinding) -> visit
    70:70:java.lang.Object visitOther(com.google.inject.Binding) -> visitOther
com.google.inject.spi.Elements$2 -> com.google.inject.spi.Elements$2:
    java.lang.Iterable val$elements -> val$elements
    112:115:void configure(com.google.inject.Binder) -> configure
com.google.inject.spi.Elements$RecordingBinder -> com.google.inject.spi.Elements$RecordingBinder:
    com.google.inject.Stage stage -> stage
    java.util.Set modules -> modules
    java.util.List elements -> elements
    java.lang.Object source -> source
    com.google.inject.internal.SourceProvider sourceProvider -> sourceProvider
    com.google.inject.spi.Elements$RecordingBinder parent -> parent
    com.google.inject.internal.PrivateElementsImpl privateElements -> privateElements
    182:183:void bindScope(java.lang.Class,com.google.inject.Scope) -> bindScope
    187:188:void requestInjection(java.lang.Object) -> requestInjection
    191:192:void requestInjection(com.google.inject.TypeLiteral,java.lang.Object) -> requestInjection
    195:198:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    202:202:com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    206:207:void bindListener(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeListener) -> bindListener
    210:213:void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
    216:234:void install(com.google.inject.Module) -> install
    237:237:com.google.inject.Stage currentStage() -> currentStage
    241:242:void addError(java.lang.String,java.lang.Object[]) -> addError
    245:247:void addError(java.lang.Throwable) -> addError
    250:251:void addError(com.google.inject.spi.Message) -> addError
    254:254:com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.Key) -> bind
    258:258:com.google.inject.binder.AnnotatedBindingBuilder bind(com.google.inject.TypeLiteral) -> bind
    262:262:com.google.inject.binder.AnnotatedBindingBuilder bind(java.lang.Class) -> bind
    266:266:com.google.inject.binder.AnnotatedConstantBindingBuilder bindConstant() -> bindConstant
    270:272:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    276:276:com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    281:282:void convertToTypes(com.google.inject.matcher.Matcher,com.google.inject.spi.TypeConverter) -> convertToTypes
    285:285:com.google.inject.spi.Elements$RecordingBinder withSource(java.lang.Object) -> withSource
    290:295:com.google.inject.spi.Elements$RecordingBinder skipSources(java.lang.Class[]) -> skipSources
    299:301:com.google.inject.PrivateBinder newPrivateBinder() -> newPrivateBinder
    305:306:void expose(com.google.inject.Key) -> expose
    309:309:com.google.inject.binder.AnnotatedElementBuilder expose(java.lang.Class) -> expose
    313:313:com.google.inject.binder.AnnotatedElementBuilder expose(com.google.inject.TypeLiteral) -> expose
    317:328:com.google.inject.binder.AnnotatedElementBuilder exposeInternal(com.google.inject.Key) -> exposeInternal
    332:332:java.lang.Object getSource() -> getSource
    338:338:java.lang.String toString() -> toString
    124:124:com.google.inject.Binder skipSources(java.lang.Class[]) -> skipSources
    124:124:com.google.inject.Binder withSource(java.lang.Object) -> withSource
    124:124:com.google.inject.binder.LinkedBindingBuilder bind(com.google.inject.Key) -> bind
    124:124:com.google.inject.PrivateBinder skipSources(java.lang.Class[]) -> skipSources
    124:124:com.google.inject.PrivateBinder withSource(java.lang.Object) -> withSource
    124:124:java.util.List access$100(com.google.inject.spi.Elements$RecordingBinder) -> access$100
com.google.inject.spi.Elements$RecordingBinder$1 -> com.google.inject.spi.Elements$RecordingBinder$1:
    com.google.inject.spi.Elements$RecordingBinder this$0 -> this$0
    321:321:void annotatedWith(java.lang.Class) -> annotatedWith
    322:322:void annotatedWith(java.lang.annotation.Annotation) -> annotatedWith
com.google.inject.spi.ExposedBinding -> com.google.inject.spi.ExposedBinding:
    com.google.inject.spi.PrivateElements getPrivateElements() -> getPrivateElements
    void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.HasDependencies -> com.google.inject.spi.HasDependencies:
    java.util.Set getDependencies() -> getDependencies
com.google.inject.spi.InjectionListener -> com.google.inject.spi.InjectionListener:
    void afterInjection(java.lang.Object) -> afterInjection
com.google.inject.spi.InjectionPoint -> com.google.inject.spi.InjectionPoint:
    boolean optional -> optional
    java.lang.reflect.Member member -> member
    com.google.inject.internal.ImmutableList dependencies -> dependencies
    104:122:com.google.inject.internal.ImmutableList forMember(java.lang.reflect.Member,com.google.inject.TypeLiteral,java.lang.annotation.Annotation[][]) -> forMember
    127:127:com.google.inject.spi.Dependency newDependency(com.google.inject.Key,boolean,int) -> newDependency
    134:134:java.lang.reflect.Member getMember() -> getMember
    145:145:java.util.List getDependencies() -> getDependencies
    155:155:boolean isOptional() -> isOptional
    159:159:boolean equals(java.lang.Object) -> equals
    164:164:int hashCode() -> hashCode
    168:168:java.lang.String toString() -> toString
    181:222:com.google.inject.spi.InjectionPoint forConstructorOf(com.google.inject.TypeLiteral) -> forConstructorOf
    236:236:com.google.inject.spi.InjectionPoint forConstructorOf(java.lang.Class) -> forConstructorOf
    251:261:java.util.Set forStaticMethodsAndFields(com.google.inject.TypeLiteral) -> forStaticMethodsAndFields
    276:276:java.util.Set forStaticMethodsAndFields(java.lang.Class) -> forStaticMethodsAndFields
    291:302:java.util.Set forInstanceMethodsAndFields(com.google.inject.TypeLiteral) -> forInstanceMethodsAndFields
    317:317:java.util.Set forInstanceMethodsAndFields(java.lang.Class) -> forInstanceMethodsAndFields
    321:339:void checkForMisplacedBindingAnnotations(java.lang.reflect.Member,com.google.inject.internal.Errors) -> checkForMisplacedBindingAnnotations
    344:354:void addInjectionPoints(com.google.inject.TypeLiteral,com.google.inject.spi.InjectionPoint$Factory,boolean,java.util.Collection,com.google.inject.internal.Errors) -> addInjectionPoints
    359:377:void addInjectorsForMembers(com.google.inject.TypeLiteral,com.google.inject.spi.InjectionPoint$Factory,boolean,java.util.Collection,com.google.inject.internal.Errors) -> addInjectorsForMembers
    380:380:boolean isStatic(java.lang.reflect.Member) -> isStatic
    53:53:void access$000(java.lang.reflect.Member,com.google.inject.internal.Errors) -> access$000
com.google.inject.spi.InjectionPoint$Factory -> com.google.inject.spi.InjectionPoint$Factory:
    com.google.inject.spi.InjectionPoint$Factory FIELDS -> FIELDS
    com.google.inject.spi.InjectionPoint$Factory METHODS -> METHODS
    java.lang.reflect.Member[] getMembers(java.lang.Class) -> getMembers
    com.google.inject.spi.InjectionPoint create(com.google.inject.TypeLiteral,java.lang.reflect.Member,com.google.inject.internal.Errors) -> create
com.google.inject.spi.InjectionPoint$Factory$1 -> com.google.inject.spi.InjectionPoint$Factory$1:
    386:386:java.lang.reflect.Field[] getMembers(java.lang.Class) -> getMembers
    389:389:com.google.inject.spi.InjectionPoint create(com.google.inject.TypeLiteral,java.lang.reflect.Field,com.google.inject.internal.Errors) -> create
    384:384:com.google.inject.spi.InjectionPoint create(com.google.inject.TypeLiteral,java.lang.reflect.Member,com.google.inject.internal.Errors) -> create
    384:384:java.lang.reflect.Member[] getMembers(java.lang.Class) -> getMembers
com.google.inject.spi.InjectionPoint$Factory$2 -> com.google.inject.spi.InjectionPoint$Factory$2:
    395:395:java.lang.reflect.Method[] getMembers(java.lang.Class) -> getMembers
    398:399:com.google.inject.spi.InjectionPoint create(com.google.inject.TypeLiteral,java.lang.reflect.Method,com.google.inject.internal.Errors) -> create
    393:393:com.google.inject.spi.InjectionPoint create(com.google.inject.TypeLiteral,java.lang.reflect.Member,com.google.inject.internal.Errors) -> create
    393:393:java.lang.reflect.Member[] getMembers(java.lang.Class) -> getMembers
com.google.inject.spi.InjectionRequest -> com.google.inject.spi.InjectionRequest:
    java.lang.Object source -> source
    com.google.inject.TypeLiteral type -> type
    java.lang.Object instance -> instance
    48:48:java.lang.Object getSource() -> getSource
    52:52:java.lang.Object getInstance() -> getInstance
    56:56:com.google.inject.TypeLiteral getType() -> getType
    72:72:java.util.Set getInjectionPoints() -> getInjectionPoints
    76:76:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    80:81:void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.InstanceBinding -> com.google.inject.spi.InstanceBinding:
    java.lang.Object getInstance() -> getInstance
    java.util.Set getInjectionPoints() -> getInjectionPoints
com.google.inject.spi.LinkedKeyBinding -> com.google.inject.spi.LinkedKeyBinding:
    com.google.inject.Key getLinkedKey() -> getLinkedKey
com.google.inject.spi.MembersInjectorLookup -> com.google.inject.spi.MembersInjectorLookup:
    java.lang.Object source -> source
    com.google.inject.TypeLiteral type -> type
    com.google.inject.MembersInjector delegate -> delegate
    47:47:java.lang.Object getSource() -> getSource
    54:54:com.google.inject.TypeLiteral getType() -> getType
    58:58:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    67:69:void initializeDelegate(com.google.inject.MembersInjector) -> initializeDelegate
    72:73:void applyTo(com.google.inject.Binder) -> applyTo
    81:81:com.google.inject.MembersInjector getDelegate() -> getDelegate
    90:90:com.google.inject.MembersInjector getMembersInjector() -> getMembersInjector
    35:35:com.google.inject.MembersInjector access$000(com.google.inject.spi.MembersInjectorLookup) -> access$000
    35:35:com.google.inject.TypeLiteral access$100(com.google.inject.spi.MembersInjectorLookup) -> access$100
com.google.inject.spi.MembersInjectorLookup$1 -> com.google.inject.spi.MembersInjectorLookup$1:
    com.google.inject.spi.MembersInjectorLookup this$0 -> this$0
    92:95:void injectMembers(java.lang.Object) -> injectMembers
    98:98:java.lang.String toString() -> toString
com.google.inject.spi.Message -> com.google.inject.spi.Message:
    java.lang.String message -> message
    java.lang.Throwable cause -> cause
    java.util.List sources -> sources
    long serialVersionUID -> serialVersionUID
    65:65:java.lang.String getSource() -> getSource
    72:72:java.util.List getSources() -> getSources
    79:79:java.lang.String getMessage() -> getMessage
    84:84:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    94:94:java.lang.Throwable getCause() -> getCause
    98:98:java.lang.String toString() -> toString
    102:102:int hashCode() -> hashCode
    106:110:boolean equals(java.lang.Object) -> equals
    115:116:void applyTo(com.google.inject.Binder) -> applyTo
    123:127:java.lang.Object writeReplace() -> writeReplace
    42:42:java.lang.Object getSource() -> getSource
com.google.inject.spi.PrivateElements -> com.google.inject.spi.PrivateElements:
    java.util.List getElements() -> getElements
    com.google.inject.Injector getInjector() -> getInjector
    java.util.Set getExposedKeys() -> getExposedKeys
    java.lang.Object getExposedSource(com.google.inject.Key) -> getExposedSource
com.google.inject.spi.ProviderBinding -> com.google.inject.spi.ProviderBinding:
    com.google.inject.Key getProvidedKey() -> getProvidedKey
com.google.inject.spi.ProviderInstanceBinding -> com.google.inject.spi.ProviderInstanceBinding:
    com.google.inject.Provider getProviderInstance() -> getProviderInstance
    java.util.Set getInjectionPoints() -> getInjectionPoints
com.google.inject.spi.ProviderKeyBinding -> com.google.inject.spi.ProviderKeyBinding:
    com.google.inject.Key getProviderKey() -> getProviderKey
com.google.inject.spi.ProviderLookup -> com.google.inject.spi.ProviderLookup:
    java.lang.Object source -> source
    com.google.inject.Key key -> key
    com.google.inject.Provider delegate -> delegate
    46:46:java.lang.Object getSource() -> getSource
    50:50:com.google.inject.Key getKey() -> getKey
    54:54:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    63:65:void initializeDelegate(com.google.inject.Provider) -> initializeDelegate
    68:69:void applyTo(com.google.inject.Binder) -> applyTo
    76:76:com.google.inject.Provider getDelegate() -> getDelegate
    85:85:com.google.inject.Provider getProvider() -> getProvider
    35:35:com.google.inject.Provider access$000(com.google.inject.spi.ProviderLookup) -> access$000
    35:35:com.google.inject.Key access$100(com.google.inject.spi.ProviderLookup) -> access$100
com.google.inject.spi.ProviderLookup$1 -> com.google.inject.spi.ProviderLookup$1:
    com.google.inject.spi.ProviderLookup this$0 -> this$0
    87:89:java.lang.Object get() -> get
    93:93:java.lang.String toString() -> toString
com.google.inject.spi.ProviderWithDependencies -> com.google.inject.spi.ProviderWithDependencies:
com.google.inject.spi.ScopeBinding -> com.google.inject.spi.ScopeBinding:
    java.lang.Object source -> source
    java.lang.Class annotationType -> annotationType
    com.google.inject.Scope scope -> scope
    47:47:java.lang.Object getSource() -> getSource
    51:51:java.lang.Class getAnnotationType() -> getAnnotationType
    55:55:com.google.inject.Scope getScope() -> getScope
    59:59:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    63:64:void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.StaticInjectionRequest -> com.google.inject.spi.StaticInjectionRequest:
    java.lang.Object source -> source
    java.lang.Class type -> type
    44:44:java.lang.Object getSource() -> getSource
    48:48:java.lang.Class getType() -> getType
    64:64:java.util.Set getInjectionPoints() -> getInjectionPoints
    68:69:void applyTo(com.google.inject.Binder) -> applyTo
    72:72:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
com.google.inject.spi.TypeConverter -> com.google.inject.spi.TypeConverter:
    java.lang.Object convert(java.lang.String,com.google.inject.TypeLiteral) -> convert
com.google.inject.spi.TypeConverterBinding -> com.google.inject.spi.TypeConverterBinding:
    java.lang.Object source -> source
    com.google.inject.matcher.Matcher typeMatcher -> typeMatcher
    com.google.inject.spi.TypeConverter typeConverter -> typeConverter
    47:47:java.lang.Object getSource() -> getSource
    51:51:com.google.inject.matcher.Matcher getTypeMatcher() -> getTypeMatcher
    55:55:com.google.inject.spi.TypeConverter getTypeConverter() -> getTypeConverter
    59:59:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    63:64:void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.TypeEncounter -> com.google.inject.spi.TypeEncounter:
    void addError(java.lang.String,java.lang.Object[]) -> addError
    void addError(java.lang.Throwable) -> addError
    void addError(com.google.inject.spi.Message) -> addError
    com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    void register(com.google.inject.MembersInjector) -> register
    void register(com.google.inject.spi.InjectionListener) -> register
com.google.inject.spi.TypeListener -> com.google.inject.spi.TypeListener:
    void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
com.google.inject.spi.TypeListenerBinding -> com.google.inject.spi.TypeListenerBinding:
    java.lang.Object source -> source
    com.google.inject.matcher.Matcher typeMatcher -> typeMatcher
    com.google.inject.spi.TypeListener listener -> listener
    48:48:com.google.inject.spi.TypeListener getListener() -> getListener
    53:53:com.google.inject.matcher.Matcher getTypeMatcher() -> getTypeMatcher
    57:57:java.lang.Object getSource() -> getSource
    61:61:java.lang.Object acceptVisitor(com.google.inject.spi.ElementVisitor) -> acceptVisitor
    65:66:void applyTo(com.google.inject.Binder) -> applyTo
com.google.inject.spi.UntargettedBinding -> com.google.inject.spi.UntargettedBinding:
com.google.inject.util.Modules -> com.google.inject.util.Modules:
    com.google.inject.Module EMPTY_MODULE -> EMPTY_MODULE
    69:69:com.google.inject.util.Modules$OverriddenModuleBuilder override(com.google.inject.Module[]) -> override
    86:86:com.google.inject.util.Modules$OverriddenModuleBuilder override(java.lang.Iterable) -> override
    93:93:com.google.inject.Module combine(com.google.inject.Module[]) -> combine
    100:101:com.google.inject.Module combine(java.lang.Iterable) -> combine
com.google.inject.util.Modules$1 -> com.google.inject.util.Modules$1:
    52:52:void configure(com.google.inject.Binder) -> configure
com.google.inject.util.Modules$2 -> com.google.inject.util.Modules$2:
    java.util.Set val$modulesSet -> val$modulesSet
    103:107:void configure(com.google.inject.Binder) -> configure
com.google.inject.util.Modules$ModuleWriter -> com.google.inject.util.Modules$ModuleWriter:
    com.google.inject.Binder binder -> binder
    259:260:java.lang.Void visitOther(com.google.inject.spi.Element) -> visitOther
    264:267:void writeAll(java.lang.Iterable) -> writeAll
    251:251:java.lang.Object visitOther(com.google.inject.spi.Element) -> visitOther
com.google.inject.util.Modules$OverriddenModuleBuilder -> com.google.inject.util.Modules$OverriddenModuleBuilder:
    com.google.inject.Module with(com.google.inject.Module[]) -> with
    com.google.inject.Module with(java.lang.Iterable) -> with
com.google.inject.util.Modules$RealOverriddenModuleBuilder -> com.google.inject.util.Modules$RealOverriddenModuleBuilder:
    com.google.inject.internal.ImmutableSet baseModules -> baseModules
    135:135:com.google.inject.Module with(com.google.inject.Module[]) -> with
    139:139:com.google.inject.Module with(java.lang.Iterable) -> with
    127:127:com.google.inject.internal.ImmutableSet access$100(com.google.inject.util.Modules$RealOverriddenModuleBuilder) -> access$100
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1:
    java.lang.Iterable val$overrides -> val$overrides
    com.google.inject.util.Modules$RealOverriddenModuleBuilder this$0 -> this$0
    142:238:void configure() -> configure
    241:241:com.google.inject.Scope getScopeInstanceOrNull(com.google.inject.Binding) -> getScopeInstanceOrNull
    139:139:com.google.inject.Scope access$200(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1,com.google.inject.Binding) -> access$200
    139:139:com.google.inject.Binder access$300(com.google.inject.util.Modules$RealOverriddenModuleBuilder$1) -> access$300
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$1:
    java.util.Set val$overriddenKeys -> val$overriddenKeys
    java.util.Set val$overridesScopeAnnotations -> val$overridesScopeAnnotations
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    151:152:java.lang.Void visit(com.google.inject.Binding) -> visit
    156:157:java.lang.Void visit(com.google.inject.spi.ScopeBinding) -> visit
    161:162:java.lang.Void visit(com.google.inject.spi.PrivateElements) -> visit
    149:149:java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    149:149:java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    149:149:java.lang.Object visit(com.google.inject.Binding) -> visit
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$2:
    java.util.Set val$overriddenKeys -> val$overriddenKeys
    java.util.Map val$scopeInstancesInUse -> val$scopeInstancesInUse
    java.util.List val$scopeBindings -> val$scopeBindings
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    173:183:java.lang.Void visit(com.google.inject.Binding) -> visit
    187:210:java.lang.Void visit(com.google.inject.spi.PrivateElements) -> visit
    214:215:java.lang.Void visit(com.google.inject.spi.ScopeBinding) -> visit
    171:171:java.lang.Object visit(com.google.inject.spi.PrivateElements) -> visit
    171:171:java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
    171:171:java.lang.Object visit(com.google.inject.Binding) -> visit
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$3:
    java.util.Set val$overridesScopeAnnotations -> val$overridesScopeAnnotations
    java.util.Map val$scopeInstancesInUse -> val$scopeInstancesInUse
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    223:233:java.lang.Void visit(com.google.inject.spi.ScopeBinding) -> visit
    221:221:java.lang.Object visit(com.google.inject.spi.ScopeBinding) -> visit
com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$4 -> com.google.inject.util.Modules$RealOverriddenModuleBuilder$1$4:
    com.google.inject.util.Modules$RealOverriddenModuleBuilder$1 this$1 -> this$1
    243:243:com.google.inject.Scope visitScope(com.google.inject.Scope) -> visitScope
    241:241:java.lang.Object visitScope(com.google.inject.Scope) -> visitScope
com.google.inject.util.Providers -> com.google.inject.util.Providers:
    42:42:com.google.inject.Provider of(java.lang.Object) -> of
com.google.inject.util.Providers$1 -> com.google.inject.util.Providers$1:
    java.lang.Object val$instance -> val$instance
    44:44:java.lang.Object get() -> get
    48:48:java.lang.String toString() -> toString
com.google.inject.util.Types -> com.google.inject.util.Types:
    49:49:java.lang.reflect.ParameterizedType newParameterizedType(java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedType
    60:60:java.lang.reflect.ParameterizedType newParameterizedTypeWithOwner(java.lang.reflect.Type,java.lang.reflect.Type,java.lang.reflect.Type[]) -> newParameterizedTypeWithOwner
    70:70:java.lang.reflect.GenericArrayType arrayOf(java.lang.reflect.Type) -> arrayOf
    80:80:java.lang.reflect.WildcardType subtypeOf(java.lang.reflect.Type) -> subtypeOf
    89:89:java.lang.reflect.WildcardType supertypeOf(java.lang.reflect.Type) -> supertypeOf
    99:99:java.lang.reflect.ParameterizedType listOf(java.lang.reflect.Type) -> listOf
    109:109:java.lang.reflect.ParameterizedType setOf(java.lang.reflect.Type) -> setOf
    119:119:java.lang.reflect.ParameterizedType mapOf(java.lang.reflect.Type,java.lang.reflect.Type) -> mapOf
    131:131:java.lang.reflect.ParameterizedType providerOf(java.lang.reflect.Type) -> providerOf
roboguice.RoboGuice -> roboguice.RoboGuice:
    com.google.inject.Stage DEFAULT_STAGE -> DEFAULT_STAGE
    java.util.WeakHashMap injectors -> injectors
    java.util.WeakHashMap resourceListeners -> resourceListeners
    java.util.WeakHashMap viewListeners -> viewListeners
    int modulesResourceId -> modulesResourceId
    50:60:com.google.inject.Injector getBaseApplicationInjector(android.app.Application) -> getBaseApplicationInjector
    83:97:com.google.inject.Injector setBaseApplicationInjector(android.app.Application,com.google.inject.Stage,com.google.inject.Module[]) -> setBaseApplicationInjector
    105:106:void setModulesResourceId(int) -> setModulesResourceId
    113:142:com.google.inject.Injector setBaseApplicationInjector(android.app.Application,com.google.inject.Stage) -> setBaseApplicationInjector
    148:149:roboguice.inject.RoboInjector getInjector(android.content.Context) -> getInjector
    156:157:java.lang.Object injectMembers(android.content.Context,java.lang.Object) -> injectMembers
    163:163:roboguice.config.DefaultRoboModule newDefaultRoboModule(android.app.Application) -> newDefaultRoboModule
    172:181:roboguice.inject.ResourceListener getResourceListener(android.app.Application) -> getResourceListener
    185:194:roboguice.inject.ViewListener getViewListener(android.app.Application) -> getViewListener
    198:201:void destroyInjector(android.content.Context) -> destroyInjector
roboguice.RoboGuice$1 -> roboguice.RoboGuice$1:
    android.app.Application val$application -> val$application
    87:88:java.lang.Void visit(com.google.inject.spi.StaticInjectionRequest) -> visit
    84:84:java.lang.Object visit(com.google.inject.spi.StaticInjectionRequest) -> visit
roboguice.RoboGuice$util -> roboguice.RoboGuice$util:
    212:215:void reset() -> reset
roboguice.activity.RoboAccountAuthenticatorActivity -> roboguice.activity.RoboAccountAuthenticatorActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    52:57:void onCreate(android.os.Bundle) -> onCreate
    61:63:void onRestart() -> onRestart
    67:69:void onStart() -> onStart
    73:75:void onResume() -> onResume
    79:81:void onPause() -> onPause
    85:87:void onNewIntent(android.content.Intent) -> onNewIntent
    92:96:void onStop() -> onStop
    101:109:void onDestroy() -> onDestroy
    113:116:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    120:123:void onContentChanged() -> onContentChanged
    127:129:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    133:133:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboActivity -> roboguice.activity.RoboActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    76:81:void onCreate(android.os.Bundle) -> onCreate
    85:87:void onRestart() -> onRestart
    91:93:void onStart() -> onStart
    97:99:void onResume() -> onResume
    103:105:void onPause() -> onPause
    109:111:void onNewIntent(android.content.Intent) -> onNewIntent
    116:120:void onStop() -> onStop
    125:133:void onDestroy() -> onDestroy
    137:140:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    144:147:void onContentChanged() -> onContentChanged
    151:153:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    157:157:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboActivityGroup -> roboguice.activity.RoboActivityGroup:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    53:58:void onCreate(android.os.Bundle) -> onCreate
    62:64:void onRestart() -> onRestart
    68:70:void onStart() -> onStart
    74:76:void onResume() -> onResume
    80:82:void onPause() -> onPause
    86:88:void onNewIntent(android.content.Intent) -> onNewIntent
    93:97:void onStop() -> onStop
    102:110:void onDestroy() -> onDestroy
    114:117:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    121:124:void onContentChanged() -> onContentChanged
    128:130:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    134:134:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboExpandableListActivity -> roboguice.activity.RoboExpandableListActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    54:59:void onCreate(android.os.Bundle) -> onCreate
    63:65:void onRestart() -> onRestart
    69:71:void onStart() -> onStart
    75:77:void onResume() -> onResume
    81:83:void onPause() -> onPause
    87:89:void onNewIntent(android.content.Intent) -> onNewIntent
    94:98:void onStop() -> onStop
    103:111:void onDestroy() -> onDestroy
    115:118:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    122:125:void onContentChanged() -> onContentChanged
    129:131:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    135:135:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboFragmentActivity -> roboguice.activity.RoboFragmentActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    45:50:void onCreate(android.os.Bundle) -> onCreate
    54:56:void onRestart() -> onRestart
    60:62:void onStart() -> onStart
    66:68:void onResume() -> onResume
    72:74:void onPause() -> onPause
    78:80:void onNewIntent(android.content.Intent) -> onNewIntent
    85:89:void onStop() -> onStop
    94:102:void onDestroy() -> onDestroy
    106:109:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    113:116:void onContentChanged() -> onContentChanged
    120:122:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    126:126:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboLauncherActivity -> roboguice.activity.RoboLauncherActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    53:58:void onCreate(android.os.Bundle) -> onCreate
    62:64:void onRestart() -> onRestart
    68:70:void onStart() -> onStart
    74:76:void onResume() -> onResume
    80:82:void onPause() -> onPause
    86:88:void onNewIntent(android.content.Intent) -> onNewIntent
    93:97:void onStop() -> onStop
    102:110:void onDestroy() -> onDestroy
    114:117:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    121:124:void onContentChanged() -> onContentChanged
    128:130:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    134:134:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboListActivity -> roboguice.activity.RoboListActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    53:58:void onCreate(android.os.Bundle) -> onCreate
    62:64:void onRestart() -> onRestart
    68:70:void onStart() -> onStart
    74:76:void onResume() -> onResume
    80:82:void onPause() -> onPause
    86:88:void onNewIntent(android.content.Intent) -> onNewIntent
    93:97:void onStop() -> onStop
    102:110:void onDestroy() -> onDestroy
    114:117:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    121:124:void onContentChanged() -> onContentChanged
    128:130:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    134:134:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboMapActivity -> roboguice.activity.RoboMapActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    53:58:void onCreate(android.os.Bundle) -> onCreate
    62:64:void onRestart() -> onRestart
    68:70:void onStart() -> onStart
    74:76:void onResume() -> onResume
    80:82:void onPause() -> onPause
    86:88:void onNewIntent(android.content.Intent) -> onNewIntent
    93:97:void onStop() -> onStop
    102:110:void onDestroy() -> onDestroy
    114:117:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    121:124:void onContentChanged() -> onContentChanged
    128:130:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    134:134:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboPreferenceActivity -> roboguice.activity.RoboPreferenceActivity:
    roboguice.event.EventManager eventManager -> eventManager
    roboguice.inject.PreferenceListener preferenceListener -> preferenceListener
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    63:69:void onCreate(android.os.Bundle) -> onCreate
    73:84:void setPreferenceScreen(android.preference.PreferenceScreen) -> setPreferenceScreen
    88:90:void onRestart() -> onRestart
    94:96:void onStart() -> onStart
    100:102:void onResume() -> onResume
    106:108:void onPause() -> onPause
    112:114:void onNewIntent(android.content.Intent) -> onNewIntent
    119:123:void onStop() -> onStop
    128:136:void onDestroy() -> onDestroy
    140:143:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    147:150:void onContentChanged() -> onContentChanged
    154:156:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    160:160:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.RoboSplashActivity -> roboguice.activity.RoboSplashActivity:
    int minDisplayMs -> minDisplayMs
    27:58:void onCreate(android.os.Bundle) -> onCreate
    67:67:void doStuffInBackground(android.app.Application) -> doStuffInBackground
    75:76:void andFinishThisOne() -> andFinishThisOne
    void startNextActivity() -> startNextActivity
roboguice.activity.RoboSplashActivity$1 -> roboguice.activity.RoboSplashActivity$1:
    long val$start -> val$start
    roboguice.activity.RoboSplashActivity this$0 -> this$0
    36:55:void run() -> run
roboguice.activity.RoboTabActivity -> roboguice.activity.RoboTabActivity:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    roboguice.inject.ContentViewListener ignored -> ignored
    53:58:void onCreate(android.os.Bundle) -> onCreate
    62:64:void onRestart() -> onRestart
    68:70:void onStart() -> onStart
    74:76:void onResume() -> onResume
    80:82:void onPause() -> onPause
    86:88:void onNewIntent(android.content.Intent) -> onNewIntent
    93:97:void onStop() -> onStop
    102:110:void onDestroy() -> onDestroy
    114:117:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    121:124:void onContentChanged() -> onContentChanged
    128:130:void onActivityResult(int,int,android.content.Intent) -> onActivityResult
    134:134:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.activity.event.OnActivityResultEvent -> roboguice.activity.event.OnActivityResultEvent:
    int requestCode -> requestCode
    int resultCode -> resultCode
    android.content.Intent data -> data
    24:24:int getRequestCode() -> getRequestCode
    28:28:int getResultCode() -> getResultCode
    32:32:android.content.Intent getData() -> getData
roboguice.activity.event.OnConfigurationChangedEvent -> roboguice.activity.event.OnConfigurationChangedEvent:
    android.content.res.Configuration oldConfig -> oldConfig
    android.content.res.Configuration newConfig -> newConfig
    22:22:android.content.res.Configuration getOldConfig() -> getOldConfig
    26:26:android.content.res.Configuration getNewConfig() -> getNewConfig
roboguice.activity.event.OnContentChangedEvent -> roboguice.activity.event.OnContentChangedEvent:
roboguice.activity.event.OnCreateEvent -> roboguice.activity.event.OnCreateEvent:
    android.os.Bundle savedInstanceState -> savedInstanceState
    22:22:android.os.Bundle getSavedInstanceState() -> getSavedInstanceState
roboguice.activity.event.OnDestroyEvent -> roboguice.activity.event.OnDestroyEvent:
roboguice.activity.event.OnNewIntentEvent -> roboguice.activity.event.OnNewIntentEvent:
roboguice.activity.event.OnPauseEvent -> roboguice.activity.event.OnPauseEvent:
roboguice.activity.event.OnRestartEvent -> roboguice.activity.event.OnRestartEvent:
roboguice.activity.event.OnResumeEvent -> roboguice.activity.event.OnResumeEvent:
roboguice.activity.event.OnStartEvent -> roboguice.activity.event.OnStartEvent:
roboguice.activity.event.OnStopEvent -> roboguice.activity.event.OnStopEvent:
roboguice.adapter.IterableAdapter -> roboguice.adapter.IterableAdapter:
    28:30:java.util.List toList(java.lang.Iterable) -> toList
roboguice.config.DefaultRoboModule -> roboguice.config.DefaultRoboModule:
    java.lang.Class fragmentManagerClass -> fragmentManagerClass
    java.lang.Class accountManagerClass -> accountManagerClass
    android.app.Application application -> application
    roboguice.inject.ContextScope contextScope -> contextScope
    roboguice.inject.ResourceListener resourceListener -> resourceListener
    roboguice.inject.ViewListener viewListener -> viewListener
    101:193:void configure() -> configure
roboguice.config.DefaultRoboModule$1 -> roboguice.config.DefaultRoboModule$1:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$2 -> roboguice.config.DefaultRoboModule$2:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$3 -> roboguice.config.DefaultRoboModule$3:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$4 -> roboguice.config.DefaultRoboModule$4:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.config.DefaultRoboModule$5 -> roboguice.config.DefaultRoboModule$5:
    roboguice.config.DefaultRoboModule this$0 -> this$0
roboguice.content.RoboAsyncTaskLoader -> roboguice.content.RoboAsyncTaskLoader:
roboguice.content.RoboContentProvider -> roboguice.content.RoboContentProvider:
    17:18:boolean onCreate() -> onCreate
roboguice.content.RoboLoader -> roboguice.content.RoboLoader:
roboguice.event.EventListener -> roboguice.event.EventListener:
    void onEvent(java.lang.Object) -> onEvent
roboguice.event.EventManager -> roboguice.event.EventManager:
    android.content.Context context -> context
    java.util.Map registrations -> registrations
    42:50:void registerObserver(java.lang.Class,roboguice.event.EventListener) -> registerObserver
    60:61:void registerObserver(java.lang.Object,java.lang.reflect.Method,java.lang.Class) -> registerObserver
    72:86:void unregisterObserver(java.lang.Class,roboguice.event.EventListener) -> unregisterObserver
    96:113:void unregisterObserver(java.lang.Object,java.lang.Class) -> unregisterObserver
    123:133:void fire(java.lang.Object) -> fire
    137:140:void destroy() -> destroy
roboguice.event.EventThread -> roboguice.event.EventThread:
    roboguice.event.EventThread CURRENT -> CURRENT
    roboguice.event.EventThread UI -> UI
    roboguice.event.EventThread BACKGROUND -> BACKGROUND
    roboguice.event.EventThread[] $VALUES -> $VALUES
    19:19:roboguice.event.EventThread[] values() -> values
    19:19:roboguice.event.EventThread valueOf(java.lang.String) -> valueOf
roboguice.event.Observes -> roboguice.event.Observes:
    roboguice.event.EventThread value() -> value
roboguice.event.ObservesTypeListener -> roboguice.event.ObservesTypeListener:
    com.google.inject.Provider eventManagerProvider -> eventManagerProvider
    roboguice.event.eventListener.factory.EventListenerThreadingDecorator observerThreadingDecorator -> observerThreadingDecorator
    32:42:void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
    45:55:void findContextObserver(java.lang.reflect.Method,com.google.inject.spi.TypeEncounter) -> findContextObserver
    67:69:void registerContextObserver(com.google.inject.spi.TypeEncounter,java.lang.reflect.Method,java.lang.Class,roboguice.event.EventThread) -> registerContextObserver
    77:80:void checkMethodParameters(java.lang.reflect.Method) -> checkMethodParameters
roboguice.event.ObservesTypeListener$ContextObserverMethodInjector -> roboguice.event.ObservesTypeListener$ContextObserverMethodInjector:
    roboguice.event.eventListener.factory.EventListenerThreadingDecorator observerThreadingDecorator -> observerThreadingDecorator
    com.google.inject.Provider eventManagerProvider -> eventManagerProvider
    java.lang.reflect.Method method -> method
    java.lang.Class event -> event
    roboguice.event.EventThread threadType -> threadType
    105:106:void afterInjection(java.lang.Object) -> afterInjection
roboguice.event.eventListener.AsynchronousEventListenerDecorator -> roboguice.event.eventListener.AsynchronousEventListenerDecorator:
    roboguice.event.EventListener eventListener -> eventListener
    android.os.Handler handler -> handler
    27:28:void onEvent(java.lang.Object) -> onEvent
roboguice.event.eventListener.EventListenerRunnable -> roboguice.event.eventListener.EventListenerRunnable:
    java.lang.Object event -> event
    roboguice.event.EventListener eventListener -> eventListener
    21:22:void run() -> run
roboguice.event.eventListener.ObserverMethodListener -> roboguice.event.eventListener.ObserverMethodListener:
    java.lang.String descriptor -> descriptor
    java.lang.reflect.Method method -> method
    java.lang.Object instance -> instance
    32:38:void onEvent(java.lang.Object) -> onEvent
    41:41:java.lang.Object getInstance() -> getInstance
    46:52:boolean equals(java.lang.Object) -> equals
    58:60:int hashCode() -> hashCode
roboguice.event.eventListener.RunnableAsyncTaskAdaptor -> roboguice.event.eventListener.RunnableAsyncTaskAdaptor:
    java.lang.Runnable runnable -> runnable
    26:27:java.lang.Void call() -> call
    12:12:java.lang.Object call() -> call
roboguice.event.eventListener.UIThreadEventListenerDecorator -> roboguice.event.eventListener.UIThreadEventListenerDecorator:
    roboguice.event.EventListener eventListener -> eventListener
    android.os.Handler handler -> handler
    23:24:void onEvent(java.lang.Object) -> onEvent
roboguice.event.eventListener.factory.EventListenerThreadingDecorator -> roboguice.event.eventListener.factory.EventListenerThreadingDecorator:
    com.google.inject.Provider handlerProvider -> handlerProvider
    21:27:roboguice.event.EventListener decorate(roboguice.event.EventThread,roboguice.event.EventListener) -> decorate
roboguice.event.eventListener.factory.EventListenerThreadingDecorator$1 -> roboguice.event.eventListener.factory.EventListenerThreadingDecorator$1:
    int[] $SwitchMap$roboguice$event$EventThread -> $SwitchMap$roboguice$event$EventThread
roboguice.event.eventListener.javaassist.RuntimeSupport -> roboguice.event.eventListener.javaassist.RuntimeSupport:
    32:33:java.lang.String makeDescriptor(java.lang.reflect.Method) -> makeDescriptor
    43:50:java.lang.String makeDescriptor(java.lang.Class[],java.lang.Class) -> makeDescriptor
    54:83:void makeDesc(java.lang.StringBuffer,java.lang.Class) -> makeDesc
roboguice.event.javaassist.RuntimeSupport -> roboguice.event.javaassist.RuntimeSupport:
    32:33:java.lang.String makeDescriptor(java.lang.reflect.Method) -> makeDescriptor
    43:50:java.lang.String makeDescriptor(java.lang.Class[],java.lang.Class) -> makeDescriptor
    54:83:void makeDesc(java.lang.StringBuffer,java.lang.Class) -> makeDesc
roboguice.fragment.RoboDialogFragment -> roboguice.fragment.RoboDialogFragment:
    12:14:void onCreate(android.os.Bundle) -> onCreate
    18:20:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
roboguice.fragment.RoboFragment -> roboguice.fragment.RoboFragment:
    12:14:void onCreate(android.os.Bundle) -> onCreate
    18:20:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
roboguice.fragment.RoboListFragment -> roboguice.fragment.RoboListFragment:
    12:14:void onCreate(android.os.Bundle) -> onCreate
    18:20:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
roboguice.inject.AccountManagerProvider -> roboguice.inject.AccountManagerProvider:
    android.content.Context context -> context
    13:13:android.accounts.AccountManager get() -> get
    8:8:java.lang.Object get() -> get
roboguice.inject.AssetManagerProvider -> roboguice.inject.AssetManagerProvider:
    android.content.Context context -> context
    13:13:android.content.res.AssetManager get() -> get
    9:9:java.lang.Object get() -> get
roboguice.inject.ContentResolverProvider -> roboguice.inject.ContentResolverProvider:
    android.content.Context context -> context
    33:33:android.content.ContentResolver get() -> get
    27:27:java.lang.Object get() -> get
roboguice.inject.ContentView -> roboguice.inject.ContentView:
    int value() -> value
roboguice.inject.ContentViewListener -> roboguice.inject.ContentViewListener:
    android.app.Activity activity -> activity
    17:26:void optionallySetContentView(roboguice.activity.event.OnCreateEvent) -> optionallySetContentView
roboguice.inject.ContextScope -> roboguice.inject.ContextScope:
    java.lang.ThreadLocal contextThreadLocal -> contextThreadLocal
    java.util.Map applicationScopedObjects -> applicationScopedObjects
    android.app.Application application -> application
    76:92:void enter(android.content.Context) -> enter
    95:101:void exit(android.content.Context) -> exit
    104:104:com.google.inject.Provider scope(com.google.inject.Key,com.google.inject.Provider) -> scope
    128:133:java.util.Stack getContextStack() -> getContextStack
    137:149:java.util.Map getScopedObjectMap(android.content.Context) -> getScopedObjectMap
roboguice.inject.ContextScope$1 -> roboguice.inject.ContextScope$1:
    com.google.inject.Key val$key -> val$key
    com.google.inject.Provider val$unscoped -> val$unscoped
    roboguice.inject.ContextScope this$0 -> this$0
    106:120:java.lang.Object get() -> get
roboguice.inject.ContextScopedProvider -> roboguice.inject.ContextScopedProvider:
    roboguice.inject.ContextScope scope -> scope
    com.google.inject.Provider provider -> provider
    14:21:java.lang.Object get(android.content.Context) -> get
roboguice.inject.ContextScopedRoboInjector -> roboguice.inject.ContextScopedRoboInjector:
    com.google.inject.Injector delegate -> delegate
    android.content.Context context -> context
    roboguice.inject.ContextScope scope -> scope
    roboguice.inject.ViewListener viewListener -> viewListener
    32:39:com.google.inject.Injector createChildInjector(java.lang.Iterable) -> createChildInjector
    44:51:com.google.inject.Injector createChildInjector(com.google.inject.Module[]) -> createChildInjector
    56:63:java.util.List findBindingsByType(com.google.inject.TypeLiteral) -> findBindingsByType
    68:75:java.util.Map getAllBindings() -> getAllBindings
    80:87:com.google.inject.Binding getBinding(com.google.inject.Key) -> getBinding
    92:99:com.google.inject.Binding getBinding(java.lang.Class) -> getBinding
    104:111:java.util.Map getBindings() -> getBindings
    116:123:com.google.inject.Binding getExistingBinding(com.google.inject.Key) -> getExistingBinding
    128:135:java.lang.Object getInstance(com.google.inject.Key) -> getInstance
    140:147:java.lang.Object getInstance(java.lang.Class) -> getInstance
    152:159:com.google.inject.MembersInjector getMembersInjector(java.lang.Class) -> getMembersInjector
    164:171:com.google.inject.MembersInjector getMembersInjector(com.google.inject.TypeLiteral) -> getMembersInjector
    176:183:com.google.inject.Injector getParent() -> getParent
    188:195:com.google.inject.Provider getProvider(com.google.inject.Key) -> getProvider
    200:207:com.google.inject.Provider getProvider(java.lang.Class) -> getProvider
    212:219:java.util.Map getScopeBindings() -> getScopeBindings
    224:231:java.util.Set getTypeConverterBindings() -> getTypeConverterBindings
    236:237:void injectMembers(java.lang.Object) -> injectMembers
    240:248:void injectMembersWithoutViews(java.lang.Object) -> injectMembersWithoutViews
    252:263:void injectViewMembers(android.app.Activity) -> injectViewMembers
    267:275:void injectViewMembers(android.support.v4.app.Fragment) -> injectViewMembers
roboguice.inject.ContextScopedSystemServiceProvider -> roboguice.inject.ContextScopedSystemServiceProvider:
    com.google.inject.Provider contextProvider -> contextProvider
    java.lang.String serviceName -> serviceName
    34:34:java.lang.Object get() -> get
roboguice.inject.ContextSingleton -> roboguice.inject.ContextSingleton:
roboguice.inject.ExtraConverter -> roboguice.inject.ExtraConverter:
    java.lang.Object convert(java.lang.Object) -> convert
roboguice.inject.ExtrasListener -> roboguice.inject.ExtrasListener:
    com.google.inject.Provider contextProvider -> contextProvider
    48:57:void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
roboguice.inject.ExtrasListener$ExtrasMembersInjector -> roboguice.inject.ExtrasListener$ExtrasMembersInjector:
    java.lang.reflect.Field field -> field
    com.google.inject.Provider contextProvider -> contextProvider
    roboguice.inject.InjectExtra annotation -> annotation
    74:126:void injectMembers(java.lang.Object) -> injectMembers
    132:151:java.lang.Object convert(java.lang.reflect.Field,java.lang.Object,com.google.inject.Injector) -> convert
roboguice.inject.FragmentManagerProvider -> roboguice.inject.FragmentManagerProvider:
    android.app.Activity activity -> activity
    17:17:android.support.v4.app.FragmentManager get() -> get
    10:10:java.lang.Object get() -> get
roboguice.inject.HandlerProvider -> roboguice.inject.HandlerProvider:
    11:11:android.os.Handler get() -> get
    8:8:java.lang.Object get() -> get
roboguice.inject.InjectExtra -> roboguice.inject.InjectExtra:
    java.lang.String value() -> value
    boolean optional() -> optional
roboguice.inject.InjectFragment -> roboguice.inject.InjectFragment:
    int value() -> value
    java.lang.String tag() -> tag
roboguice.inject.InjectPreference -> roboguice.inject.InjectPreference:
    java.lang.String value() -> value
roboguice.inject.InjectResource -> roboguice.inject.InjectResource:
    int value() -> value
    java.lang.String name() -> name
roboguice.inject.InjectView -> roboguice.inject.InjectView:
    int value() -> value
    java.lang.String tag() -> tag
roboguice.inject.NullProvider -> roboguice.inject.NullProvider:
    9:9:java.lang.Object get() -> get
roboguice.inject.Nullable -> roboguice.inject.Nullable:
    13:13:boolean notNullable(java.lang.reflect.Field) -> notNullable
    17:21:boolean isNullable(java.lang.reflect.Field) -> isNullable
roboguice.inject.PreferenceListener -> roboguice.inject.PreferenceListener:
    java.util.ArrayList preferencesForInjection -> preferencesForInjection
    com.google.inject.Provider contextProvider -> contextProvider
    android.app.Application application -> application
    roboguice.inject.ContextScope scope -> scope
    51:59:void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
    63:64:void registerPreferenceForInjection(roboguice.inject.PreferenceListener$PreferenceMembersInjector) -> registerPreferenceForInjection
    67:69:void injectPreferenceViews() -> injectPreferenceViews
roboguice.inject.PreferenceListener$PreferenceMembersInjector -> roboguice.inject.PreferenceListener$PreferenceMembersInjector:
    java.lang.reflect.Field field -> field
    com.google.inject.Provider contextProvider -> contextProvider
    roboguice.inject.InjectPreference annotation -> annotation
    roboguice.inject.ContextScope scope -> scope
    java.lang.ref.WeakReference instanceRef -> instanceRef
    roboguice.inject.PreferenceListener this$0 -> this$0
    89:91:void injectMembers(java.lang.Object) -> injectMembers
    94:118:void reallyInjectMembers() -> reallyInjectMembers
roboguice.inject.ResourceFactory -> roboguice.inject.ResourceFactory:
    java.lang.Object get(int) -> get
roboguice.inject.ResourceListener -> roboguice.inject.ResourceListener:
    android.app.Application application -> application
    48:53:void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
    58:65:void requestStaticInjection(java.lang.Class[]) -> requestStaticInjection
roboguice.inject.ResourceListener$ResourceMembersInjector -> roboguice.inject.ResourceListener$ResourceMembersInjector:
    java.lang.reflect.Field field -> field
    android.app.Application application -> application
    roboguice.inject.InjectResource annotation -> annotation
    89:132:void injectMembers(java.lang.Object) -> injectMembers
    135:136:int getId(android.content.res.Resources,roboguice.inject.InjectResource) -> getId
roboguice.inject.ResourcesProvider -> roboguice.inject.ResourcesProvider:
    android.content.res.Resources resources -> resources
    40:40:android.content.res.Resources get() -> get
    29:29:java.lang.Object get() -> get
roboguice.inject.RoboApplicationProvider -> roboguice.inject.RoboApplicationProvider:
    android.app.Application application -> application
    35:35:android.app.Application get() -> get
    28:28:java.lang.Object get() -> get
roboguice.inject.RoboInjector -> roboguice.inject.RoboInjector:
    void injectViewMembers(android.app.Activity) -> injectViewMembers
    void injectViewMembers(android.support.v4.app.Fragment) -> injectViewMembers
    void injectMembersWithoutViews(java.lang.Object) -> injectMembersWithoutViews
roboguice.inject.SharedPreferencesName -> roboguice.inject.SharedPreferencesName:
roboguice.inject.SharedPreferencesProvider -> roboguice.inject.SharedPreferencesProvider:
    java.lang.String ROBOGUICE_1_DEFAULT_FILENAME -> ROBOGUICE_1_DEFAULT_FILENAME
    java.lang.String preferencesName -> preferencesName
    android.app.Application application -> application
    56:62:android.content.SharedPreferences get() -> get
    35:35:java.lang.Object get() -> get
roboguice.inject.SharedPreferencesProvider$PreferencesNameHolder -> roboguice.inject.SharedPreferencesProvider$PreferencesNameHolder:
    java.lang.String value -> value
roboguice.inject.StringResourceFactory -> roboguice.inject.StringResourceFactory:
    android.content.res.Resources resources -> resources
    38:38:java.lang.String get(int) -> get
    27:27:java.lang.Object get(int) -> get
roboguice.inject.SystemServiceProvider -> roboguice.inject.SystemServiceProvider:
    android.app.Application application -> application
    java.lang.String serviceName -> serviceName
    35:35:java.lang.Object get() -> get
roboguice.inject.ViewListener -> roboguice.inject.ViewListener:
    java.lang.Class fragmentClass -> fragmentClass
    java.lang.Class fragmentManagerClass -> fragmentManagerClass
    java.lang.reflect.Method fragmentGetViewMethod -> fragmentGetViewMethod
    java.lang.reflect.Method fragmentFindFragmentByIdMethod -> fragmentFindFragmentByIdMethod
    java.lang.reflect.Method fragmentFindFragmentByTagMethod -> fragmentFindFragmentByTagMethod
    59:82:void hear(com.google.inject.TypeLiteral,com.google.inject.spi.TypeEncounter) -> hear
roboguice.inject.ViewListener$ViewMembersInjector -> roboguice.inject.ViewListener$ViewMembersInjector:
    java.util.WeakHashMap viewMembersInjectors -> viewMembersInjectors
    java.lang.reflect.Field field -> field
    java.lang.annotation.Annotation annotation -> annotation
    java.lang.ref.WeakReference instanceRef -> instanceRef
    com.google.inject.Provider fragmentManagerProvider -> fragmentManagerProvider
    com.google.inject.Provider activityProvider -> activityProvider
    115:134:void injectMembers(java.lang.Object) -> injectMembers
    137:141:void reallyInjectMembers(java.lang.Object) -> reallyInjectMembers
    158:194:void reallyInjectMemberViews(java.lang.Object) -> reallyInjectMemberViews
    202:237:void reallyInjectMemberFragments(java.lang.Object) -> reallyInjectMemberFragments
    241:248:void injectViews(java.lang.Object) -> injectViews
roboguice.receiver.RoboBroadcastReceiver -> roboguice.receiver.RoboBroadcastReceiver:
    24:28:void onReceive(android.content.Context,android.content.Intent) -> onReceive
    40:40:void handleReceive(android.content.Context,android.content.Intent) -> handleReceive
roboguice.service.RoboIntentService -> roboguice.service.RoboIntentService:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    57:62:void onCreate() -> onCreate
    66:68:void onStart(android.content.Intent,int) -> onStart
    74:83:void onDestroy() -> onDestroy
    87:90:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    94:94:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.service.RoboService -> roboguice.service.RoboService:
    roboguice.event.EventManager eventManager -> eventManager
    java.util.HashMap scopedObjects -> scopedObjects
    61:66:void onCreate() -> onCreate
    70:72:void onStart(android.content.Intent,int) -> onStart
    77:86:void onDestroy() -> onDestroy
    90:93:void onConfigurationChanged(android.content.res.Configuration) -> onConfigurationChanged
    97:97:java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.service.event.OnConfigurationChangedEvent -> roboguice.service.event.OnConfigurationChangedEvent:
    android.content.res.Configuration oldConfig -> oldConfig
    android.content.res.Configuration newConfig -> newConfig
    22:22:android.content.res.Configuration getOldConfig() -> getOldConfig
    26:26:android.content.res.Configuration getNewConfig() -> getNewConfig
roboguice.service.event.OnCreateEvent -> roboguice.service.event.OnCreateEvent:
roboguice.service.event.OnDestroyEvent -> roboguice.service.event.OnDestroyEvent:
roboguice.service.event.OnStartEvent -> roboguice.service.event.OnStartEvent:
roboguice.test.RobolectricRoboTestRunner -> roboguice.test.RobolectricRoboTestRunner:
    42:45:void bindShadowClasses() -> bindShadowClasses
roboguice.test.shadow.ShadowFragment -> roboguice.test.shadow.ShadowFragment:
    android.support.v4.app.FragmentActivity activity -> activity
    android.view.View view -> view
    19:19:android.support.v4.app.FragmentActivity getActivity() -> getActivity
    24:24:android.view.View getView() -> getView
    29:30:void onViewCreated(android.view.View,android.os.Bundle) -> onViewCreated
    34:35:void onAttach(android.app.Activity) -> onAttach
roboguice.test.shadow.ShadowFragmentActivity -> roboguice.test.shadow.ShadowFragmentActivity:
    22:22:android.support.v4.app.FragmentManager getSupportFragmentManager() -> getSupportFragmentManager
roboguice.test.shadow.ShadowFragmentActivity$1 -> roboguice.test.shadow.ShadowFragmentActivity$1:
    roboguice.test.shadow.ShadowFragmentActivity this$0 -> this$0
    25:25:void addOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> addOnBackStackChangedListener
    29:29:android.support.v4.app.FragmentTransaction beginTransaction() -> beginTransaction
    154:154:boolean executePendingTransactions() -> executePendingTransactions
    159:159:android.support.v4.app.Fragment findFragmentById(int) -> findFragmentById
    164:164:android.support.v4.app.Fragment findFragmentByTag(java.lang.String) -> findFragmentByTag
    169:169:void popBackStack() -> popBackStack
    173:173:boolean popBackStackImmediate() -> popBackStackImmediate
    178:178:void popBackStack(java.lang.String,int) -> popBackStack
    182:182:boolean popBackStackImmediate(java.lang.String,int) -> popBackStackImmediate
    187:187:void popBackStack(int,int) -> popBackStack
    191:191:boolean popBackStackImmediate(int,int) -> popBackStackImmediate
    196:196:int getBackStackEntryCount() -> getBackStackEntryCount
    201:201:android.support.v4.app.FragmentManager$BackStackEntry getBackStackEntryAt(int) -> getBackStackEntryAt
    206:206:void removeOnBackStackChangedListener(android.support.v4.app.FragmentManager$OnBackStackChangedListener) -> removeOnBackStackChangedListener
    210:210:void putFragment(android.os.Bundle,java.lang.String,android.support.v4.app.Fragment) -> putFragment
    214:214:android.support.v4.app.Fragment getFragment(android.os.Bundle,java.lang.String) -> getFragment
    219:219:android.support.v4.app.Fragment$SavedState saveFragmentInstanceState(android.support.v4.app.Fragment) -> saveFragmentInstanceState
    224:224:void dump(java.lang.String,java.io.FileDescriptor,java.io.PrintWriter,java.lang.String[]) -> dump
roboguice.test.shadow.ShadowFragmentActivity$1$1 -> roboguice.test.shadow.ShadowFragmentActivity$1$1:
    roboguice.test.shadow.ShadowFragmentActivity$1 this$1 -> this$1
    32:32:android.support.v4.app.FragmentTransaction add(android.support.v4.app.Fragment,java.lang.String) -> add
    37:37:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment) -> add
    42:42:android.support.v4.app.FragmentTransaction add(int,android.support.v4.app.Fragment,java.lang.String) -> add
    47:47:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment) -> replace
    52:52:android.support.v4.app.FragmentTransaction replace(int,android.support.v4.app.Fragment,java.lang.String) -> replace
    57:57:android.support.v4.app.FragmentTransaction remove(android.support.v4.app.Fragment) -> remove
    62:62:android.support.v4.app.FragmentTransaction hide(android.support.v4.app.Fragment) -> hide
    67:67:android.support.v4.app.FragmentTransaction show(android.support.v4.app.Fragment) -> show
    72:72:android.support.v4.app.FragmentTransaction detach(android.support.v4.app.Fragment) -> detach
    77:77:android.support.v4.app.FragmentTransaction attach(android.support.v4.app.Fragment) -> attach
    82:82:boolean isEmpty() -> isEmpty
    87:87:android.support.v4.app.FragmentTransaction setCustomAnimations(int,int) -> setCustomAnimations
    92:92:android.support.v4.app.FragmentTransaction setTransition(int) -> setTransition
    97:97:android.support.v4.app.FragmentTransaction setTransitionStyle(int) -> setTransitionStyle
    102:102:android.support.v4.app.FragmentTransaction addToBackStack(java.lang.String) -> addToBackStack
    107:107:boolean isAddToBackStackAllowed() -> isAddToBackStackAllowed
    112:112:android.support.v4.app.FragmentTransaction disallowAddToBackStack() -> disallowAddToBackStack
    117:117:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(int) -> setBreadCrumbTitle
    122:122:android.support.v4.app.FragmentTransaction setBreadCrumbTitle(java.lang.CharSequence) -> setBreadCrumbTitle
    127:127:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(int) -> setBreadCrumbShortTitle
    132:132:android.support.v4.app.FragmentTransaction setBreadCrumbShortTitle(java.lang.CharSequence) -> setBreadCrumbShortTitle
    137:137:int commit() -> commit
    142:142:int commitAllowingStateLoss() -> commitAllowingStateLoss
    147:147:android.support.v4.app.FragmentTransaction setCustomAnimations(int,int,int,int) -> setCustomAnimations
roboguice.util.Ln -> roboguice.util.Ln:
    roboguice.util.Ln$BaseConfig config -> config
    roboguice.util.Ln$Print print -> print
    75:75:int v(java.lang.Throwable) -> v
    79:84:int v(java.lang.Object,java.lang.Object[]) -> v
    88:93:int v(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> v
    97:97:int d(java.lang.Throwable) -> d
    101:106:int d(java.lang.Object,java.lang.Object[]) -> d
    110:115:int d(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> d
    119:119:int i(java.lang.Throwable) -> i
    123:128:int i(java.lang.Object,java.lang.Object[]) -> i
    132:137:int i(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> i
    141:141:int w(java.lang.Throwable) -> w
    145:150:int w(java.lang.Object,java.lang.Object[]) -> w
    154:159:int w(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> w
    163:163:int e(java.lang.Throwable) -> e
    167:172:int e(java.lang.Object,java.lang.Object[]) -> e
    176:181:int e(java.lang.Throwable,java.lang.Object,java.lang.Object[]) -> e
    185:185:boolean isDebugEnabled() -> isDebugEnabled
    189:189:boolean isVerboseEnabled() -> isVerboseEnabled
    193:193:roboguice.util.Ln$Config getConfig() -> getConfig
    235:250:java.lang.String logLevelToString(int) -> logLevelToString
roboguice.util.Ln$BaseConfig -> roboguice.util.Ln$BaseConfig:
    int minimumLogLevel -> minimumLogLevel
    java.lang.String packageName -> packageName
    java.lang.String scope -> scope
    226:226:int getLoggingLevel() -> getLoggingLevel
    230:231:void setLoggingLevel(int) -> setLoggingLevel
roboguice.util.Ln$Config -> roboguice.util.Ln$Config:
    int getLoggingLevel() -> getLoggingLevel
    void setLoggingLevel(int) -> setLoggingLevel
roboguice.util.Ln$Print -> roboguice.util.Ln$Print:
    257:257:int println(int,java.lang.String) -> println
    261:263:java.lang.String processMessage(java.lang.String) -> processMessage
    267:272:java.lang.String getScope(int) -> getScope
roboguice.util.RoboAsyncTask -> roboguice.util.RoboAsyncTask:
    android.content.Context context -> context
    37:37:android.content.Context getContext() -> getContext
roboguice.util.RoboContext -> roboguice.util.RoboContext:
    java.util.Map getScopedObjectMap() -> getScopedObjectMap
roboguice.util.SafeAsyncTask -> roboguice.util.SafeAsyncTask:
    int DEFAULT_POOL_SIZE -> DEFAULT_POOL_SIZE
    java.util.concurrent.Executor DEFAULT_EXECUTOR -> DEFAULT_EXECUTOR
    android.os.Handler handler -> handler
    java.util.concurrent.Executor executor -> executor
    java.lang.StackTraceElement[] launchLocation -> launchLocation
    java.util.concurrent.FutureTask future -> future
    67:68:java.util.concurrent.FutureTask future() -> future
    72:73:roboguice.util.SafeAsyncTask executor(java.util.concurrent.Executor) -> executor
    77:77:java.util.concurrent.Executor executor() -> executor
    81:82:roboguice.util.SafeAsyncTask handler(android.os.Handler) -> handler
    86:86:android.os.Handler handler() -> handler
    90:91:void execute() -> execute
    94:96:void execute(java.lang.StackTraceElement[]) -> execute
    99:102:boolean cancel(boolean) -> cancel
    109:109:void onPreExecute() -> onPreExecute
    116:116:void onSuccess(java.lang.Object) -> onSuccess
    129:130:void onInterrupted(java.lang.Exception) -> onInterrupted
    140:141:void onException(java.lang.Exception) -> onException
    144:145:void onThrowable(java.lang.Throwable) -> onThrowable
    150:150:void onFinally() -> onFinally
    154:154:roboguice.util.SafeAsyncTask$Task newTask() -> newTask
roboguice.util.SafeAsyncTask$Task -> roboguice.util.SafeAsyncTask$Task:
    roboguice.util.SafeAsyncTask parent -> parent
    android.os.Handler handler -> handler
    169:191:java.lang.Void call() -> call
    195:201:void doPreExecute() -> doPreExecute
    204:204:java.lang.Object doCall() -> doCall
    208:214:void doSuccess(java.lang.Object) -> doSuccess
    217:231:void doException(java.lang.Exception) -> doException
    234:245:void doThrowable(java.lang.Throwable) -> doThrowable
    248:254:void doFinally() -> doFinally
    265:290:void postToUiThreadAndWait(java.util.concurrent.Callable) -> postToUiThreadAndWait
    158:158:java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$1 -> roboguice.util.SafeAsyncTask$Task$1:
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    197:198:java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$2 -> roboguice.util.SafeAsyncTask$Task$2:
    java.lang.Object val$r -> val$r
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    210:211:java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$3 -> roboguice.util.SafeAsyncTask$Task$3:
    java.lang.Exception val$e -> val$e
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    224:228:java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$4 -> roboguice.util.SafeAsyncTask$Task$4:
    java.lang.Throwable val$e -> val$e
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    241:242:java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$5 -> roboguice.util.SafeAsyncTask$Task$5:
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    250:251:java.lang.Object call() -> call
roboguice.util.SafeAsyncTask$Task$6 -> roboguice.util.SafeAsyncTask$Task$6:
    java.util.concurrent.Callable val$c -> val$c
    java.lang.Exception[] val$exceptions -> val$exceptions
    java.util.concurrent.CountDownLatch val$latch -> val$latch
    roboguice.util.SafeAsyncTask$Task this$0 -> this$0
    275:281:void run() -> run
roboguice.util.Strings -> roboguice.util.Strings:
    int DEFAULT_BUFFER_SIZE -> DEFAULT_BUFFER_SIZE
    22:32:java.lang.String joinAnd(java.lang.String,java.lang.String,java.util.Collection) -> joinAnd
    36:36:java.lang.String joinAnd(java.lang.String,java.lang.String,java.lang.Object[]) -> joinAnd
    40:50:java.lang.String join(java.lang.String,java.util.Collection) -> join
    54:54:java.lang.String join(java.lang.String,java.lang.Object[]) -> join
    58:60:java.lang.String toString(java.io.InputStream) -> toString
    64:66:java.lang.String toString(java.io.Reader) -> toString
    70:71:int copy(java.io.Reader,java.io.Writer) -> copy
    76:85:long copyLarge(java.io.Reader,java.io.Writer) -> copyLarge
    90:90:java.lang.String toString(java.lang.Object) -> toString
    94:94:java.lang.String toString(java.lang.Object,java.lang.String) -> toString
    102:102:boolean isEmpty(java.lang.Object) -> isEmpty
    106:106:boolean notEmpty(java.lang.Object) -> notEmpty
    114:131:java.lang.String md5(java.lang.String) -> md5
    136:137:java.lang.String capitalize(java.lang.String) -> capitalize
    141:141:boolean equals(java.lang.Object,java.lang.Object) -> equals
    145:145:boolean equalsIgnoreCase(java.lang.Object,java.lang.Object) -> equalsIgnoreCase
    149:158:java.lang.String[] chunk(java.lang.String,int) -> chunk
    162:165:java.lang.String namedFormat(java.lang.String,java.util.Map) -> namedFormat
    169:176:java.lang.String namedFormat(java.lang.String,java.lang.Object[]) -> namedFormat
